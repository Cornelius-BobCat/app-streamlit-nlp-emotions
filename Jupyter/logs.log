2023-05-24 10:48:00,769:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-24 10:48:00,769:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-24 10:48:00,769:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-24 10:48:00,769:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-24 10:48:05,627:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-24 10:48:18,163:INFO:PyCaret ClassificationExperiment
2023-05-24 10:48:18,163:INFO:Logging name: clf-default-name
2023-05-24 10:48:18,163:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-24 10:48:18,163:INFO:version 3.0.2
2023-05-24 10:48:18,163:INFO:Initializing setup()
2023-05-24 10:48:18,163:INFO:self.USI: b4d9
2023-05-24 10:48:18,163:INFO:self._variable_keys: {'log_plots_param', 'y_train', 'logging_param', 'seed', 'memory', 'fold_generator', 'fold_shuffle_param', 'html_param', 'exp_id', 'idx', 'X_train', 'exp_name_log', 'data', 'USI', 'X_test', 'pipeline', 'fold_groups_param', 'n_jobs_param', 'y', 'gpu_n_jobs_param', 'y_test', '_ml_usecase', '_available_plots', 'is_multiclass', 'target_param', 'fix_imbalance', 'X', 'gpu_param'}
2023-05-24 10:48:18,163:INFO:Checking environment
2023-05-24 10:48:18,163:INFO:python_version: 3.10.9
2023-05-24 10:48:18,163:INFO:python_build: ('main', 'Mar  1 2023 12:20:14')
2023-05-24 10:48:18,163:INFO:machine: arm64
2023-05-24 10:48:18,163:INFO:platform: macOS-13.3.1-arm64-arm-64bit
2023-05-24 10:48:18,163:INFO:Memory: svmem(total=17179869184, available=5986353152, percent=65.2, used=7633453056, free=631488512, active=5334253568, inactive=5301551104, wired=2299199488)
2023-05-24 10:48:18,163:INFO:Physical Core: 8
2023-05-24 10:48:18,164:INFO:Logical Core: 8
2023-05-24 10:48:18,164:INFO:Checking libraries
2023-05-24 10:48:18,164:INFO:System:
2023-05-24 10:48:18,164:INFO:    python: 3.10.9 (main, Mar  1 2023, 12:20:14) [Clang 14.0.6 ]
2023-05-24 10:48:18,164:INFO:executable: /Users/corneliusvincent/anaconda3/bin/python
2023-05-24 10:48:18,164:INFO:   machine: macOS-13.3.1-arm64-arm-64bit
2023-05-24 10:48:18,164:INFO:PyCaret required dependencies:
2023-05-24 10:48:18,164:INFO:                 pip: 23.1.2
2023-05-24 10:48:18,164:INFO:          setuptools: 65.6.3
2023-05-24 10:48:18,164:INFO:             pycaret: 3.0.2
2023-05-24 10:48:18,164:INFO:             IPython: 8.10.0
2023-05-24 10:48:18,164:INFO:          ipywidgets: 8.0.6
2023-05-24 10:48:18,164:INFO:                tqdm: 4.64.1
2023-05-24 10:48:18,164:INFO:               numpy: 1.23.5
2023-05-24 10:48:18,164:INFO:              pandas: 1.5.3
2023-05-24 10:48:18,164:INFO:              jinja2: 3.1.2
2023-05-24 10:48:18,164:INFO:               scipy: 1.9.3
2023-05-24 10:48:18,164:INFO:              joblib: 1.2.0
2023-05-24 10:48:18,164:INFO:             sklearn: 1.2.2
2023-05-24 10:48:18,164:INFO:                pyod: 1.0.9
2023-05-24 10:48:18,164:INFO:            imblearn: 0.10.1
2023-05-24 10:48:18,164:INFO:   category_encoders: 2.6.1
2023-05-24 10:48:18,164:INFO:            lightgbm: 3.3.5
2023-05-24 10:48:18,164:INFO:               numba: 0.56.4
2023-05-24 10:48:18,164:INFO:            requests: 2.28.1
2023-05-24 10:48:18,164:INFO:          matplotlib: 3.6.3
2023-05-24 10:48:18,164:INFO:          scikitplot: 0.3.7
2023-05-24 10:48:18,164:INFO:         yellowbrick: 1.5
2023-05-24 10:48:18,164:INFO:              plotly: 5.9.0
2023-05-24 10:48:18,164:INFO:             kaleido: 0.2.1
2023-05-24 10:48:18,164:INFO:         statsmodels: 0.13.5
2023-05-24 10:48:18,164:INFO:              sktime: 0.17.0
2023-05-24 10:48:18,164:INFO:               tbats: 1.1.3
2023-05-24 10:48:18,164:INFO:            pmdarima: 2.0.3
2023-05-24 10:48:18,164:INFO:              psutil: 5.9.0
2023-05-24 10:48:18,164:INFO:PyCaret optional dependencies:
2023-05-24 10:48:18,173:INFO:                shap: Not installed
2023-05-24 10:48:18,173:INFO:           interpret: Not installed
2023-05-24 10:48:18,173:INFO:                umap: Not installed
2023-05-24 10:48:18,173:INFO:    pandas_profiling: 4.1.2
2023-05-24 10:48:18,173:INFO:  explainerdashboard: Not installed
2023-05-24 10:48:18,173:INFO:             autoviz: Not installed
2023-05-24 10:48:18,173:INFO:           fairlearn: Not installed
2023-05-24 10:48:18,173:INFO:             xgboost: Not installed
2023-05-24 10:48:18,173:INFO:            catboost: Not installed
2023-05-24 10:48:18,173:INFO:              kmodes: Not installed
2023-05-24 10:48:18,173:INFO:             mlxtend: Not installed
2023-05-24 10:48:18,173:INFO:       statsforecast: Not installed
2023-05-24 10:48:18,173:INFO:        tune_sklearn: Not installed
2023-05-24 10:48:18,173:INFO:                 ray: Not installed
2023-05-24 10:48:18,173:INFO:            hyperopt: Not installed
2023-05-24 10:48:18,173:INFO:              optuna: Not installed
2023-05-24 10:48:18,173:INFO:               skopt: Not installed
2023-05-24 10:48:18,173:INFO:              mlflow: Not installed
2023-05-24 10:48:18,173:INFO:              gradio: Not installed
2023-05-24 10:48:18,173:INFO:             fastapi: Not installed
2023-05-24 10:48:18,173:INFO:             uvicorn: Not installed
2023-05-24 10:48:18,173:INFO:              m2cgen: Not installed
2023-05-24 10:48:18,173:INFO:           evidently: Not installed
2023-05-24 10:48:18,173:INFO:               fugue: Not installed
2023-05-24 10:48:18,173:INFO:           streamlit: 1.22.0
2023-05-24 10:48:18,173:INFO:             prophet: Not installed
2023-05-24 10:48:18,173:INFO:None
2023-05-24 10:48:18,173:INFO:Set up data.
2023-05-24 10:48:18,227:INFO:Set up train/test split.
2023-05-24 10:48:18,260:INFO:Set up index.
2023-05-24 10:48:18,260:INFO:Set up folding strategy.
2023-05-24 10:48:18,260:INFO:Assigning column types.
2023-05-24 10:48:18,261:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-24 10:48:18,280:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-24 10:48:18,280:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 10:48:18,295:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:48:18,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:48:18,948:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-24 10:48:18,949:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 10:48:18,964:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:48:18,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:48:18,964:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-24 10:48:18,984:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 10:48:18,995:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:48:18,995:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:48:19,014:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 10:48:19,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:48:19,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:48:19,026:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-24 10:48:19,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:48:19,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:48:19,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:48:19,088:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:48:19,090:INFO:Preparing preprocessing pipeline...
2023-05-24 10:48:19,091:INFO:Set up label encoding.
2023-05-24 10:48:19,091:INFO:Set up simple imputation.
2023-05-24 10:48:19,093:INFO:Set up encoding of categorical features.
2023-05-24 10:48:19,365:INFO:Finished creating preprocessing pipeline.
2023-05-24 10:48:19,368:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/nz/xhcvl6_17cb_xn608wktx0bc0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Text', 'Clean_Text'],
                                    transformer=TargetEncoder(cols=['Text',
                                                                    'Clean_Text'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-24 10:48:19,368:INFO:Creating final display dataframe.
2023-05-24 10:48:19,953:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                 246  
1                                             Emotion  
2                                          Multiclass  
3   anger: 0, disgust: 1, fear: 2, joy: 3, neutral...  
4                                          (34792, 3)  
5                                          (34792, 3)  
6                                          (24354, 3)  
7                                          (10438, 3)  
8                                                   2  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               b4d9  
2023-05-24 10:48:19,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:48:19,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:48:20,023:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:48:20,023:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:48:20,023:INFO:setup() successfully completed in 1.91s...............
2023-05-24 10:48:34,442:INFO:Initializing compare_models()
2023-05-24 10:48:34,443:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-24 10:48:34,443:INFO:Checking exceptions
2023-05-24 10:48:34,450:INFO:Preparing display monitor
2023-05-24 10:48:34,481:INFO:Initializing Logistic Regression
2023-05-24 10:48:34,481:INFO:Total runtime is 3.699461619059245e-06 minutes
2023-05-24 10:48:34,483:INFO:SubProcess create_model() called ==================================
2023-05-24 10:48:34,484:INFO:Initializing create_model()
2023-05-24 10:48:34,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x281e35180>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:48:34,484:INFO:Checking exceptions
2023-05-24 10:48:34,484:INFO:Importing libraries
2023-05-24 10:48:34,484:INFO:Copying training dataset
2023-05-24 10:48:34,489:INFO:Defining folds
2023-05-24 10:48:34,489:INFO:Declaring metric variables
2023-05-24 10:48:34,491:INFO:Importing untrained model
2023-05-24 10:48:34,492:INFO:Logistic Regression Imported successfully
2023-05-24 10:48:34,496:INFO:Starting cross validation
2023-05-24 10:48:34,497:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:48:38,746:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:38,756:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:38,764:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:38,767:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,065:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,074:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,079:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:39,083:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,493:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,499:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,502:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:39,505:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,555:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,561:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,564:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:39,567:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,605:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-24 10:48:39,717:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-24 10:48:39,784:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,792:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,798:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:39,801:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,838:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,844:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,848:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:39,851:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,964:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,970:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:39,973:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:39,976:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:40,075:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:40,081:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:40,084:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:40,087:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:41,400:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:41,406:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:41,409:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:41,412:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:41,412:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:41,417:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:41,420:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:41,423:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:41,447:INFO:Calculating mean and std
2023-05-24 10:48:41,448:INFO:Creating metrics dataframe
2023-05-24 10:48:41,483:INFO:Uploading results into container
2023-05-24 10:48:41,483:INFO:Uploading model into container now
2023-05-24 10:48:41,483:INFO:_master_model_container: 1
2023-05-24 10:48:41,484:INFO:_display_container: 2
2023-05-24 10:48:41,484:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=246, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-24 10:48:41,484:INFO:create_model() successfully completed......................................
2023-05-24 10:48:41,597:INFO:SubProcess create_model() end ==================================
2023-05-24 10:48:41,597:INFO:Creating metrics dataframe
2023-05-24 10:48:41,601:INFO:Initializing K Neighbors Classifier
2023-05-24 10:48:41,601:INFO:Total runtime is 0.11866269906361898 minutes
2023-05-24 10:48:41,602:INFO:SubProcess create_model() called ==================================
2023-05-24 10:48:41,602:INFO:Initializing create_model()
2023-05-24 10:48:41,602:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x281e35180>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:48:41,602:INFO:Checking exceptions
2023-05-24 10:48:41,602:INFO:Importing libraries
2023-05-24 10:48:41,602:INFO:Copying training dataset
2023-05-24 10:48:41,605:INFO:Defining folds
2023-05-24 10:48:41,605:INFO:Declaring metric variables
2023-05-24 10:48:41,606:INFO:Importing untrained model
2023-05-24 10:48:41,608:INFO:K Neighbors Classifier Imported successfully
2023-05-24 10:48:41,611:INFO:Starting cross validation
2023-05-24 10:48:41,612:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:48:42,810:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,816:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,820:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:42,822:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,827:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,834:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,837:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:42,840:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,868:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,874:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,879:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:42,882:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,892:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,898:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,901:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:42,902:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,904:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,908:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,911:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:42,914:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,958:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,965:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,969:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:42,971:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,972:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,981:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,985:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:42,986:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,988:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,992:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:42,995:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:42,998:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:43,578:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:43,584:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:43,587:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:43,590:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:43,690:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:43,696:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:43,699:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:43,702:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:43,711:INFO:Calculating mean and std
2023-05-24 10:48:43,711:INFO:Creating metrics dataframe
2023-05-24 10:48:43,752:INFO:Uploading results into container
2023-05-24 10:48:43,753:INFO:Uploading model into container now
2023-05-24 10:48:43,753:INFO:_master_model_container: 2
2023-05-24 10:48:43,753:INFO:_display_container: 2
2023-05-24 10:48:43,753:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-24 10:48:43,753:INFO:create_model() successfully completed......................................
2023-05-24 10:48:43,853:INFO:SubProcess create_model() end ==================================
2023-05-24 10:48:43,853:INFO:Creating metrics dataframe
2023-05-24 10:48:43,857:INFO:Initializing Naive Bayes
2023-05-24 10:48:43,857:INFO:Total runtime is 0.15626536607742308 minutes
2023-05-24 10:48:43,858:INFO:SubProcess create_model() called ==================================
2023-05-24 10:48:43,859:INFO:Initializing create_model()
2023-05-24 10:48:43,859:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x281e35180>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:48:43,859:INFO:Checking exceptions
2023-05-24 10:48:43,859:INFO:Importing libraries
2023-05-24 10:48:43,859:INFO:Copying training dataset
2023-05-24 10:48:43,862:INFO:Defining folds
2023-05-24 10:48:43,862:INFO:Declaring metric variables
2023-05-24 10:48:43,863:INFO:Importing untrained model
2023-05-24 10:48:43,864:INFO:Naive Bayes Imported successfully
2023-05-24 10:48:43,867:INFO:Starting cross validation
2023-05-24 10:48:43,868:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:48:44,569:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,586:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,589:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:44,592:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,675:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,691:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,701:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:44,705:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,722:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,728:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,731:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:44,734:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,734:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,750:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,752:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,754:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:44,756:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,758:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,762:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:44,764:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,798:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,804:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,808:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:44,810:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,830:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,837:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,842:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:44,845:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,847:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,854:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:44,857:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:44,860:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:45,285:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:45,291:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:45,294:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:45,297:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:45,367:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:45,372:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:45,375:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:45,378:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:45,386:INFO:Calculating mean and std
2023-05-24 10:48:45,387:INFO:Creating metrics dataframe
2023-05-24 10:48:45,424:INFO:Uploading results into container
2023-05-24 10:48:45,425:INFO:Uploading model into container now
2023-05-24 10:48:45,425:INFO:_master_model_container: 3
2023-05-24 10:48:45,425:INFO:_display_container: 2
2023-05-24 10:48:45,425:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-24 10:48:45,425:INFO:create_model() successfully completed......................................
2023-05-24 10:48:45,522:INFO:SubProcess create_model() end ==================================
2023-05-24 10:48:45,522:INFO:Creating metrics dataframe
2023-05-24 10:48:45,526:INFO:Initializing Decision Tree Classifier
2023-05-24 10:48:45,526:INFO:Total runtime is 0.18408699830373126 minutes
2023-05-24 10:48:45,528:INFO:SubProcess create_model() called ==================================
2023-05-24 10:48:45,528:INFO:Initializing create_model()
2023-05-24 10:48:45,528:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x281e35180>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:48:45,528:INFO:Checking exceptions
2023-05-24 10:48:45,528:INFO:Importing libraries
2023-05-24 10:48:45,528:INFO:Copying training dataset
2023-05-24 10:48:45,530:INFO:Defining folds
2023-05-24 10:48:45,530:INFO:Declaring metric variables
2023-05-24 10:48:45,532:INFO:Importing untrained model
2023-05-24 10:48:45,533:INFO:Decision Tree Classifier Imported successfully
2023-05-24 10:48:45,536:INFO:Starting cross validation
2023-05-24 10:48:45,537:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:48:46,284:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,290:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,294:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:46,297:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,373:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,379:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,381:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,382:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:46,385:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,387:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,387:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,390:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:46,393:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,394:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,397:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:46,401:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,457:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,457:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,462:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,463:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,466:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:46,466:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:46,466:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,468:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,469:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,472:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,481:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:46,484:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,529:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,535:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,538:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:46,540:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,969:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,975:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:46,978:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:46,981:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:47,039:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:47,045:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:47,048:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:47,050:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:47,060:INFO:Calculating mean and std
2023-05-24 10:48:47,060:INFO:Creating metrics dataframe
2023-05-24 10:48:47,099:INFO:Uploading results into container
2023-05-24 10:48:47,099:INFO:Uploading model into container now
2023-05-24 10:48:47,099:INFO:_master_model_container: 4
2023-05-24 10:48:47,099:INFO:_display_container: 2
2023-05-24 10:48:47,100:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=246, splitter='best')
2023-05-24 10:48:47,100:INFO:create_model() successfully completed......................................
2023-05-24 10:48:47,199:INFO:SubProcess create_model() end ==================================
2023-05-24 10:48:47,199:INFO:Creating metrics dataframe
2023-05-24 10:48:47,204:INFO:Initializing SVM - Linear Kernel
2023-05-24 10:48:47,204:INFO:Total runtime is 0.21204003095626828 minutes
2023-05-24 10:48:47,205:INFO:SubProcess create_model() called ==================================
2023-05-24 10:48:47,205:INFO:Initializing create_model()
2023-05-24 10:48:47,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x281e35180>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:48:47,205:INFO:Checking exceptions
2023-05-24 10:48:47,205:INFO:Importing libraries
2023-05-24 10:48:47,205:INFO:Copying training dataset
2023-05-24 10:48:47,208:INFO:Defining folds
2023-05-24 10:48:47,208:INFO:Declaring metric variables
2023-05-24 10:48:47,209:INFO:Importing untrained model
2023-05-24 10:48:47,211:INFO:SVM - Linear Kernel Imported successfully
2023-05-24 10:48:47,214:INFO:Starting cross validation
2023-05-24 10:48:47,215:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:48:48,321:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:48:48,326:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,342:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,352:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:48,367:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,463:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:48:48,466:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,474:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,477:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:48,480:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,556:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:48:48,559:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,561:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:48:48,564:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,578:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,580:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:48:48,583:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,585:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,587:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:48,590:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,590:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,594:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:48,598:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,602:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:48,605:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,611:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:48:48,614:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,620:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,624:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:48,633:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:48:48,636:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,636:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,647:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,654:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:48,661:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,809:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:48:48,813:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,819:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:48,823:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:48,826:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:49,267:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:48:49,270:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:49,273:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:48:49,276:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:49,276:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:49,279:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:49,282:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:49,282:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:49,285:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:49,288:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:49,322:INFO:Calculating mean and std
2023-05-24 10:48:49,322:INFO:Creating metrics dataframe
2023-05-24 10:48:49,361:INFO:Uploading results into container
2023-05-24 10:48:49,361:INFO:Uploading model into container now
2023-05-24 10:48:49,361:INFO:_master_model_container: 5
2023-05-24 10:48:49,361:INFO:_display_container: 2
2023-05-24 10:48:49,362:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=246, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-24 10:48:49,362:INFO:create_model() successfully completed......................................
2023-05-24 10:48:49,461:INFO:SubProcess create_model() end ==================================
2023-05-24 10:48:49,461:INFO:Creating metrics dataframe
2023-05-24 10:48:49,465:INFO:Initializing Ridge Classifier
2023-05-24 10:48:49,466:INFO:Total runtime is 0.24973832766215004 minutes
2023-05-24 10:48:49,467:INFO:SubProcess create_model() called ==================================
2023-05-24 10:48:49,467:INFO:Initializing create_model()
2023-05-24 10:48:49,467:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x281e35180>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:48:49,467:INFO:Checking exceptions
2023-05-24 10:48:49,467:INFO:Importing libraries
2023-05-24 10:48:49,467:INFO:Copying training dataset
2023-05-24 10:48:49,470:INFO:Defining folds
2023-05-24 10:48:49,471:INFO:Declaring metric variables
2023-05-24 10:48:49,472:INFO:Importing untrained model
2023-05-24 10:48:49,474:INFO:Ridge Classifier Imported successfully
2023-05-24 10:48:49,477:INFO:Starting cross validation
2023-05-24 10:48:49,478:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:48:50,212:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:48:50,218:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,225:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:48:50,227:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,231:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,234:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:50,237:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,237:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,242:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:50,245:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,268:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:48:50,270:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,277:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,277:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:48:50,279:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,280:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:50,283:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,285:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,289:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:50,291:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,317:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:48:50,320:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,326:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,330:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:50,332:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,350:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:48:50,353:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,360:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:48:50,361:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,363:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,364:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:50,367:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,369:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,372:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:50,375:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,409:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:48:50,412:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,418:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,421:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:50,424:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,788:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:48:50,791:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,797:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,800:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:50,802:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,839:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:48:50,842:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,848:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,851:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:50,853:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:50,862:INFO:Calculating mean and std
2023-05-24 10:48:50,862:INFO:Creating metrics dataframe
2023-05-24 10:48:50,907:INFO:Uploading results into container
2023-05-24 10:48:50,907:INFO:Uploading model into container now
2023-05-24 10:48:50,907:INFO:_master_model_container: 6
2023-05-24 10:48:50,907:INFO:_display_container: 2
2023-05-24 10:48:50,907:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=246, solver='auto',
                tol=0.0001)
2023-05-24 10:48:50,907:INFO:create_model() successfully completed......................................
2023-05-24 10:48:51,005:INFO:SubProcess create_model() end ==================================
2023-05-24 10:48:51,005:INFO:Creating metrics dataframe
2023-05-24 10:48:51,010:INFO:Initializing Random Forest Classifier
2023-05-24 10:48:51,010:INFO:Total runtime is 0.27547323306401567 minutes
2023-05-24 10:48:51,011:INFO:SubProcess create_model() called ==================================
2023-05-24 10:48:51,011:INFO:Initializing create_model()
2023-05-24 10:48:51,011:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x281e35180>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:48:51,011:INFO:Checking exceptions
2023-05-24 10:48:51,011:INFO:Importing libraries
2023-05-24 10:48:51,011:INFO:Copying training dataset
2023-05-24 10:48:51,014:INFO:Defining folds
2023-05-24 10:48:51,014:INFO:Declaring metric variables
2023-05-24 10:48:51,015:INFO:Importing untrained model
2023-05-24 10:48:51,017:INFO:Random Forest Classifier Imported successfully
2023-05-24 10:48:51,020:INFO:Starting cross validation
2023-05-24 10:48:51,021:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:48:52,424:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,431:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,435:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:52,439:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,462:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,470:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,472:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,474:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:52,476:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,479:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,490:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:52,496:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,498:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,504:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,507:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:52,510:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,526:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,532:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,535:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:52,538:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,654:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,660:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,661:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,664:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:52,666:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,667:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,670:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:52,673:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,690:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,697:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:52,700:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:52,704:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:53,459:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:53,465:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:53,468:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:53,470:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:53,472:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:53,477:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:53,481:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:53,483:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:53,515:INFO:Calculating mean and std
2023-05-24 10:48:53,516:INFO:Creating metrics dataframe
2023-05-24 10:48:53,558:INFO:Uploading results into container
2023-05-24 10:48:53,559:INFO:Uploading model into container now
2023-05-24 10:48:53,559:INFO:_master_model_container: 7
2023-05-24 10:48:53,559:INFO:_display_container: 2
2023-05-24 10:48:53,559:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=246, verbose=0, warm_start=False)
2023-05-24 10:48:53,559:INFO:create_model() successfully completed......................................
2023-05-24 10:48:53,658:INFO:SubProcess create_model() end ==================================
2023-05-24 10:48:53,658:INFO:Creating metrics dataframe
2023-05-24 10:48:53,663:INFO:Initializing Quadratic Discriminant Analysis
2023-05-24 10:48:53,663:INFO:Total runtime is 0.3197003642717997 minutes
2023-05-24 10:48:53,665:INFO:SubProcess create_model() called ==================================
2023-05-24 10:48:53,665:INFO:Initializing create_model()
2023-05-24 10:48:53,665:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x281e35180>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:48:53,665:INFO:Checking exceptions
2023-05-24 10:48:53,665:INFO:Importing libraries
2023-05-24 10:48:53,665:INFO:Copying training dataset
2023-05-24 10:48:53,667:INFO:Defining folds
2023-05-24 10:48:53,668:INFO:Declaring metric variables
2023-05-24 10:48:53,669:INFO:Importing untrained model
2023-05-24 10:48:53,670:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-24 10:48:53,673:INFO:Starting cross validation
2023-05-24 10:48:53,674:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:48:54,058:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 10:48:54,094:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 10:48:54,118:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 10:48:54,141:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 10:48:54,149:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 10:48:54,208:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 10:48:54,222:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 10:48:54,279:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 10:48:54,355:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 10:48:54,355:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 10:48:54,355:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-24 10:48:54,405:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 10:48:54,405:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 10:48:54,405:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-24 10:48:54,423:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 10:48:54,423:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 10:48:54,423:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-24 10:48:54,426:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/validation.py", line 921, in check_array
    _assert_all_finite(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-05-24 10:48:54,429:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,437:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,441:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,444:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:54,447:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,448:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,451:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:54,454:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,486:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,492:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,496:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:54,498:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,506:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 10:48:54,506:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 10:48:54,507:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-24 10:48:54,512:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/validation.py", line 921, in check_array
    _assert_all_finite(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-05-24 10:48:54,516:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,521:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,524:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,528:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,531:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:54,532:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:54,534:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,535:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,546:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 10:48:54,546:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 10:48:54,546:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-24 10:48:54,603:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 10:48:54,603:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 10:48:54,603:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-24 10:48:54,604:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/validation.py", line 921, in check_array
    _assert_all_finite(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-05-24 10:48:54,607:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 10:48:54,607:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 10:48:54,607:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,607:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-24 10:48:54,614:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,617:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:54,620:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,654:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,660:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,663:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:54,664:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 10:48:54,664:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 10:48:54,664:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-24 10:48:54,666:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/validation.py", line 921, in check_array
    _assert_all_finite(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-05-24 10:48:54,666:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,668:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,674:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,677:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:54,680:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:54,837:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 10:48:54,867:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 10:48:55,114:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:55,119:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:55,122:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:55,125:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:55,174:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:55,180:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:55,183:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:55,185:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:55,195:INFO:Calculating mean and std
2023-05-24 10:48:55,196:INFO:Creating metrics dataframe
2023-05-24 10:48:55,239:INFO:Uploading results into container
2023-05-24 10:48:55,239:INFO:Uploading model into container now
2023-05-24 10:48:55,240:INFO:_master_model_container: 8
2023-05-24 10:48:55,240:INFO:_display_container: 2
2023-05-24 10:48:55,240:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-24 10:48:55,240:INFO:create_model() successfully completed......................................
2023-05-24 10:48:55,339:INFO:SubProcess create_model() end ==================================
2023-05-24 10:48:55,339:INFO:Creating metrics dataframe
2023-05-24 10:48:55,343:INFO:Initializing Ada Boost Classifier
2023-05-24 10:48:55,343:INFO:Total runtime is 0.3477000832557678 minutes
2023-05-24 10:48:55,344:INFO:SubProcess create_model() called ==================================
2023-05-24 10:48:55,345:INFO:Initializing create_model()
2023-05-24 10:48:55,345:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x281e35180>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:48:55,345:INFO:Checking exceptions
2023-05-24 10:48:55,345:INFO:Importing libraries
2023-05-24 10:48:55,345:INFO:Copying training dataset
2023-05-24 10:48:55,347:INFO:Defining folds
2023-05-24 10:48:55,347:INFO:Declaring metric variables
2023-05-24 10:48:55,349:INFO:Importing untrained model
2023-05-24 10:48:55,350:INFO:Ada Boost Classifier Imported successfully
2023-05-24 10:48:55,353:INFO:Starting cross validation
2023-05-24 10:48:55,354:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:48:56,524:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,530:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,533:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:56,536:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,547:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,548:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,555:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,559:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:56,559:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,561:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,563:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:56,563:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,566:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,570:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,573:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:56,579:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,581:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,588:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,595:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:56,597:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,614:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,622:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,625:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:56,628:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,634:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,640:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,644:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:56,646:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,757:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,762:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:56,766:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:56,768:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:57,513:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:57,517:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:57,518:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:57,521:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:57,523:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:57,524:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:57,526:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:48:57,529:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:48:57,568:INFO:Calculating mean and std
2023-05-24 10:48:57,569:INFO:Creating metrics dataframe
2023-05-24 10:48:57,610:INFO:Uploading results into container
2023-05-24 10:48:57,610:INFO:Uploading model into container now
2023-05-24 10:48:57,611:INFO:_master_model_container: 9
2023-05-24 10:48:57,611:INFO:_display_container: 2
2023-05-24 10:48:57,611:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=246)
2023-05-24 10:48:57,611:INFO:create_model() successfully completed......................................
2023-05-24 10:48:57,710:INFO:SubProcess create_model() end ==================================
2023-05-24 10:48:57,710:INFO:Creating metrics dataframe
2023-05-24 10:48:57,714:INFO:Initializing Gradient Boosting Classifier
2023-05-24 10:48:57,714:INFO:Total runtime is 0.387219230333964 minutes
2023-05-24 10:48:57,716:INFO:SubProcess create_model() called ==================================
2023-05-24 10:48:57,716:INFO:Initializing create_model()
2023-05-24 10:48:57,716:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x281e35180>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:48:57,716:INFO:Checking exceptions
2023-05-24 10:48:57,716:INFO:Importing libraries
2023-05-24 10:48:57,716:INFO:Copying training dataset
2023-05-24 10:48:57,719:INFO:Defining folds
2023-05-24 10:48:57,719:INFO:Declaring metric variables
2023-05-24 10:48:57,720:INFO:Importing untrained model
2023-05-24 10:48:57,721:INFO:Gradient Boosting Classifier Imported successfully
2023-05-24 10:48:57,724:INFO:Starting cross validation
2023-05-24 10:48:57,725:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:49:03,850:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:03,856:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:03,858:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:03,861:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:03,864:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:03,865:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:03,875:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:03,883:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:03,892:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:03,898:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:03,901:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:03,904:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:03,951:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:03,957:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:03,960:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:03,962:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:04,026:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:04,033:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:04,038:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:04,041:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:04,044:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:04,050:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:04,053:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:04,056:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:04,075:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:04,082:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:04,086:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:04,091:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:04,187:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:04,193:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:04,196:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:04,199:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:08,517:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:08,523:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:08,526:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:08,528:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:08,594:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:08,599:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:08,602:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:08,605:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:08,613:INFO:Calculating mean and std
2023-05-24 10:49:08,614:INFO:Creating metrics dataframe
2023-05-24 10:49:08,662:INFO:Uploading results into container
2023-05-24 10:49:08,663:INFO:Uploading model into container now
2023-05-24 10:49:08,663:INFO:_master_model_container: 10
2023-05-24 10:49:08,663:INFO:_display_container: 2
2023-05-24 10:49:08,664:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=246, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-24 10:49:08,664:INFO:create_model() successfully completed......................................
2023-05-24 10:49:08,768:INFO:SubProcess create_model() end ==================================
2023-05-24 10:49:08,768:INFO:Creating metrics dataframe
2023-05-24 10:49:08,773:INFO:Initializing Linear Discriminant Analysis
2023-05-24 10:49:08,773:INFO:Total runtime is 0.5715274810791016 minutes
2023-05-24 10:49:08,775:INFO:SubProcess create_model() called ==================================
2023-05-24 10:49:08,775:INFO:Initializing create_model()
2023-05-24 10:49:08,775:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x281e35180>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:49:08,775:INFO:Checking exceptions
2023-05-24 10:49:08,775:INFO:Importing libraries
2023-05-24 10:49:08,775:INFO:Copying training dataset
2023-05-24 10:49:08,779:INFO:Defining folds
2023-05-24 10:49:08,779:INFO:Declaring metric variables
2023-05-24 10:49:08,781:INFO:Importing untrained model
2023-05-24 10:49:08,782:INFO:Linear Discriminant Analysis Imported successfully
2023-05-24 10:49:08,785:INFO:Starting cross validation
2023-05-24 10:49:08,785:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:49:09,584:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,590:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,593:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:09,596:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,653:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,659:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,663:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:09,665:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,703:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,714:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,720:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:09,722:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,722:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,741:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,753:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:09,758:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,785:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,791:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,797:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,802:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,806:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:09,808:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:09,809:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,812:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,816:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,825:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,830:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:09,834:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,834:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,841:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:09,846:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:09,851:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:10,343:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:10,350:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:10,353:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:10,356:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:10,383:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:10,388:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:10,392:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:10,394:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:10,404:INFO:Calculating mean and std
2023-05-24 10:49:10,405:INFO:Creating metrics dataframe
2023-05-24 10:49:10,454:INFO:Uploading results into container
2023-05-24 10:49:10,455:INFO:Uploading model into container now
2023-05-24 10:49:10,455:INFO:_master_model_container: 11
2023-05-24 10:49:10,455:INFO:_display_container: 2
2023-05-24 10:49:10,455:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-24 10:49:10,455:INFO:create_model() successfully completed......................................
2023-05-24 10:49:10,559:INFO:SubProcess create_model() end ==================================
2023-05-24 10:49:10,560:INFO:Creating metrics dataframe
2023-05-24 10:49:10,565:INFO:Initializing Extra Trees Classifier
2023-05-24 10:49:10,565:INFO:Total runtime is 0.601393214861552 minutes
2023-05-24 10:49:10,566:INFO:SubProcess create_model() called ==================================
2023-05-24 10:49:10,566:INFO:Initializing create_model()
2023-05-24 10:49:10,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x281e35180>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:49:10,567:INFO:Checking exceptions
2023-05-24 10:49:10,567:INFO:Importing libraries
2023-05-24 10:49:10,567:INFO:Copying training dataset
2023-05-24 10:49:10,571:INFO:Defining folds
2023-05-24 10:49:10,571:INFO:Declaring metric variables
2023-05-24 10:49:10,573:INFO:Importing untrained model
2023-05-24 10:49:10,574:INFO:Extra Trees Classifier Imported successfully
2023-05-24 10:49:10,577:INFO:Starting cross validation
2023-05-24 10:49:10,578:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:49:12,015:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,022:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,025:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:12,028:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,067:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,073:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,077:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:12,079:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,112:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,119:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,123:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:12,125:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,174:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,180:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,183:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:12,186:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,194:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,200:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,201:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,201:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,203:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:12,205:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,206:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,206:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,207:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,210:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:12,210:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:12,212:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,213:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,220:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:12,223:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:12,226:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:13,047:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:13,054:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:13,057:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:13,060:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:13,066:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:13,072:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:13,075:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:13,077:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:13,101:INFO:Calculating mean and std
2023-05-24 10:49:13,102:INFO:Creating metrics dataframe
2023-05-24 10:49:13,150:INFO:Uploading results into container
2023-05-24 10:49:13,150:INFO:Uploading model into container now
2023-05-24 10:49:13,150:INFO:_master_model_container: 12
2023-05-24 10:49:13,150:INFO:_display_container: 2
2023-05-24 10:49:13,150:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=246, verbose=0, warm_start=False)
2023-05-24 10:49:13,150:INFO:create_model() successfully completed......................................
2023-05-24 10:49:13,248:INFO:SubProcess create_model() end ==================================
2023-05-24 10:49:13,248:INFO:Creating metrics dataframe
2023-05-24 10:49:13,253:INFO:Initializing Light Gradient Boosting Machine
2023-05-24 10:49:13,253:INFO:Total runtime is 0.6461964329083761 minutes
2023-05-24 10:49:13,254:INFO:SubProcess create_model() called ==================================
2023-05-24 10:49:13,254:INFO:Initializing create_model()
2023-05-24 10:49:13,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x281e35180>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:49:13,254:INFO:Checking exceptions
2023-05-24 10:49:13,254:INFO:Importing libraries
2023-05-24 10:49:13,254:INFO:Copying training dataset
2023-05-24 10:49:13,257:INFO:Defining folds
2023-05-24 10:49:13,257:INFO:Declaring metric variables
2023-05-24 10:49:13,258:INFO:Importing untrained model
2023-05-24 10:49:13,260:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-24 10:49:13,263:INFO:Starting cross validation
2023-05-24 10:49:13,263:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:49:15,866:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:15,878:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:15,882:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:15,883:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:15,884:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:15,890:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:15,894:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:15,897:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:15,956:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:15,963:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:15,966:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:15,971:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:16,025:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:16,033:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:16,038:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:16,039:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:16,042:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:16,050:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:16,053:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:16,056:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:16,063:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:16,069:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:16,072:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:16,075:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:16,084:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:16,095:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:16,098:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:16,101:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:16,115:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:16,123:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:16,128:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:16,132:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:17,663:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:17,669:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:17,670:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:17,672:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:17,675:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:17,676:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:17,679:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:17,682:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:17,728:INFO:Calculating mean and std
2023-05-24 10:49:17,729:INFO:Creating metrics dataframe
2023-05-24 10:49:17,780:INFO:Uploading results into container
2023-05-24 10:49:17,780:INFO:Uploading model into container now
2023-05-24 10:49:17,780:INFO:_master_model_container: 13
2023-05-24 10:49:17,780:INFO:_display_container: 2
2023-05-24 10:49:17,781:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=246, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-24 10:49:17,781:INFO:create_model() successfully completed......................................
2023-05-24 10:49:17,885:INFO:SubProcess create_model() end ==================================
2023-05-24 10:49:17,885:INFO:Creating metrics dataframe
2023-05-24 10:49:17,891:INFO:Initializing Dummy Classifier
2023-05-24 10:49:17,891:INFO:Total runtime is 0.7234908143679302 minutes
2023-05-24 10:49:17,892:INFO:SubProcess create_model() called ==================================
2023-05-24 10:49:17,892:INFO:Initializing create_model()
2023-05-24 10:49:17,892:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x281e35180>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:49:17,892:INFO:Checking exceptions
2023-05-24 10:49:17,892:INFO:Importing libraries
2023-05-24 10:49:17,893:INFO:Copying training dataset
2023-05-24 10:49:17,896:INFO:Defining folds
2023-05-24 10:49:17,896:INFO:Declaring metric variables
2023-05-24 10:49:17,898:INFO:Importing untrained model
2023-05-24 10:49:17,899:INFO:Dummy Classifier Imported successfully
2023-05-24 10:49:17,903:INFO:Starting cross validation
2023-05-24 10:49:17,904:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:49:18,664:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,670:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,671:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,673:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:18,676:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,677:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,680:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:18,682:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,688:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,691:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:18,692:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,694:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,738:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,744:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,747:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:18,750:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,752:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,758:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,761:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:18,764:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,771:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,780:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,782:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,786:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,788:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:18,789:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:18,791:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,792:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,828:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,834:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:18,837:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:18,840:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:19,352:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:19,358:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:19,361:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:19,363:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:19,428:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:19,433:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:19,436:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:49:19,439:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:49:19,448:INFO:Calculating mean and std
2023-05-24 10:49:19,448:INFO:Creating metrics dataframe
2023-05-24 10:49:19,503:INFO:Uploading results into container
2023-05-24 10:49:19,504:INFO:Uploading model into container now
2023-05-24 10:49:19,504:INFO:_master_model_container: 14
2023-05-24 10:49:19,504:INFO:_display_container: 2
2023-05-24 10:49:19,504:INFO:DummyClassifier(constant=None, random_state=246, strategy='prior')
2023-05-24 10:49:19,504:INFO:create_model() successfully completed......................................
2023-05-24 10:49:19,605:INFO:SubProcess create_model() end ==================================
2023-05-24 10:49:19,605:INFO:Creating metrics dataframe
2023-05-24 10:49:19,615:INFO:Initializing create_model()
2023-05-24 10:49:19,615:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2910825f0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=246, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:49:19,615:INFO:Checking exceptions
2023-05-24 10:49:19,616:INFO:Importing libraries
2023-05-24 10:49:19,616:INFO:Copying training dataset
2023-05-24 10:49:19,619:INFO:Defining folds
2023-05-24 10:49:19,619:INFO:Declaring metric variables
2023-05-24 10:49:19,619:INFO:Importing untrained model
2023-05-24 10:49:19,619:INFO:Declaring custom model
2023-05-24 10:49:19,619:INFO:Logistic Regression Imported successfully
2023-05-24 10:49:19,620:INFO:Cross validation set to False
2023-05-24 10:49:19,620:INFO:Fitting Model
2023-05-24 10:49:23,892:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=246, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-24 10:49:23,892:INFO:create_model() successfully completed......................................
2023-05-24 10:49:24,070:INFO:_master_model_container: 14
2023-05-24 10:49:24,070:INFO:_display_container: 2
2023-05-24 10:49:24,070:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=246, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-24 10:49:24,070:INFO:compare_models() successfully completed......................................
2023-05-24 10:50:20,302:INFO:PyCaret ClassificationExperiment
2023-05-24 10:50:20,303:INFO:Logging name: clf-default-name
2023-05-24 10:50:20,303:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-24 10:50:20,303:INFO:version 3.0.2
2023-05-24 10:50:20,303:INFO:Initializing setup()
2023-05-24 10:50:20,303:INFO:self.USI: 95a2
2023-05-24 10:50:20,303:INFO:self._variable_keys: {'log_plots_param', 'y_train', 'logging_param', 'seed', 'memory', 'fold_generator', 'fold_shuffle_param', 'html_param', 'exp_id', 'idx', 'X_train', 'exp_name_log', 'data', 'USI', 'X_test', 'pipeline', 'fold_groups_param', 'n_jobs_param', 'y', 'gpu_n_jobs_param', 'y_test', '_ml_usecase', '_available_plots', 'is_multiclass', 'target_param', 'fix_imbalance', 'X', 'gpu_param'}
2023-05-24 10:50:20,303:INFO:Checking environment
2023-05-24 10:50:20,303:INFO:python_version: 3.10.9
2023-05-24 10:50:20,303:INFO:python_build: ('main', 'Mar  1 2023 12:20:14')
2023-05-24 10:50:20,303:INFO:machine: arm64
2023-05-24 10:50:20,303:INFO:platform: macOS-13.3.1-arm64-arm-64bit
2023-05-24 10:50:20,303:INFO:Memory: svmem(total=17179869184, available=5296209920, percent=69.2, used=7544422400, free=51331072, active=5248221184, inactive=5242535936, wired=2296201216)
2023-05-24 10:50:20,303:INFO:Physical Core: 8
2023-05-24 10:50:20,303:INFO:Logical Core: 8
2023-05-24 10:50:20,303:INFO:Checking libraries
2023-05-24 10:50:20,303:INFO:System:
2023-05-24 10:50:20,303:INFO:    python: 3.10.9 (main, Mar  1 2023, 12:20:14) [Clang 14.0.6 ]
2023-05-24 10:50:20,303:INFO:executable: /Users/corneliusvincent/anaconda3/bin/python
2023-05-24 10:50:20,303:INFO:   machine: macOS-13.3.1-arm64-arm-64bit
2023-05-24 10:50:20,303:INFO:PyCaret required dependencies:
2023-05-24 10:50:20,303:INFO:                 pip: 23.1.2
2023-05-24 10:50:20,303:INFO:          setuptools: 65.6.3
2023-05-24 10:50:20,303:INFO:             pycaret: 3.0.2
2023-05-24 10:50:20,303:INFO:             IPython: 8.10.0
2023-05-24 10:50:20,304:INFO:          ipywidgets: 8.0.6
2023-05-24 10:50:20,304:INFO:                tqdm: 4.64.1
2023-05-24 10:50:20,304:INFO:               numpy: 1.23.5
2023-05-24 10:50:20,304:INFO:              pandas: 1.5.3
2023-05-24 10:50:20,304:INFO:              jinja2: 3.1.2
2023-05-24 10:50:20,304:INFO:               scipy: 1.9.3
2023-05-24 10:50:20,304:INFO:              joblib: 1.2.0
2023-05-24 10:50:20,304:INFO:             sklearn: 1.2.2
2023-05-24 10:50:20,304:INFO:                pyod: 1.0.9
2023-05-24 10:50:20,304:INFO:            imblearn: 0.10.1
2023-05-24 10:50:20,304:INFO:   category_encoders: 2.6.1
2023-05-24 10:50:20,304:INFO:            lightgbm: 3.3.5
2023-05-24 10:50:20,304:INFO:               numba: 0.56.4
2023-05-24 10:50:20,304:INFO:            requests: 2.28.1
2023-05-24 10:50:20,304:INFO:          matplotlib: 3.6.3
2023-05-24 10:50:20,304:INFO:          scikitplot: 0.3.7
2023-05-24 10:50:20,304:INFO:         yellowbrick: 1.5
2023-05-24 10:50:20,304:INFO:              plotly: 5.9.0
2023-05-24 10:50:20,304:INFO:             kaleido: 0.2.1
2023-05-24 10:50:20,304:INFO:         statsmodels: 0.13.5
2023-05-24 10:50:20,304:INFO:              sktime: 0.17.0
2023-05-24 10:50:20,304:INFO:               tbats: 1.1.3
2023-05-24 10:50:20,304:INFO:            pmdarima: 2.0.3
2023-05-24 10:50:20,304:INFO:              psutil: 5.9.0
2023-05-24 10:50:20,304:INFO:PyCaret optional dependencies:
2023-05-24 10:50:20,304:INFO:                shap: Not installed
2023-05-24 10:50:20,304:INFO:           interpret: Not installed
2023-05-24 10:50:20,304:INFO:                umap: Not installed
2023-05-24 10:50:20,304:INFO:    pandas_profiling: 4.1.2
2023-05-24 10:50:20,304:INFO:  explainerdashboard: Not installed
2023-05-24 10:50:20,304:INFO:             autoviz: Not installed
2023-05-24 10:50:20,304:INFO:           fairlearn: Not installed
2023-05-24 10:50:20,304:INFO:             xgboost: Not installed
2023-05-24 10:50:20,304:INFO:            catboost: Not installed
2023-05-24 10:50:20,304:INFO:              kmodes: Not installed
2023-05-24 10:50:20,304:INFO:             mlxtend: Not installed
2023-05-24 10:50:20,304:INFO:       statsforecast: Not installed
2023-05-24 10:50:20,304:INFO:        tune_sklearn: Not installed
2023-05-24 10:50:20,304:INFO:                 ray: Not installed
2023-05-24 10:50:20,304:INFO:            hyperopt: Not installed
2023-05-24 10:50:20,304:INFO:              optuna: Not installed
2023-05-24 10:50:20,304:INFO:               skopt: Not installed
2023-05-24 10:50:20,304:INFO:              mlflow: Not installed
2023-05-24 10:50:20,304:INFO:              gradio: Not installed
2023-05-24 10:50:20,304:INFO:             fastapi: Not installed
2023-05-24 10:50:20,304:INFO:             uvicorn: Not installed
2023-05-24 10:50:20,304:INFO:              m2cgen: Not installed
2023-05-24 10:50:20,304:INFO:           evidently: Not installed
2023-05-24 10:50:20,304:INFO:               fugue: Not installed
2023-05-24 10:50:20,304:INFO:           streamlit: 1.22.0
2023-05-24 10:50:20,304:INFO:             prophet: Not installed
2023-05-24 10:50:20,304:INFO:None
2023-05-24 10:50:20,304:INFO:Set up data.
2023-05-24 10:50:20,330:INFO:Set up train/test split.
2023-05-24 10:50:20,353:INFO:Set up index.
2023-05-24 10:50:20,354:INFO:Set up folding strategy.
2023-05-24 10:50:20,354:INFO:Assigning column types.
2023-05-24 10:50:20,355:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-24 10:50:20,374:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-24 10:50:20,375:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 10:50:20,386:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:50:20,387:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:50:20,405:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-24 10:50:20,406:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 10:50:20,417:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:50:20,418:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:50:20,418:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-24 10:50:20,437:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 10:50:20,448:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:50:20,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:50:20,468:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 10:50:20,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:50:20,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:50:20,479:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-24 10:50:20,510:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:50:20,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:50:20,540:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:50:20,540:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:50:20,541:INFO:Preparing preprocessing pipeline...
2023-05-24 10:50:20,541:INFO:Set up label encoding.
2023-05-24 10:50:20,541:INFO:Set up simple imputation.
2023-05-24 10:50:20,542:INFO:Set up encoding of categorical features.
2023-05-24 10:50:20,651:INFO:Finished creating preprocessing pipeline.
2023-05-24 10:50:20,654:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/nz/xhcvl6_17cb_xn608wktx0bc0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Clean_Text'],
                                    transformer=TargetEncoder(cols=['Clean_Text'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-24 10:50:20,654:INFO:Creating final display dataframe.
2023-05-24 10:50:20,995:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                7108  
1                                             Emotion  
2                                          Multiclass  
3   anger: 0, disgust: 1, fear: 2, joy: 3, neutral...  
4                                          (34792, 2)  
5                                          (34792, 2)  
6                                          (24354, 2)  
7                                          (10438, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               95a2  
2023-05-24 10:50:21,030:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:50:21,030:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:50:21,062:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:50:21,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 10:50:21,063:INFO:setup() successfully completed in 0.81s...............
2023-05-24 10:50:24,674:INFO:Initializing compare_models()
2023-05-24 10:50:24,675:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-24 10:50:24,675:INFO:Checking exceptions
2023-05-24 10:50:24,681:INFO:Preparing display monitor
2023-05-24 10:50:24,698:INFO:Initializing Logistic Regression
2023-05-24 10:50:24,698:INFO:Total runtime is 2.086162567138672e-06 minutes
2023-05-24 10:50:24,700:INFO:SubProcess create_model() called ==================================
2023-05-24 10:50:24,700:INFO:Initializing create_model()
2023-05-24 10:50:24,700:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2820cfe50>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:50:24,700:INFO:Checking exceptions
2023-05-24 10:50:24,700:INFO:Importing libraries
2023-05-24 10:50:24,700:INFO:Copying training dataset
2023-05-24 10:50:24,704:INFO:Defining folds
2023-05-24 10:50:24,704:INFO:Declaring metric variables
2023-05-24 10:50:24,706:INFO:Importing untrained model
2023-05-24 10:50:24,708:INFO:Logistic Regression Imported successfully
2023-05-24 10:50:24,710:INFO:Starting cross validation
2023-05-24 10:50:24,711:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:50:26,294:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,300:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,305:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,306:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:26,309:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,317:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,320:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:26,326:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,401:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,407:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,411:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:26,416:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,507:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,515:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,519:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:26,521:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,628:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,634:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,638:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:26,640:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,751:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,757:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,760:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:26,763:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,807:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,813:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,816:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:26,818:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,921:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,926:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:26,929:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:26,932:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:27,887:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:27,893:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:27,896:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:27,899:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:27,977:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:27,983:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:27,986:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:27,988:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:27,997:INFO:Calculating mean and std
2023-05-24 10:50:27,998:INFO:Creating metrics dataframe
2023-05-24 10:50:28,055:INFO:Uploading results into container
2023-05-24 10:50:28,056:INFO:Uploading model into container now
2023-05-24 10:50:28,056:INFO:_master_model_container: 1
2023-05-24 10:50:28,056:INFO:_display_container: 2
2023-05-24 10:50:28,056:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-24 10:50:28,056:INFO:create_model() successfully completed......................................
2023-05-24 10:50:28,153:INFO:SubProcess create_model() end ==================================
2023-05-24 10:50:28,153:INFO:Creating metrics dataframe
2023-05-24 10:50:28,157:INFO:Initializing K Neighbors Classifier
2023-05-24 10:50:28,157:INFO:Total runtime is 0.05764533281326294 minutes
2023-05-24 10:50:28,158:INFO:SubProcess create_model() called ==================================
2023-05-24 10:50:28,158:INFO:Initializing create_model()
2023-05-24 10:50:28,158:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2820cfe50>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:50:28,158:INFO:Checking exceptions
2023-05-24 10:50:28,158:INFO:Importing libraries
2023-05-24 10:50:28,158:INFO:Copying training dataset
2023-05-24 10:50:28,161:INFO:Defining folds
2023-05-24 10:50:28,161:INFO:Declaring metric variables
2023-05-24 10:50:28,162:INFO:Importing untrained model
2023-05-24 10:50:28,164:INFO:K Neighbors Classifier Imported successfully
2023-05-24 10:50:28,167:INFO:Starting cross validation
2023-05-24 10:50:28,168:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:50:28,614:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,620:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,629:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:28,636:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,640:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,646:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,649:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:28,651:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,652:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,656:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,660:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:28,662:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,673:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,679:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,681:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,684:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:28,687:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,688:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,690:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,692:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:28,694:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,696:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,699:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:28,702:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,724:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,724:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,730:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,730:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,733:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:28,734:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:28,735:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:28,737:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,071:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,077:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,082:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,082:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,087:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,090:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:29,093:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,130:INFO:Calculating mean and std
2023-05-24 10:50:29,131:INFO:Creating metrics dataframe
2023-05-24 10:50:29,188:INFO:Uploading results into container
2023-05-24 10:50:29,188:INFO:Uploading model into container now
2023-05-24 10:50:29,188:INFO:_master_model_container: 2
2023-05-24 10:50:29,188:INFO:_display_container: 2
2023-05-24 10:50:29,188:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-24 10:50:29,188:INFO:create_model() successfully completed......................................
2023-05-24 10:50:29,290:INFO:SubProcess create_model() end ==================================
2023-05-24 10:50:29,290:INFO:Creating metrics dataframe
2023-05-24 10:50:29,294:INFO:Initializing Naive Bayes
2023-05-24 10:50:29,294:INFO:Total runtime is 0.07660120328267415 minutes
2023-05-24 10:50:29,295:INFO:SubProcess create_model() called ==================================
2023-05-24 10:50:29,295:INFO:Initializing create_model()
2023-05-24 10:50:29,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2820cfe50>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:50:29,295:INFO:Checking exceptions
2023-05-24 10:50:29,295:INFO:Importing libraries
2023-05-24 10:50:29,295:INFO:Copying training dataset
2023-05-24 10:50:29,299:INFO:Defining folds
2023-05-24 10:50:29,299:INFO:Declaring metric variables
2023-05-24 10:50:29,300:INFO:Importing untrained model
2023-05-24 10:50:29,302:INFO:Naive Bayes Imported successfully
2023-05-24 10:50:29,304:INFO:Starting cross validation
2023-05-24 10:50:29,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:50:29,704:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,711:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,714:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:29,717:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,719:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,719:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,725:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,725:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,728:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:29,731:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,732:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:29,748:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,751:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,759:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,762:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:29,765:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,769:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,773:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,774:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,778:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:29,779:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,780:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,783:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,785:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,788:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:29,791:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,791:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:29,794:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,826:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,844:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:29,852:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:29,859:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,079:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,085:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,091:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,117:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,122:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,125:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:30,128:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,138:INFO:Calculating mean and std
2023-05-24 10:50:30,138:INFO:Creating metrics dataframe
2023-05-24 10:50:30,191:INFO:Uploading results into container
2023-05-24 10:50:30,191:INFO:Uploading model into container now
2023-05-24 10:50:30,192:INFO:_master_model_container: 3
2023-05-24 10:50:30,192:INFO:_display_container: 2
2023-05-24 10:50:30,192:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-24 10:50:30,192:INFO:create_model() successfully completed......................................
2023-05-24 10:50:30,289:INFO:SubProcess create_model() end ==================================
2023-05-24 10:50:30,289:INFO:Creating metrics dataframe
2023-05-24 10:50:30,293:INFO:Initializing Decision Tree Classifier
2023-05-24 10:50:30,293:INFO:Total runtime is 0.09324913422266642 minutes
2023-05-24 10:50:30,295:INFO:SubProcess create_model() called ==================================
2023-05-24 10:50:30,295:INFO:Initializing create_model()
2023-05-24 10:50:30,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2820cfe50>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:50:30,295:INFO:Checking exceptions
2023-05-24 10:50:30,295:INFO:Importing libraries
2023-05-24 10:50:30,295:INFO:Copying training dataset
2023-05-24 10:50:30,298:INFO:Defining folds
2023-05-24 10:50:30,298:INFO:Declaring metric variables
2023-05-24 10:50:30,300:INFO:Importing untrained model
2023-05-24 10:50:30,302:INFO:Decision Tree Classifier Imported successfully
2023-05-24 10:50:30,304:INFO:Starting cross validation
2023-05-24 10:50:30,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:50:30,718:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,724:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,728:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:30,731:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,747:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,752:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,753:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,756:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:30,757:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,758:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,759:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,761:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:30,763:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,763:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,766:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:30,769:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,777:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,786:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,789:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:30,792:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,796:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,808:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,812:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,817:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:30,818:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,821:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:30,823:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,824:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,835:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,841:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:30,844:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:30,847:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,104:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,110:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,116:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,127:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,132:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,135:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:31,138:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,165:INFO:Calculating mean and std
2023-05-24 10:50:31,166:INFO:Creating metrics dataframe
2023-05-24 10:50:31,219:INFO:Uploading results into container
2023-05-24 10:50:31,219:INFO:Uploading model into container now
2023-05-24 10:50:31,219:INFO:_master_model_container: 4
2023-05-24 10:50:31,219:INFO:_display_container: 2
2023-05-24 10:50:31,220:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7108, splitter='best')
2023-05-24 10:50:31,220:INFO:create_model() successfully completed......................................
2023-05-24 10:50:31,317:INFO:SubProcess create_model() end ==================================
2023-05-24 10:50:31,317:INFO:Creating metrics dataframe
2023-05-24 10:50:31,321:INFO:Initializing SVM - Linear Kernel
2023-05-24 10:50:31,321:INFO:Total runtime is 0.11038788159688315 minutes
2023-05-24 10:50:31,322:INFO:SubProcess create_model() called ==================================
2023-05-24 10:50:31,323:INFO:Initializing create_model()
2023-05-24 10:50:31,323:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2820cfe50>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:50:31,323:INFO:Checking exceptions
2023-05-24 10:50:31,323:INFO:Importing libraries
2023-05-24 10:50:31,323:INFO:Copying training dataset
2023-05-24 10:50:31,325:INFO:Defining folds
2023-05-24 10:50:31,325:INFO:Declaring metric variables
2023-05-24 10:50:31,327:INFO:Importing untrained model
2023-05-24 10:50:31,328:INFO:SVM - Linear Kernel Imported successfully
2023-05-24 10:50:31,330:INFO:Starting cross validation
2023-05-24 10:50:31,331:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:50:31,885:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:50:31,888:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,894:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,896:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:50:31,896:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:50:31,897:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:31,899:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,900:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,904:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,905:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,909:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:31,911:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,916:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,919:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:31,922:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:50:31,925:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,930:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,931:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,931:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:50:31,934:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,934:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:31,938:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,940:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,941:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:50:31,943:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:31,944:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,945:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,950:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,953:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:31,957:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:50:31,960:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,962:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,967:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:50:31,968:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,970:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,971:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:31,974:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,978:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:31,982:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:31,984:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,286:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:50:32,289:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,294:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,297:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:32,299:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 10:50:32,300:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,302:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,307:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,311:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:32,313:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,351:INFO:Calculating mean and std
2023-05-24 10:50:32,352:INFO:Creating metrics dataframe
2023-05-24 10:50:32,408:INFO:Uploading results into container
2023-05-24 10:50:32,408:INFO:Uploading model into container now
2023-05-24 10:50:32,408:INFO:_master_model_container: 5
2023-05-24 10:50:32,408:INFO:_display_container: 2
2023-05-24 10:50:32,409:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7108, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-24 10:50:32,409:INFO:create_model() successfully completed......................................
2023-05-24 10:50:32,507:INFO:SubProcess create_model() end ==================================
2023-05-24 10:50:32,507:INFO:Creating metrics dataframe
2023-05-24 10:50:32,512:INFO:Initializing Ridge Classifier
2023-05-24 10:50:32,512:INFO:Total runtime is 0.1302277167638143 minutes
2023-05-24 10:50:32,513:INFO:SubProcess create_model() called ==================================
2023-05-24 10:50:32,513:INFO:Initializing create_model()
2023-05-24 10:50:32,513:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2820cfe50>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:50:32,513:INFO:Checking exceptions
2023-05-24 10:50:32,513:INFO:Importing libraries
2023-05-24 10:50:32,513:INFO:Copying training dataset
2023-05-24 10:50:32,516:INFO:Defining folds
2023-05-24 10:50:32,516:INFO:Declaring metric variables
2023-05-24 10:50:32,517:INFO:Importing untrained model
2023-05-24 10:50:32,518:INFO:Ridge Classifier Imported successfully
2023-05-24 10:50:32,521:INFO:Starting cross validation
2023-05-24 10:50:32,522:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:50:32,821:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:50:32,824:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,826:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:50:32,830:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,830:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,834:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:32,837:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,837:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,840:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:32,843:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,863:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:50:32,866:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,871:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,875:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:32,877:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,883:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:50:32,890:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,904:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,908:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:32,911:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,913:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:50:32,916:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,918:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:50:32,922:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,923:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,924:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:50:32,925:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:32,927:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,928:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,933:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,933:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,936:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:32,937:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:50:32,938:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:32,938:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,940:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,942:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,949:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:32,954:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:32,961:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:33,127:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:50:33,129:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:33,135:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:33,138:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:33,140:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:33,155:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 10:50:33,158:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:33,164:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:33,167:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:33,170:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:33,234:INFO:Calculating mean and std
2023-05-24 10:50:33,235:INFO:Creating metrics dataframe
2023-05-24 10:50:33,287:INFO:Uploading results into container
2023-05-24 10:50:33,288:INFO:Uploading model into container now
2023-05-24 10:50:33,288:INFO:_master_model_container: 6
2023-05-24 10:50:33,288:INFO:_display_container: 2
2023-05-24 10:50:33,288:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7108, solver='auto',
                tol=0.0001)
2023-05-24 10:50:33,288:INFO:create_model() successfully completed......................................
2023-05-24 10:50:33,387:INFO:SubProcess create_model() end ==================================
2023-05-24 10:50:33,387:INFO:Creating metrics dataframe
2023-05-24 10:50:33,391:INFO:Initializing Random Forest Classifier
2023-05-24 10:50:33,391:INFO:Total runtime is 0.14489023288091027 minutes
2023-05-24 10:50:33,393:INFO:SubProcess create_model() called ==================================
2023-05-24 10:50:33,393:INFO:Initializing create_model()
2023-05-24 10:50:33,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2820cfe50>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:50:33,393:INFO:Checking exceptions
2023-05-24 10:50:33,393:INFO:Importing libraries
2023-05-24 10:50:33,393:INFO:Copying training dataset
2023-05-24 10:50:33,395:INFO:Defining folds
2023-05-24 10:50:33,395:INFO:Declaring metric variables
2023-05-24 10:50:33,396:INFO:Importing untrained model
2023-05-24 10:50:33,398:INFO:Random Forest Classifier Imported successfully
2023-05-24 10:50:33,401:INFO:Starting cross validation
2023-05-24 10:50:33,402:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:50:34,295:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,301:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,304:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:34,307:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,403:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,412:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,415:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:34,418:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,429:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,435:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,439:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:34,444:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,481:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,489:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,492:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:34,494:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,495:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,502:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,506:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:34,509:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,525:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,534:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,541:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:34,544:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,583:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,589:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,592:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:34,595:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,597:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,603:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:34,607:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:34,609:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,009:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,015:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,020:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,082:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,088:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,091:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:35,093:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,102:INFO:Calculating mean and std
2023-05-24 10:50:35,102:INFO:Creating metrics dataframe
2023-05-24 10:50:35,156:INFO:Uploading results into container
2023-05-24 10:50:35,156:INFO:Uploading model into container now
2023-05-24 10:50:35,157:INFO:_master_model_container: 7
2023-05-24 10:50:35,157:INFO:_display_container: 2
2023-05-24 10:50:35,157:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7108, verbose=0, warm_start=False)
2023-05-24 10:50:35,157:INFO:create_model() successfully completed......................................
2023-05-24 10:50:35,254:INFO:SubProcess create_model() end ==================================
2023-05-24 10:50:35,254:INFO:Creating metrics dataframe
2023-05-24 10:50:35,259:INFO:Initializing Quadratic Discriminant Analysis
2023-05-24 10:50:35,259:INFO:Total runtime is 0.17601028283437095 minutes
2023-05-24 10:50:35,260:INFO:SubProcess create_model() called ==================================
2023-05-24 10:50:35,260:INFO:Initializing create_model()
2023-05-24 10:50:35,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2820cfe50>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:50:35,260:INFO:Checking exceptions
2023-05-24 10:50:35,260:INFO:Importing libraries
2023-05-24 10:50:35,260:INFO:Copying training dataset
2023-05-24 10:50:35,263:INFO:Defining folds
2023-05-24 10:50:35,263:INFO:Declaring metric variables
2023-05-24 10:50:35,265:INFO:Importing untrained model
2023-05-24 10:50:35,267:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-24 10:50:35,269:INFO:Starting cross validation
2023-05-24 10:50:35,270:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:50:35,615:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 10:50:35,680:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,683:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,686:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,689:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,690:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:35,692:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,693:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:35,694:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,695:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,700:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,702:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,704:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:35,706:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,708:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,712:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:35,712:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,715:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,731:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,737:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:35,740:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,741:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,747:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,751:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:35,753:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,771:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,776:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,780:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:35,782:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,831:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,837:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,840:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:35,843:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:35,925:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 10:50:36,071:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:36,077:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:36,082:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:36,087:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:36,092:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:36,096:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:36,098:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:36,135:INFO:Calculating mean and std
2023-05-24 10:50:36,136:INFO:Creating metrics dataframe
2023-05-24 10:50:36,187:INFO:Uploading results into container
2023-05-24 10:50:36,187:INFO:Uploading model into container now
2023-05-24 10:50:36,188:INFO:_master_model_container: 8
2023-05-24 10:50:36,188:INFO:_display_container: 2
2023-05-24 10:50:36,188:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-24 10:50:36,188:INFO:create_model() successfully completed......................................
2023-05-24 10:50:36,284:INFO:SubProcess create_model() end ==================================
2023-05-24 10:50:36,284:INFO:Creating metrics dataframe
2023-05-24 10:50:36,288:INFO:Initializing Ada Boost Classifier
2023-05-24 10:50:36,289:INFO:Total runtime is 0.19317521651585898 minutes
2023-05-24 10:50:36,290:INFO:SubProcess create_model() called ==================================
2023-05-24 10:50:36,290:INFO:Initializing create_model()
2023-05-24 10:50:36,290:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2820cfe50>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:50:36,290:INFO:Checking exceptions
2023-05-24 10:50:36,290:INFO:Importing libraries
2023-05-24 10:50:36,290:INFO:Copying training dataset
2023-05-24 10:50:36,292:INFO:Defining folds
2023-05-24 10:50:36,292:INFO:Declaring metric variables
2023-05-24 10:50:36,294:INFO:Importing untrained model
2023-05-24 10:50:36,295:INFO:Ada Boost Classifier Imported successfully
2023-05-24 10:50:36,298:INFO:Starting cross validation
2023-05-24 10:50:36,299:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:50:37,053:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,059:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,062:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:37,065:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,091:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,093:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,097:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,100:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:37,103:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,105:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,108:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,108:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:37,111:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,114:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,117:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:37,120:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,122:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,128:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,131:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:37,134:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,168:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,168:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,170:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,173:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,176:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,177:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:37,177:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,179:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:37,179:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,181:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:37,182:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,186:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,768:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,772:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,774:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,777:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:37,778:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,780:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,781:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:37,784:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:37,837:INFO:Calculating mean and std
2023-05-24 10:50:37,837:INFO:Creating metrics dataframe
2023-05-24 10:50:37,892:INFO:Uploading results into container
2023-05-24 10:50:37,892:INFO:Uploading model into container now
2023-05-24 10:50:37,892:INFO:_master_model_container: 9
2023-05-24 10:50:37,893:INFO:_display_container: 2
2023-05-24 10:50:37,893:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7108)
2023-05-24 10:50:37,893:INFO:create_model() successfully completed......................................
2023-05-24 10:50:37,992:INFO:SubProcess create_model() end ==================================
2023-05-24 10:50:37,992:INFO:Creating metrics dataframe
2023-05-24 10:50:37,997:INFO:Initializing Gradient Boosting Classifier
2023-05-24 10:50:37,997:INFO:Total runtime is 0.22164975007375082 minutes
2023-05-24 10:50:37,998:INFO:SubProcess create_model() called ==================================
2023-05-24 10:50:37,998:INFO:Initializing create_model()
2023-05-24 10:50:37,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2820cfe50>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:50:37,999:INFO:Checking exceptions
2023-05-24 10:50:37,999:INFO:Importing libraries
2023-05-24 10:50:37,999:INFO:Copying training dataset
2023-05-24 10:50:38,001:INFO:Defining folds
2023-05-24 10:50:38,001:INFO:Declaring metric variables
2023-05-24 10:50:38,003:INFO:Importing untrained model
2023-05-24 10:50:38,004:INFO:Gradient Boosting Classifier Imported successfully
2023-05-24 10:50:38,007:INFO:Starting cross validation
2023-05-24 10:50:38,008:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:50:43,323:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,330:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,334:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:43,337:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,379:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,385:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,397:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:43,406:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,431:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,447:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,454:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:43,457:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,578:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,584:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,587:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:43,592:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,607:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,620:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,625:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,625:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:43,628:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,631:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,634:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:43,637:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,661:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,667:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,670:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:43,673:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,703:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,710:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:43,713:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:43,716:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:47,395:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:47,401:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:47,404:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:47,407:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:47,436:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:47,442:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:47,447:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:47,458:INFO:Calculating mean and std
2023-05-24 10:50:47,459:INFO:Creating metrics dataframe
2023-05-24 10:50:47,521:INFO:Uploading results into container
2023-05-24 10:50:47,522:INFO:Uploading model into container now
2023-05-24 10:50:47,522:INFO:_master_model_container: 10
2023-05-24 10:50:47,522:INFO:_display_container: 2
2023-05-24 10:50:47,522:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7108, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-24 10:50:47,522:INFO:create_model() successfully completed......................................
2023-05-24 10:50:47,620:INFO:SubProcess create_model() end ==================================
2023-05-24 10:50:47,620:INFO:Creating metrics dataframe
2023-05-24 10:50:47,625:INFO:Initializing Linear Discriminant Analysis
2023-05-24 10:50:47,625:INFO:Total runtime is 0.3821200688680013 minutes
2023-05-24 10:50:47,626:INFO:SubProcess create_model() called ==================================
2023-05-24 10:50:47,627:INFO:Initializing create_model()
2023-05-24 10:50:47,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2820cfe50>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:50:47,627:INFO:Checking exceptions
2023-05-24 10:50:47,627:INFO:Importing libraries
2023-05-24 10:50:47,627:INFO:Copying training dataset
2023-05-24 10:50:47,629:INFO:Defining folds
2023-05-24 10:50:47,629:INFO:Declaring metric variables
2023-05-24 10:50:47,631:INFO:Importing untrained model
2023-05-24 10:50:47,632:INFO:Linear Discriminant Analysis Imported successfully
2023-05-24 10:50:47,635:INFO:Starting cross validation
2023-05-24 10:50:47,636:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:50:48,042:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,048:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,051:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:48,054:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,080:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,080:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,086:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,089:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,089:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:48,092:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,092:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:48,097:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,101:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,101:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,107:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,107:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,108:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,113:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,113:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,113:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,115:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,116:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,116:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:48,116:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:48,119:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,119:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,119:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:48,121:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:48,123:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,126:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,129:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:48,139:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,450:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,456:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,459:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:48,462:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,471:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,477:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,480:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:48,482:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:48,513:INFO:Calculating mean and std
2023-05-24 10:50:48,513:INFO:Creating metrics dataframe
2023-05-24 10:50:48,570:INFO:Uploading results into container
2023-05-24 10:50:48,570:INFO:Uploading model into container now
2023-05-24 10:50:48,570:INFO:_master_model_container: 11
2023-05-24 10:50:48,570:INFO:_display_container: 2
2023-05-24 10:50:48,571:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-24 10:50:48,571:INFO:create_model() successfully completed......................................
2023-05-24 10:50:48,666:INFO:SubProcess create_model() end ==================================
2023-05-24 10:50:48,667:INFO:Creating metrics dataframe
2023-05-24 10:50:48,671:INFO:Initializing Extra Trees Classifier
2023-05-24 10:50:48,671:INFO:Total runtime is 0.399555782477061 minutes
2023-05-24 10:50:48,673:INFO:SubProcess create_model() called ==================================
2023-05-24 10:50:48,673:INFO:Initializing create_model()
2023-05-24 10:50:48,673:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2820cfe50>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:50:48,673:INFO:Checking exceptions
2023-05-24 10:50:48,673:INFO:Importing libraries
2023-05-24 10:50:48,673:INFO:Copying training dataset
2023-05-24 10:50:48,675:INFO:Defining folds
2023-05-24 10:50:48,675:INFO:Declaring metric variables
2023-05-24 10:50:48,676:INFO:Importing untrained model
2023-05-24 10:50:48,678:INFO:Extra Trees Classifier Imported successfully
2023-05-24 10:50:48,680:INFO:Starting cross validation
2023-05-24 10:50:48,681:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:50:49,692:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,698:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,701:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:49,702:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,704:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,708:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,711:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:49,714:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,714:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,720:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,723:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,723:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:49,726:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,726:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,728:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,730:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,732:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,734:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:49,734:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,735:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,736:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,737:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:49,738:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,740:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,741:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,741:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:49,744:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:49,745:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,746:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,749:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:49,756:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:49,765:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:50,358:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:50,364:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:50,365:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:50,370:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:50,371:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:50,374:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:50,377:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:50,426:INFO:Calculating mean and std
2023-05-24 10:50:50,427:INFO:Creating metrics dataframe
2023-05-24 10:50:50,483:INFO:Uploading results into container
2023-05-24 10:50:50,483:INFO:Uploading model into container now
2023-05-24 10:50:50,483:INFO:_master_model_container: 12
2023-05-24 10:50:50,483:INFO:_display_container: 2
2023-05-24 10:50:50,484:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7108, verbose=0, warm_start=False)
2023-05-24 10:50:50,484:INFO:create_model() successfully completed......................................
2023-05-24 10:50:50,580:INFO:SubProcess create_model() end ==================================
2023-05-24 10:50:50,580:INFO:Creating metrics dataframe
2023-05-24 10:50:50,586:INFO:Initializing Light Gradient Boosting Machine
2023-05-24 10:50:50,586:INFO:Total runtime is 0.4314615845680237 minutes
2023-05-24 10:50:50,587:INFO:SubProcess create_model() called ==================================
2023-05-24 10:50:50,587:INFO:Initializing create_model()
2023-05-24 10:50:50,587:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2820cfe50>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:50:50,587:INFO:Checking exceptions
2023-05-24 10:50:50,587:INFO:Importing libraries
2023-05-24 10:50:50,587:INFO:Copying training dataset
2023-05-24 10:50:50,590:INFO:Defining folds
2023-05-24 10:50:50,590:INFO:Declaring metric variables
2023-05-24 10:50:50,591:INFO:Importing untrained model
2023-05-24 10:50:50,592:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-24 10:50:50,596:INFO:Starting cross validation
2023-05-24 10:50:50,596:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:50:52,212:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,218:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,221:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:52,224:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,237:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,243:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,246:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:52,248:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,268:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,274:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,276:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,277:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:52,279:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,280:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,284:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,288:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,292:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:52,293:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:52,293:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,294:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,296:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,299:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,302:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:52,305:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,316:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,322:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,325:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:52,328:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,340:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,346:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:52,353:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:52,361:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:53,592:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:53,597:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:53,603:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:53,624:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:53,630:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:53,633:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:53,635:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:53,657:INFO:Calculating mean and std
2023-05-24 10:50:53,657:INFO:Creating metrics dataframe
2023-05-24 10:50:53,718:INFO:Uploading results into container
2023-05-24 10:50:53,719:INFO:Uploading model into container now
2023-05-24 10:50:53,719:INFO:_master_model_container: 13
2023-05-24 10:50:53,719:INFO:_display_container: 2
2023-05-24 10:50:53,719:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7108, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-24 10:50:53,719:INFO:create_model() successfully completed......................................
2023-05-24 10:50:53,816:INFO:SubProcess create_model() end ==================================
2023-05-24 10:50:53,816:INFO:Creating metrics dataframe
2023-05-24 10:50:53,821:INFO:Initializing Dummy Classifier
2023-05-24 10:50:53,821:INFO:Total runtime is 0.4853763500849406 minutes
2023-05-24 10:50:53,822:INFO:SubProcess create_model() called ==================================
2023-05-24 10:50:53,822:INFO:Initializing create_model()
2023-05-24 10:50:53,822:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2820cfe50>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:50:53,822:INFO:Checking exceptions
2023-05-24 10:50:53,822:INFO:Importing libraries
2023-05-24 10:50:53,822:INFO:Copying training dataset
2023-05-24 10:50:53,825:INFO:Defining folds
2023-05-24 10:50:53,825:INFO:Declaring metric variables
2023-05-24 10:50:53,826:INFO:Importing untrained model
2023-05-24 10:50:53,827:INFO:Dummy Classifier Imported successfully
2023-05-24 10:50:53,830:INFO:Starting cross validation
2023-05-24 10:50:53,831:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:50:54,219:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,225:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,228:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:54,231:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,235:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,241:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,244:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:54,247:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,267:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,273:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,277:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:54,279:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,298:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,300:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,303:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,307:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:54,308:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,309:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,312:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:54,314:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,315:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,315:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,317:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:54,320:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,333:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,339:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,342:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:54,344:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,346:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,352:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,355:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:54,358:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,636:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,642:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,645:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:54,646:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,648:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,651:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,654:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:50:54,657:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:50:54,702:INFO:Calculating mean and std
2023-05-24 10:50:54,703:INFO:Creating metrics dataframe
2023-05-24 10:50:54,759:INFO:Uploading results into container
2023-05-24 10:50:54,760:INFO:Uploading model into container now
2023-05-24 10:50:54,760:INFO:_master_model_container: 14
2023-05-24 10:50:54,760:INFO:_display_container: 2
2023-05-24 10:50:54,760:INFO:DummyClassifier(constant=None, random_state=7108, strategy='prior')
2023-05-24 10:50:54,760:INFO:create_model() successfully completed......................................
2023-05-24 10:50:54,857:INFO:SubProcess create_model() end ==================================
2023-05-24 10:50:54,857:INFO:Creating metrics dataframe
2023-05-24 10:50:54,866:INFO:Initializing create_model()
2023-05-24 10:50:54,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:50:54,866:INFO:Checking exceptions
2023-05-24 10:50:54,867:INFO:Importing libraries
2023-05-24 10:50:54,867:INFO:Copying training dataset
2023-05-24 10:50:54,869:INFO:Defining folds
2023-05-24 10:50:54,869:INFO:Declaring metric variables
2023-05-24 10:50:54,869:INFO:Importing untrained model
2023-05-24 10:50:54,869:INFO:Declaring custom model
2023-05-24 10:50:54,869:INFO:Logistic Regression Imported successfully
2023-05-24 10:50:54,870:INFO:Cross validation set to False
2023-05-24 10:50:54,870:INFO:Fitting Model
2023-05-24 10:50:56,162:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-24 10:50:56,163:INFO:create_model() successfully completed......................................
2023-05-24 10:50:56,271:INFO:_master_model_container: 14
2023-05-24 10:50:56,272:INFO:_display_container: 2
2023-05-24 10:50:56,272:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-24 10:50:56,272:INFO:compare_models() successfully completed......................................
2023-05-24 10:52:16,902:INFO:Initializing create_model()
2023-05-24 10:52:16,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=nom_du_modele, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:52:16,906:INFO:Checking exceptions
2023-05-24 10:52:55,109:INFO:Initializing create_model()
2023-05-24 10:52:55,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=an, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:52:55,110:INFO:Checking exceptions
2023-05-24 10:54:08,751:INFO:Initializing create_model()
2023-05-24 10:54:08,752:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-24 10:54:08,752:INFO:Checking exceptions
2023-05-24 10:54:08,772:INFO:Importing libraries
2023-05-24 10:54:08,772:INFO:Copying training dataset
2023-05-24 10:54:08,777:INFO:Defining folds
2023-05-24 10:54:08,777:INFO:Declaring metric variables
2023-05-24 10:54:08,779:INFO:Importing untrained model
2023-05-24 10:54:08,780:INFO:Logistic Regression Imported successfully
2023-05-24 10:54:08,783:INFO:Starting cross validation
2023-05-24 10:54:08,784:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 10:54:09,208:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,217:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,224:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:54:09,227:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,229:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,235:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,238:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:54:09,241:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,266:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,272:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,275:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:54:09,278:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,305:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,313:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,324:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,325:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:54:09,327:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,330:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,333:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,333:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:54:09,336:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,342:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,346:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:54:09,351:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,365:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,371:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,379:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:54:09,382:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,407:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,413:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,416:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:54:09,419:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,657:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,663:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,667:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:54:09,669:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,687:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,692:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,695:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 10:54:09,698:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 10:54:09,725:INFO:Calculating mean and std
2023-05-24 10:54:09,725:INFO:Creating metrics dataframe
2023-05-24 10:54:09,728:INFO:Finalizing model
2023-05-24 10:54:09,920:INFO:Uploading results into container
2023-05-24 10:54:09,921:INFO:Uploading model into container now
2023-05-24 10:54:09,925:INFO:_master_model_container: 15
2023-05-24 10:54:09,925:INFO:_display_container: 3
2023-05-24 10:54:09,925:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-24 10:54:09,925:INFO:create_model() successfully completed......................................
2023-05-24 10:54:16,520:INFO:Initializing evaluate_model()
2023-05-24 10:54:16,520:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-24 10:54:16,535:INFO:Initializing plot_model()
2023-05-24 10:54:16,535:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, system=True)
2023-05-24 10:54:16,536:INFO:Checking exceptions
2023-05-24 10:54:16,538:INFO:Preloading libraries
2023-05-24 10:54:16,538:INFO:Copying training dataset
2023-05-24 10:54:16,538:INFO:Plot type: pipeline
2023-05-24 10:54:16,620:INFO:Visual Rendered Successfully
2023-05-24 10:54:16,732:INFO:plot_model() successfully completed......................................
2023-05-24 10:54:19,684:INFO:Initializing plot_model()
2023-05-24 10:54:19,684:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, system=True)
2023-05-24 10:54:19,684:INFO:Checking exceptions
2023-05-24 10:54:19,688:INFO:Preloading libraries
2023-05-24 10:54:19,688:INFO:Copying training dataset
2023-05-24 10:54:19,688:INFO:Plot type: parameter
2023-05-24 10:54:19,693:INFO:Visual Rendered Successfully
2023-05-24 10:54:19,817:INFO:plot_model() successfully completed......................................
2023-05-24 10:54:20,439:INFO:Initializing plot_model()
2023-05-24 10:54:20,440:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, system=True)
2023-05-24 10:54:20,440:INFO:Checking exceptions
2023-05-24 10:54:20,446:INFO:Preloading libraries
2023-05-24 10:54:20,447:INFO:Copying training dataset
2023-05-24 10:54:20,447:INFO:Plot type: auc
2023-05-24 10:54:20,814:INFO:Fitting Model
2023-05-24 10:54:20,815:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning:

X does not have valid feature names, but LogisticRegression was fitted with feature names


2023-05-24 10:54:20,815:INFO:Scoring test/hold-out set
2023-05-24 10:54:20,930:INFO:Visual Rendered Successfully
2023-05-24 10:54:21,054:INFO:plot_model() successfully completed......................................
2023-05-24 10:54:23,562:INFO:Initializing predict_model()
2023-05-24 10:54:23,563:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2976f9090>)
2023-05-24 10:54:23,563:INFO:Checking exceptions
2023-05-24 10:54:23,563:INFO:Preloading libraries
2023-05-24 10:55:10,960:INFO:Initializing predict_model()
2023-05-24 10:55:10,961:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2976a1900>)
2023-05-24 10:55:10,961:INFO:Checking exceptions
2023-05-24 10:55:10,961:INFO:Preloading libraries
2023-05-24 10:57:41,751:INFO:Initializing predict_model()
2023-05-24 10:57:41,752:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2976a0a60>)
2023-05-24 10:57:41,752:INFO:Checking exceptions
2023-05-24 10:57:41,752:INFO:Preloading libraries
2023-05-24 10:59:12,094:INFO:Initializing predict_model()
2023-05-24 10:59:12,095:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x291fd7ac0>)
2023-05-24 10:59:12,097:INFO:Checking exceptions
2023-05-24 10:59:12,097:INFO:Preloading libraries
2023-05-24 10:59:12,101:INFO:Set up data.
2023-05-24 10:59:12,105:INFO:Set up index.
2023-05-24 11:00:06,978:INFO:Initializing predict_model()
2023-05-24 11:00:06,978:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x294e2b2e0>)
2023-05-24 11:00:06,979:INFO:Checking exceptions
2023-05-24 11:00:06,979:INFO:Preloading libraries
2023-05-24 11:00:06,985:INFO:Set up data.
2023-05-24 11:01:53,456:INFO:Initializing predict_model()
2023-05-24 11:01:53,456:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x299d83760>)
2023-05-24 11:01:53,457:INFO:Checking exceptions
2023-05-24 11:01:53,457:INFO:Preloading libraries
2023-05-24 11:01:53,460:INFO:Set up data.
2023-05-24 11:03:14,451:INFO:Initializing predict_model()
2023-05-24 11:03:14,451:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x299e8eb90>)
2023-05-24 11:03:14,452:INFO:Checking exceptions
2023-05-24 11:03:14,452:INFO:Preloading libraries
2023-05-24 11:03:14,458:INFO:Set up data.
2023-05-24 11:03:14,461:INFO:Set up index.
2023-05-24 11:03:27,543:INFO:Initializing plot_model()
2023-05-24 11:03:27,544:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, system=True)
2023-05-24 11:03:27,544:INFO:Checking exceptions
2023-05-24 11:03:27,549:INFO:Preloading libraries
2023-05-24 11:03:27,549:INFO:Copying training dataset
2023-05-24 11:03:27,549:INFO:Plot type: pipeline
2023-05-24 11:03:27,617:INFO:Visual Rendered Successfully
2023-05-24 11:03:27,749:INFO:plot_model() successfully completed......................................
2023-05-24 11:03:31,991:INFO:Initializing plot_model()
2023-05-24 11:03:31,991:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, system=True)
2023-05-24 11:03:31,991:INFO:Checking exceptions
2023-05-24 11:03:31,995:INFO:Preloading libraries
2023-05-24 11:03:31,996:INFO:Copying training dataset
2023-05-24 11:03:31,996:INFO:Plot type: confusion_matrix
2023-05-24 11:03:32,365:INFO:Fitting Model
2023-05-24 11:03:32,365:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning:

X does not have valid feature names, but LogisticRegression was fitted with feature names


2023-05-24 11:03:32,365:INFO:Scoring test/hold-out set
2023-05-24 11:03:32,464:INFO:Visual Rendered Successfully
2023-05-24 11:03:32,598:INFO:plot_model() successfully completed......................................
2023-05-24 11:04:18,298:INFO:Initializing predict_model()
2023-05-24 11:04:18,299:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x294e2ba30>)
2023-05-24 11:04:18,300:INFO:Checking exceptions
2023-05-24 11:04:18,300:INFO:Preloading libraries
2023-05-24 11:04:18,303:INFO:Set up data.
2023-05-24 11:04:18,305:INFO:Set up index.
2023-05-24 11:07:05,661:INFO:Initializing predict_model()
2023-05-24 11:07:05,662:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x29760b0a0>)
2023-05-24 11:07:05,662:INFO:Checking exceptions
2023-05-24 11:07:05,662:INFO:Preloading libraries
2023-05-24 11:07:05,668:INFO:Set up data.
2023-05-24 11:07:05,672:INFO:Set up index.
2023-05-24 11:07:13,920:INFO:Initializing predict_model()
2023-05-24 11:07:13,921:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x29760ab00>)
2023-05-24 11:07:13,921:INFO:Checking exceptions
2023-05-24 11:07:13,921:INFO:Preloading libraries
2023-05-24 11:07:13,922:INFO:Set up data.
2023-05-24 11:07:13,923:INFO:Set up index.
2023-05-24 11:07:25,710:INFO:Initializing predict_model()
2023-05-24 11:07:25,711:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x29760b6d0>)
2023-05-24 11:07:25,712:INFO:Checking exceptions
2023-05-24 11:07:25,713:INFO:Preloading libraries
2023-05-24 11:07:25,718:INFO:Set up data.
2023-05-24 11:07:25,722:INFO:Set up index.
2023-05-24 11:07:40,744:INFO:Initializing predict_model()
2023-05-24 11:07:40,744:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x299e8f490>)
2023-05-24 11:07:40,745:INFO:Checking exceptions
2023-05-24 11:07:40,745:INFO:Preloading libraries
2023-05-24 11:07:40,747:INFO:Set up data.
2023-05-24 11:07:40,750:INFO:Set up index.
2023-05-24 11:07:43,340:INFO:Initializing predict_model()
2023-05-24 11:07:43,341:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917efd60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7108, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2976a3be0>)
2023-05-24 11:07:43,343:INFO:Checking exceptions
2023-05-24 11:07:43,343:INFO:Preloading libraries
2023-05-24 11:07:43,345:INFO:Set up data.
2023-05-24 11:07:43,347:INFO:Set up index.
2023-05-24 11:08:01,904:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-24 11:08:01,905:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-24 11:08:01,905:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-24 11:08:01,905:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-24 11:08:02,224:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-24 11:08:02,344:INFO:PyCaret ClassificationExperiment
2023-05-24 11:08:02,344:INFO:Logging name: clf-default-name
2023-05-24 11:08:02,344:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-24 11:08:02,344:INFO:version 3.0.2
2023-05-24 11:08:02,344:INFO:Initializing setup()
2023-05-24 11:08:02,344:INFO:self.USI: 1822
2023-05-24 11:08:02,344:INFO:self._variable_keys: {'logging_param', 'X', 'target_param', 'USI', 'gpu_param', 'fix_imbalance', 'y_test', 'seed', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'n_jobs_param', 'y_train', 'y', 'exp_id', 'idx', 'fold_shuffle_param', 'data', 'X_test', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'X_train', 'html_param', 'log_plots_param', 'memory'}
2023-05-24 11:08:02,344:INFO:Checking environment
2023-05-24 11:08:02,344:INFO:python_version: 3.10.9
2023-05-24 11:08:02,344:INFO:python_build: ('main', 'Mar  1 2023 12:20:14')
2023-05-24 11:08:02,344:INFO:machine: arm64
2023-05-24 11:08:02,344:INFO:platform: macOS-13.3.1-arm64-arm-64bit
2023-05-24 11:08:02,344:INFO:Memory: svmem(total=17179869184, available=6148194304, percent=64.2, used=7045398528, free=1447542784, active=4597153792, inactive=4500062208, wired=2448244736)
2023-05-24 11:08:02,344:INFO:Physical Core: 8
2023-05-24 11:08:02,344:INFO:Logical Core: 8
2023-05-24 11:08:02,344:INFO:Checking libraries
2023-05-24 11:08:02,344:INFO:System:
2023-05-24 11:08:02,344:INFO:    python: 3.10.9 (main, Mar  1 2023, 12:20:14) [Clang 14.0.6 ]
2023-05-24 11:08:02,344:INFO:executable: /Users/corneliusvincent/anaconda3/bin/python
2023-05-24 11:08:02,345:INFO:   machine: macOS-13.3.1-arm64-arm-64bit
2023-05-24 11:08:02,345:INFO:PyCaret required dependencies:
2023-05-24 11:08:02,345:INFO:                 pip: 23.1.2
2023-05-24 11:08:02,345:INFO:          setuptools: 65.6.3
2023-05-24 11:08:02,345:INFO:             pycaret: 3.0.2
2023-05-24 11:08:02,345:INFO:             IPython: 8.10.0
2023-05-24 11:08:02,345:INFO:          ipywidgets: 8.0.6
2023-05-24 11:08:02,345:INFO:                tqdm: 4.64.1
2023-05-24 11:08:02,345:INFO:               numpy: 1.23.5
2023-05-24 11:08:02,345:INFO:              pandas: 1.5.3
2023-05-24 11:08:02,345:INFO:              jinja2: 3.1.2
2023-05-24 11:08:02,345:INFO:               scipy: 1.9.3
2023-05-24 11:08:02,345:INFO:              joblib: 1.2.0
2023-05-24 11:08:02,345:INFO:             sklearn: 1.2.2
2023-05-24 11:08:02,345:INFO:                pyod: 1.0.9
2023-05-24 11:08:02,345:INFO:            imblearn: 0.10.1
2023-05-24 11:08:02,345:INFO:   category_encoders: 2.6.1
2023-05-24 11:08:02,345:INFO:            lightgbm: 3.3.5
2023-05-24 11:08:02,345:INFO:               numba: 0.56.4
2023-05-24 11:08:02,345:INFO:            requests: 2.28.1
2023-05-24 11:08:02,345:INFO:          matplotlib: 3.6.3
2023-05-24 11:08:02,345:INFO:          scikitplot: 0.3.7
2023-05-24 11:08:02,345:INFO:         yellowbrick: 1.5
2023-05-24 11:08:02,345:INFO:              plotly: 5.9.0
2023-05-24 11:08:02,345:INFO:             kaleido: 0.2.1
2023-05-24 11:08:02,345:INFO:         statsmodels: 0.13.5
2023-05-24 11:08:02,345:INFO:              sktime: 0.17.0
2023-05-24 11:08:02,345:INFO:               tbats: 1.1.3
2023-05-24 11:08:02,345:INFO:            pmdarima: 2.0.3
2023-05-24 11:08:02,345:INFO:              psutil: 5.9.0
2023-05-24 11:08:02,345:INFO:PyCaret optional dependencies:
2023-05-24 11:08:02,351:INFO:                shap: Not installed
2023-05-24 11:08:02,351:INFO:           interpret: Not installed
2023-05-24 11:08:02,351:INFO:                umap: Not installed
2023-05-24 11:08:02,351:INFO:    pandas_profiling: 4.1.2
2023-05-24 11:08:02,351:INFO:  explainerdashboard: Not installed
2023-05-24 11:08:02,351:INFO:             autoviz: Not installed
2023-05-24 11:08:02,351:INFO:           fairlearn: Not installed
2023-05-24 11:08:02,351:INFO:             xgboost: Not installed
2023-05-24 11:08:02,351:INFO:            catboost: Not installed
2023-05-24 11:08:02,351:INFO:              kmodes: Not installed
2023-05-24 11:08:02,351:INFO:             mlxtend: Not installed
2023-05-24 11:08:02,351:INFO:       statsforecast: Not installed
2023-05-24 11:08:02,351:INFO:        tune_sklearn: Not installed
2023-05-24 11:08:02,351:INFO:                 ray: Not installed
2023-05-24 11:08:02,351:INFO:            hyperopt: Not installed
2023-05-24 11:08:02,351:INFO:              optuna: Not installed
2023-05-24 11:08:02,351:INFO:               skopt: Not installed
2023-05-24 11:08:02,351:INFO:              mlflow: Not installed
2023-05-24 11:08:02,351:INFO:              gradio: Not installed
2023-05-24 11:08:02,351:INFO:             fastapi: Not installed
2023-05-24 11:08:02,351:INFO:             uvicorn: Not installed
2023-05-24 11:08:02,351:INFO:              m2cgen: Not installed
2023-05-24 11:08:02,351:INFO:           evidently: Not installed
2023-05-24 11:08:02,351:INFO:               fugue: Not installed
2023-05-24 11:08:02,351:INFO:           streamlit: 1.22.0
2023-05-24 11:08:02,351:INFO:             prophet: Not installed
2023-05-24 11:08:02,351:INFO:None
2023-05-24 11:08:02,351:INFO:Set up data.
2023-05-24 11:08:02,374:INFO:Set up train/test split.
2023-05-24 11:08:02,394:INFO:Set up index.
2023-05-24 11:08:02,394:INFO:Set up folding strategy.
2023-05-24 11:08:02,394:INFO:Assigning column types.
2023-05-24 11:08:02,395:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-24 11:08:02,414:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-24 11:08:02,414:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 11:08:02,429:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:08:02,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:08:02,533:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-24 11:08:02,533:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 11:08:02,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:08:02,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:08:02,545:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-24 11:08:02,564:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 11:08:02,576:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:08:02,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:08:02,594:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 11:08:02,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:08:02,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:08:02,606:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-24 11:08:02,636:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:08:02,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:08:02,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:08:02,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:08:02,668:INFO:Preparing preprocessing pipeline...
2023-05-24 11:08:02,669:INFO:Set up label encoding.
2023-05-24 11:08:02,669:INFO:Set up simple imputation.
2023-05-24 11:08:02,670:INFO:Set up encoding of categorical features.
2023-05-24 11:08:02,776:INFO:Finished creating preprocessing pipeline.
2023-05-24 11:08:02,778:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/nz/xhcvl6_17cb_xn608wktx0bc0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Clean_Text'],
                                    transformer=TargetEncoder(cols=['Clean_Text'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-24 11:08:02,778:INFO:Creating final display dataframe.
2023-05-24 11:08:03,098:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                7083  
1                                             Emotion  
2                                          Multiclass  
3   anger: 0, disgust: 1, fear: 2, joy: 3, neutral...  
4                                          (34792, 2)  
5                                          (34792, 2)  
6                                          (24354, 2)  
7                                          (10438, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               1822  
2023-05-24 11:08:03,132:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:08:03,132:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:08:03,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:08:03,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:08:03,163:INFO:setup() successfully completed in 0.86s...............
2023-05-24 11:08:03,167:INFO:Initializing compare_models()
2023-05-24 11:08:03,167:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-24 11:08:03,167:INFO:Checking exceptions
2023-05-24 11:08:03,169:INFO:Preparing display monitor
2023-05-24 11:08:03,190:INFO:Initializing Logistic Regression
2023-05-24 11:08:03,190:INFO:Total runtime is 2.8173128763834635e-06 minutes
2023-05-24 11:08:03,192:INFO:SubProcess create_model() called ==================================
2023-05-24 11:08:03,192:INFO:Initializing create_model()
2023-05-24 11:08:03,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x157060ac0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:08:03,192:INFO:Checking exceptions
2023-05-24 11:08:03,192:INFO:Importing libraries
2023-05-24 11:08:03,192:INFO:Copying training dataset
2023-05-24 11:08:03,196:INFO:Defining folds
2023-05-24 11:08:03,197:INFO:Declaring metric variables
2023-05-24 11:08:03,198:INFO:Importing untrained model
2023-05-24 11:08:03,200:INFO:Logistic Regression Imported successfully
2023-05-24 11:08:03,203:INFO:Starting cross validation
2023-05-24 11:08:03,204:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:08:06,517:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:06,523:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:06,527:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:06,530:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:06,657:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:06,663:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:06,667:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:06,673:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:06,685:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:06,692:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:06,695:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:06,698:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,052:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,059:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,063:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:07,065:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,068:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,079:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,086:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:07,090:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,153:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,160:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,168:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:07,171:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,191:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,201:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,205:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:07,208:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,225:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,238:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,241:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:07,244:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,799:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,805:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:07,808:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:07,811:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,282:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,288:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,291:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:08,294:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,303:INFO:Calculating mean and std
2023-05-24 11:08:08,304:INFO:Creating metrics dataframe
2023-05-24 11:08:08,374:INFO:Uploading results into container
2023-05-24 11:08:08,374:INFO:Uploading model into container now
2023-05-24 11:08:08,374:INFO:_master_model_container: 1
2023-05-24 11:08:08,374:INFO:_display_container: 2
2023-05-24 11:08:08,375:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7083, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-24 11:08:08,375:INFO:create_model() successfully completed......................................
2023-05-24 11:08:08,440:INFO:SubProcess create_model() end ==================================
2023-05-24 11:08:08,440:INFO:Creating metrics dataframe
2023-05-24 11:08:08,444:INFO:Initializing K Neighbors Classifier
2023-05-24 11:08:08,444:INFO:Total runtime is 0.08756561676661173 minutes
2023-05-24 11:08:08,445:INFO:SubProcess create_model() called ==================================
2023-05-24 11:08:08,445:INFO:Initializing create_model()
2023-05-24 11:08:08,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x157060ac0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:08:08,445:INFO:Checking exceptions
2023-05-24 11:08:08,445:INFO:Importing libraries
2023-05-24 11:08:08,445:INFO:Copying training dataset
2023-05-24 11:08:08,448:INFO:Defining folds
2023-05-24 11:08:08,448:INFO:Declaring metric variables
2023-05-24 11:08:08,449:INFO:Importing untrained model
2023-05-24 11:08:08,451:INFO:K Neighbors Classifier Imported successfully
2023-05-24 11:08:08,454:INFO:Starting cross validation
2023-05-24 11:08:08,455:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:08:08,909:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,915:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,919:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:08,921:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,946:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,956:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,957:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,959:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:08,962:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,963:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,965:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,966:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:08,969:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,971:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,975:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:08,978:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,985:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,991:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:08,994:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:08,997:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,010:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,010:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,016:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,016:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,019:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:09,019:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:09,022:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,022:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,027:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,033:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,036:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:09,038:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,351:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,356:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,359:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:09,362:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,371:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,377:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,380:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:09,383:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,418:INFO:Calculating mean and std
2023-05-24 11:08:09,418:INFO:Creating metrics dataframe
2023-05-24 11:08:09,481:INFO:Uploading results into container
2023-05-24 11:08:09,482:INFO:Uploading model into container now
2023-05-24 11:08:09,482:INFO:_master_model_container: 2
2023-05-24 11:08:09,482:INFO:_display_container: 2
2023-05-24 11:08:09,482:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-24 11:08:09,482:INFO:create_model() successfully completed......................................
2023-05-24 11:08:09,542:INFO:SubProcess create_model() end ==================================
2023-05-24 11:08:09,542:INFO:Creating metrics dataframe
2023-05-24 11:08:09,546:INFO:Initializing Naive Bayes
2023-05-24 11:08:09,546:INFO:Total runtime is 0.1059393843015035 minutes
2023-05-24 11:08:09,547:INFO:SubProcess create_model() called ==================================
2023-05-24 11:08:09,547:INFO:Initializing create_model()
2023-05-24 11:08:09,547:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x157060ac0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:08:09,548:INFO:Checking exceptions
2023-05-24 11:08:09,548:INFO:Importing libraries
2023-05-24 11:08:09,548:INFO:Copying training dataset
2023-05-24 11:08:09,550:INFO:Defining folds
2023-05-24 11:08:09,550:INFO:Declaring metric variables
2023-05-24 11:08:09,551:INFO:Importing untrained model
2023-05-24 11:08:09,553:INFO:Naive Bayes Imported successfully
2023-05-24 11:08:09,556:INFO:Starting cross validation
2023-05-24 11:08:09,556:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:08:09,941:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,947:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,951:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:09,956:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,976:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,982:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,983:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,992:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:09,993:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:09,998:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,000:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:10,003:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,011:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,014:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,017:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,020:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:10,021:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,023:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,028:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:10,034:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,034:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,037:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,042:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,046:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:10,046:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,048:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,049:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:10,059:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,069:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,075:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,078:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:10,081:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,326:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,331:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,334:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:10,337:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,376:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,381:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,384:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:10,387:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,395:INFO:Calculating mean and std
2023-05-24 11:08:10,396:INFO:Creating metrics dataframe
2023-05-24 11:08:10,461:INFO:Uploading results into container
2023-05-24 11:08:10,462:INFO:Uploading model into container now
2023-05-24 11:08:10,462:INFO:_master_model_container: 3
2023-05-24 11:08:10,462:INFO:_display_container: 2
2023-05-24 11:08:10,462:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-24 11:08:10,462:INFO:create_model() successfully completed......................................
2023-05-24 11:08:10,520:INFO:SubProcess create_model() end ==================================
2023-05-24 11:08:10,520:INFO:Creating metrics dataframe
2023-05-24 11:08:10,524:INFO:Initializing Decision Tree Classifier
2023-05-24 11:08:10,524:INFO:Total runtime is 0.1222422480583191 minutes
2023-05-24 11:08:10,525:INFO:SubProcess create_model() called ==================================
2023-05-24 11:08:10,526:INFO:Initializing create_model()
2023-05-24 11:08:10,526:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x157060ac0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:08:10,526:INFO:Checking exceptions
2023-05-24 11:08:10,526:INFO:Importing libraries
2023-05-24 11:08:10,526:INFO:Copying training dataset
2023-05-24 11:08:10,528:INFO:Defining folds
2023-05-24 11:08:10,528:INFO:Declaring metric variables
2023-05-24 11:08:10,530:INFO:Importing untrained model
2023-05-24 11:08:10,531:INFO:Decision Tree Classifier Imported successfully
2023-05-24 11:08:10,534:INFO:Starting cross validation
2023-05-24 11:08:10,535:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:08:10,953:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,957:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,961:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,963:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,965:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,966:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:10,969:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,969:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:10,971:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,972:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,974:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,974:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:10,977:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,986:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,990:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:10,992:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,995:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:10,995:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,006:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,006:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,006:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,009:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:11,011:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,011:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,012:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,015:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:11,015:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:11,017:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,018:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,020:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:11,023:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,025:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,346:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,352:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,355:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:11,357:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,358:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,363:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,367:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:11,369:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:11,416:INFO:Calculating mean and std
2023-05-24 11:08:11,417:INFO:Creating metrics dataframe
2023-05-24 11:08:11,474:INFO:Uploading results into container
2023-05-24 11:08:11,475:INFO:Uploading model into container now
2023-05-24 11:08:11,475:INFO:_master_model_container: 4
2023-05-24 11:08:11,475:INFO:_display_container: 2
2023-05-24 11:08:11,475:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7083, splitter='best')
2023-05-24 11:08:11,475:INFO:create_model() successfully completed......................................
2023-05-24 11:08:11,533:INFO:SubProcess create_model() end ==================================
2023-05-24 11:08:11,533:INFO:Creating metrics dataframe
2023-05-24 11:08:11,537:INFO:Initializing SVM - Linear Kernel
2023-05-24 11:08:11,537:INFO:Total runtime is 0.1391210953394572 minutes
2023-05-24 11:08:11,538:INFO:SubProcess create_model() called ==================================
2023-05-24 11:08:11,538:INFO:Initializing create_model()
2023-05-24 11:08:11,538:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x157060ac0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:08:11,538:INFO:Checking exceptions
2023-05-24 11:08:11,538:INFO:Importing libraries
2023-05-24 11:08:11,538:INFO:Copying training dataset
2023-05-24 11:08:11,541:INFO:Defining folds
2023-05-24 11:08:11,541:INFO:Declaring metric variables
2023-05-24 11:08:11,542:INFO:Importing untrained model
2023-05-24 11:08:11,544:INFO:SVM - Linear Kernel Imported successfully
2023-05-24 11:08:11,547:INFO:Starting cross validation
2023-05-24 11:08:11,547:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:08:12,050:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:08:12,053:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,059:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,059:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:08:12,062:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:12,065:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,066:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,076:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,078:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:08:12,080:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:12,081:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,087:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,088:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,090:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:12,093:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,097:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:08:12,098:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:08:12,099:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,101:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,105:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,107:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,108:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:12,109:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:08:12,110:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:12,111:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,112:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,113:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,123:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:08:12,125:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,127:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,130:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:12,131:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,133:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,134:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:12,137:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,150:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:08:12,153:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,162:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,165:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:12,168:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,465:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:08:12,468:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,474:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,477:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:12,478:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:08:12,479:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,481:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,486:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,489:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:12,492:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,541:INFO:Calculating mean and std
2023-05-24 11:08:12,542:INFO:Creating metrics dataframe
2023-05-24 11:08:12,600:INFO:Uploading results into container
2023-05-24 11:08:12,601:INFO:Uploading model into container now
2023-05-24 11:08:12,601:INFO:_master_model_container: 5
2023-05-24 11:08:12,601:INFO:_display_container: 2
2023-05-24 11:08:12,601:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7083, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-24 11:08:12,601:INFO:create_model() successfully completed......................................
2023-05-24 11:08:12,659:INFO:SubProcess create_model() end ==================================
2023-05-24 11:08:12,659:INFO:Creating metrics dataframe
2023-05-24 11:08:12,663:INFO:Initializing Ridge Classifier
2023-05-24 11:08:12,663:INFO:Total runtime is 0.15789459546407064 minutes
2023-05-24 11:08:12,665:INFO:SubProcess create_model() called ==================================
2023-05-24 11:08:12,665:INFO:Initializing create_model()
2023-05-24 11:08:12,665:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x157060ac0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:08:12,665:INFO:Checking exceptions
2023-05-24 11:08:12,665:INFO:Importing libraries
2023-05-24 11:08:12,665:INFO:Copying training dataset
2023-05-24 11:08:12,667:INFO:Defining folds
2023-05-24 11:08:12,667:INFO:Declaring metric variables
2023-05-24 11:08:12,669:INFO:Importing untrained model
2023-05-24 11:08:12,670:INFO:Ridge Classifier Imported successfully
2023-05-24 11:08:12,673:INFO:Starting cross validation
2023-05-24 11:08:12,674:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:08:12,960:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:08:12,963:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,969:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,972:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:12,975:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,989:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:08:12,995:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:08:12,998:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:12,999:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,004:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,005:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,007:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:13,010:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,016:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:13,024:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,032:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:08:13,035:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,036:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:08:13,039:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,041:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,044:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:13,045:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,047:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,048:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:13,051:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,064:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:08:13,066:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,072:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,075:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:13,078:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,078:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:08:13,081:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,087:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,090:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:13,093:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,105:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:08:13,108:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,114:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,117:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:13,119:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,288:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:08:13,291:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,296:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,300:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:13,302:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,324:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:08:13,327:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,332:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,335:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:13,338:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:13,406:INFO:Calculating mean and std
2023-05-24 11:08:13,407:INFO:Creating metrics dataframe
2023-05-24 11:08:13,465:INFO:Uploading results into container
2023-05-24 11:08:13,465:INFO:Uploading model into container now
2023-05-24 11:08:13,465:INFO:_master_model_container: 6
2023-05-24 11:08:13,465:INFO:_display_container: 2
2023-05-24 11:08:13,465:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7083, solver='auto',
                tol=0.0001)
2023-05-24 11:08:13,465:INFO:create_model() successfully completed......................................
2023-05-24 11:08:13,523:INFO:SubProcess create_model() end ==================================
2023-05-24 11:08:13,523:INFO:Creating metrics dataframe
2023-05-24 11:08:13,528:INFO:Initializing Random Forest Classifier
2023-05-24 11:08:13,528:INFO:Total runtime is 0.17229968309402466 minutes
2023-05-24 11:08:13,529:INFO:SubProcess create_model() called ==================================
2023-05-24 11:08:13,529:INFO:Initializing create_model()
2023-05-24 11:08:13,529:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x157060ac0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:08:13,529:INFO:Checking exceptions
2023-05-24 11:08:13,529:INFO:Importing libraries
2023-05-24 11:08:13,529:INFO:Copying training dataset
2023-05-24 11:08:13,531:INFO:Defining folds
2023-05-24 11:08:13,531:INFO:Declaring metric variables
2023-05-24 11:08:13,532:INFO:Importing untrained model
2023-05-24 11:08:13,534:INFO:Random Forest Classifier Imported successfully
2023-05-24 11:08:13,536:INFO:Starting cross validation
2023-05-24 11:08:13,537:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:08:14,510:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,517:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,520:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:14,522:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,526:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,527:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,528:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,531:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:14,534:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,535:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,538:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:14,541:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,568:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,569:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,574:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,575:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,577:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:14,578:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:14,579:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,581:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,590:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,596:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,599:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:14,602:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,613:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,621:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,624:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,627:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:14,628:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,630:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:14,632:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:14,634:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,208:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,213:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,215:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,217:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:15,219:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,220:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,223:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:15,226:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,280:INFO:Calculating mean and std
2023-05-24 11:08:15,280:INFO:Creating metrics dataframe
2023-05-24 11:08:15,342:INFO:Uploading results into container
2023-05-24 11:08:15,342:INFO:Uploading model into container now
2023-05-24 11:08:15,342:INFO:_master_model_container: 7
2023-05-24 11:08:15,342:INFO:_display_container: 2
2023-05-24 11:08:15,342:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7083, verbose=0, warm_start=False)
2023-05-24 11:08:15,342:INFO:create_model() successfully completed......................................
2023-05-24 11:08:15,401:INFO:SubProcess create_model() end ==================================
2023-05-24 11:08:15,402:INFO:Creating metrics dataframe
2023-05-24 11:08:15,406:INFO:Initializing Quadratic Discriminant Analysis
2023-05-24 11:08:15,406:INFO:Total runtime is 0.20361044804255168 minutes
2023-05-24 11:08:15,408:INFO:SubProcess create_model() called ==================================
2023-05-24 11:08:15,408:INFO:Initializing create_model()
2023-05-24 11:08:15,408:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x157060ac0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:08:15,408:INFO:Checking exceptions
2023-05-24 11:08:15,408:INFO:Importing libraries
2023-05-24 11:08:15,408:INFO:Copying training dataset
2023-05-24 11:08:15,411:INFO:Defining folds
2023-05-24 11:08:15,411:INFO:Declaring metric variables
2023-05-24 11:08:15,413:INFO:Importing untrained model
2023-05-24 11:08:15,414:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-24 11:08:15,417:INFO:Starting cross validation
2023-05-24 11:08:15,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:08:15,616:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:08:15,619:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:08:15,640:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:08:15,654:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:08:15,656:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:08:15,682:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:08:15,682:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:08:15,723:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:08:15,831:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,835:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,835:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,837:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,840:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:15,841:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,843:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,844:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:15,847:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,849:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,851:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,857:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,858:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:15,861:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:15,864:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,864:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,879:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,883:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,888:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,889:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,891:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:15,892:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:15,895:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,897:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,901:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,903:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,907:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,907:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:15,909:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,918:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:15,924:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:15,929:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:16,072:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:08:16,102:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:08:16,141:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 11:08:16,141:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-24 11:08:16,141:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-05-24 11:08:16,171:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 11:08:16,171:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-24 11:08:16,171:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-05-24 11:08:16,210:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 11:08:16,210:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-24 11:08:16,210:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-05-24 11:08:16,213:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/validation.py", line 921, in check_array
    _assert_all_finite(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-05-24 11:08:16,216:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:16,221:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:16,224:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:16,227:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:16,241:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 11:08:16,241:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-24 11:08:16,241:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-05-24 11:08:16,242:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/validation.py", line 921, in check_array
    _assert_all_finite(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-05-24 11:08:16,245:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:16,250:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:16,254:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:16,256:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:16,280:INFO:Calculating mean and std
2023-05-24 11:08:16,281:INFO:Creating metrics dataframe
2023-05-24 11:08:16,344:INFO:Uploading results into container
2023-05-24 11:08:16,344:INFO:Uploading model into container now
2023-05-24 11:08:16,345:INFO:_master_model_container: 8
2023-05-24 11:08:16,345:INFO:_display_container: 2
2023-05-24 11:08:16,345:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-24 11:08:16,345:INFO:create_model() successfully completed......................................
2023-05-24 11:08:16,405:INFO:SubProcess create_model() end ==================================
2023-05-24 11:08:16,406:INFO:Creating metrics dataframe
2023-05-24 11:08:16,410:INFO:Initializing Ada Boost Classifier
2023-05-24 11:08:16,410:INFO:Total runtime is 0.22034564812978108 minutes
2023-05-24 11:08:16,412:INFO:SubProcess create_model() called ==================================
2023-05-24 11:08:16,412:INFO:Initializing create_model()
2023-05-24 11:08:16,412:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x157060ac0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:08:16,412:INFO:Checking exceptions
2023-05-24 11:08:16,412:INFO:Importing libraries
2023-05-24 11:08:16,412:INFO:Copying training dataset
2023-05-24 11:08:16,414:INFO:Defining folds
2023-05-24 11:08:16,414:INFO:Declaring metric variables
2023-05-24 11:08:16,416:INFO:Importing untrained model
2023-05-24 11:08:16,418:INFO:Ada Boost Classifier Imported successfully
2023-05-24 11:08:16,421:INFO:Starting cross validation
2023-05-24 11:08:16,421:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:08:17,279:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,286:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,292:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,294:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,295:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:17,298:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:17,300:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,302:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,310:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,313:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,316:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,316:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,319:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:17,322:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,324:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,328:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:17,330:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,336:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,342:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:17,345:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,379:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,385:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,388:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:17,397:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,398:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,410:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,417:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:17,420:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,428:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,434:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,437:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:17,440:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,974:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,979:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:17,982:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:17,985:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:18,011:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:18,017:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:18,020:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:18,023:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:18,045:INFO:Calculating mean and std
2023-05-24 11:08:18,045:INFO:Creating metrics dataframe
2023-05-24 11:08:18,112:INFO:Uploading results into container
2023-05-24 11:08:18,113:INFO:Uploading model into container now
2023-05-24 11:08:18,113:INFO:_master_model_container: 9
2023-05-24 11:08:18,113:INFO:_display_container: 2
2023-05-24 11:08:18,113:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7083)
2023-05-24 11:08:18,113:INFO:create_model() successfully completed......................................
2023-05-24 11:08:18,171:INFO:SubProcess create_model() end ==================================
2023-05-24 11:08:18,171:INFO:Creating metrics dataframe
2023-05-24 11:08:18,175:INFO:Initializing Gradient Boosting Classifier
2023-05-24 11:08:18,175:INFO:Total runtime is 0.24976076285044352 minutes
2023-05-24 11:08:18,177:INFO:SubProcess create_model() called ==================================
2023-05-24 11:08:18,177:INFO:Initializing create_model()
2023-05-24 11:08:18,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x157060ac0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:08:18,177:INFO:Checking exceptions
2023-05-24 11:08:18,177:INFO:Importing libraries
2023-05-24 11:08:18,177:INFO:Copying training dataset
2023-05-24 11:08:18,179:INFO:Defining folds
2023-05-24 11:08:18,179:INFO:Declaring metric variables
2023-05-24 11:08:18,181:INFO:Importing untrained model
2023-05-24 11:08:18,182:INFO:Gradient Boosting Classifier Imported successfully
2023-05-24 11:08:18,185:INFO:Starting cross validation
2023-05-24 11:08:18,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:08:23,197:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,208:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,212:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,214:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:23,217:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,218:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,221:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:23,223:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,235:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,244:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,247:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:23,250:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,255:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,270:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,273:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,277:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:23,279:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,280:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,282:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:23,285:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,331:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,342:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,346:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:23,348:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,413:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,419:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,423:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:23,426:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,454:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,461:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:23,464:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:23,466:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,147:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,153:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,156:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:27,159:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,241:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,247:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,250:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:27,253:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,261:INFO:Calculating mean and std
2023-05-24 11:08:27,262:INFO:Creating metrics dataframe
2023-05-24 11:08:27,335:INFO:Uploading results into container
2023-05-24 11:08:27,335:INFO:Uploading model into container now
2023-05-24 11:08:27,335:INFO:_master_model_container: 10
2023-05-24 11:08:27,335:INFO:_display_container: 2
2023-05-24 11:08:27,336:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7083, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-24 11:08:27,336:INFO:create_model() successfully completed......................................
2023-05-24 11:08:27,393:INFO:SubProcess create_model() end ==================================
2023-05-24 11:08:27,393:INFO:Creating metrics dataframe
2023-05-24 11:08:27,398:INFO:Initializing Linear Discriminant Analysis
2023-05-24 11:08:27,398:INFO:Total runtime is 0.4034676671028137 minutes
2023-05-24 11:08:27,399:INFO:SubProcess create_model() called ==================================
2023-05-24 11:08:27,399:INFO:Initializing create_model()
2023-05-24 11:08:27,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x157060ac0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:08:27,399:INFO:Checking exceptions
2023-05-24 11:08:27,399:INFO:Importing libraries
2023-05-24 11:08:27,399:INFO:Copying training dataset
2023-05-24 11:08:27,402:INFO:Defining folds
2023-05-24 11:08:27,402:INFO:Declaring metric variables
2023-05-24 11:08:27,403:INFO:Importing untrained model
2023-05-24 11:08:27,404:INFO:Linear Discriminant Analysis Imported successfully
2023-05-24 11:08:27,407:INFO:Starting cross validation
2023-05-24 11:08:27,408:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:08:27,809:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,817:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,821:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,827:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,828:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:27,830:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:27,830:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,833:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,835:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,841:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,845:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,847:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:27,855:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,859:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,862:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,866:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:27,869:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,872:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,883:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:27,886:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,898:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,904:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,907:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:27,908:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,914:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,914:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,916:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,917:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:27,920:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,920:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:27,923:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:27,925:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:28,205:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:28,211:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:28,214:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:28,216:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:28,235:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:28,242:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:28,245:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:28,247:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:28,274:INFO:Calculating mean and std
2023-05-24 11:08:28,275:INFO:Creating metrics dataframe
2023-05-24 11:08:28,342:INFO:Uploading results into container
2023-05-24 11:08:28,343:INFO:Uploading model into container now
2023-05-24 11:08:28,343:INFO:_master_model_container: 11
2023-05-24 11:08:28,343:INFO:_display_container: 2
2023-05-24 11:08:28,343:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-24 11:08:28,343:INFO:create_model() successfully completed......................................
2023-05-24 11:08:28,401:INFO:SubProcess create_model() end ==================================
2023-05-24 11:08:28,401:INFO:Creating metrics dataframe
2023-05-24 11:08:28,406:INFO:Initializing Extra Trees Classifier
2023-05-24 11:08:28,406:INFO:Total runtime is 0.4202757795651753 minutes
2023-05-24 11:08:28,407:INFO:SubProcess create_model() called ==================================
2023-05-24 11:08:28,408:INFO:Initializing create_model()
2023-05-24 11:08:28,408:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x157060ac0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:08:28,408:INFO:Checking exceptions
2023-05-24 11:08:28,408:INFO:Importing libraries
2023-05-24 11:08:28,408:INFO:Copying training dataset
2023-05-24 11:08:28,411:INFO:Defining folds
2023-05-24 11:08:28,411:INFO:Declaring metric variables
2023-05-24 11:08:28,412:INFO:Importing untrained model
2023-05-24 11:08:28,414:INFO:Extra Trees Classifier Imported successfully
2023-05-24 11:08:28,417:INFO:Starting cross validation
2023-05-24 11:08:28,417:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:08:29,373:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,380:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,384:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:29,387:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,387:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,389:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,394:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,395:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,398:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:29,399:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:29,400:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,401:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,415:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,421:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,424:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:29,427:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,429:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,430:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,442:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,445:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:29,447:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,448:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,452:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:29,454:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,466:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,472:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,475:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:29,478:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,486:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,492:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:29,496:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:29,498:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:30,025:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:30,031:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:30,035:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:30,038:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:30,044:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:30,050:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:30,053:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:30,056:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:30,102:INFO:Calculating mean and std
2023-05-24 11:08:30,103:INFO:Creating metrics dataframe
2023-05-24 11:08:30,169:INFO:Uploading results into container
2023-05-24 11:08:30,169:INFO:Uploading model into container now
2023-05-24 11:08:30,169:INFO:_master_model_container: 12
2023-05-24 11:08:30,169:INFO:_display_container: 2
2023-05-24 11:08:30,169:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7083, verbose=0, warm_start=False)
2023-05-24 11:08:30,169:INFO:create_model() successfully completed......................................
2023-05-24 11:08:30,227:INFO:SubProcess create_model() end ==================================
2023-05-24 11:08:30,227:INFO:Creating metrics dataframe
2023-05-24 11:08:30,232:INFO:Initializing Light Gradient Boosting Machine
2023-05-24 11:08:30,232:INFO:Total runtime is 0.4507056315739949 minutes
2023-05-24 11:08:30,233:INFO:SubProcess create_model() called ==================================
2023-05-24 11:08:30,233:INFO:Initializing create_model()
2023-05-24 11:08:30,233:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x157060ac0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:08:30,233:INFO:Checking exceptions
2023-05-24 11:08:30,233:INFO:Importing libraries
2023-05-24 11:08:30,233:INFO:Copying training dataset
2023-05-24 11:08:30,236:INFO:Defining folds
2023-05-24 11:08:30,236:INFO:Declaring metric variables
2023-05-24 11:08:30,237:INFO:Importing untrained model
2023-05-24 11:08:30,239:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-24 11:08:30,242:INFO:Starting cross validation
2023-05-24 11:08:30,243:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:08:32,274:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,280:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,283:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:32,286:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,291:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,299:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,300:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,304:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:32,306:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,308:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,311:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,314:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:32,316:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,317:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,318:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,322:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,328:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:32,328:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:32,331:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,331:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,334:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,335:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,336:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,339:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,340:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,343:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:32,344:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,346:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,347:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:32,347:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:32,350:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:32,350:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:33,653:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:33,658:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:33,662:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:33,664:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:33,718:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:33,724:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:33,727:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:33,730:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:33,738:INFO:Calculating mean and std
2023-05-24 11:08:33,739:INFO:Creating metrics dataframe
2023-05-24 11:08:33,812:INFO:Uploading results into container
2023-05-24 11:08:33,813:INFO:Uploading model into container now
2023-05-24 11:08:33,813:INFO:_master_model_container: 13
2023-05-24 11:08:33,813:INFO:_display_container: 2
2023-05-24 11:08:33,813:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7083, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-24 11:08:33,813:INFO:create_model() successfully completed......................................
2023-05-24 11:08:33,871:INFO:SubProcess create_model() end ==================================
2023-05-24 11:08:33,871:INFO:Creating metrics dataframe
2023-05-24 11:08:33,876:INFO:Initializing Dummy Classifier
2023-05-24 11:08:33,876:INFO:Total runtime is 0.5114405989646911 minutes
2023-05-24 11:08:33,877:INFO:SubProcess create_model() called ==================================
2023-05-24 11:08:33,877:INFO:Initializing create_model()
2023-05-24 11:08:33,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x157060ac0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:08:33,878:INFO:Checking exceptions
2023-05-24 11:08:33,878:INFO:Importing libraries
2023-05-24 11:08:33,878:INFO:Copying training dataset
2023-05-24 11:08:33,880:INFO:Defining folds
2023-05-24 11:08:33,880:INFO:Declaring metric variables
2023-05-24 11:08:33,881:INFO:Importing untrained model
2023-05-24 11:08:33,882:INFO:Dummy Classifier Imported successfully
2023-05-24 11:08:33,885:INFO:Starting cross validation
2023-05-24 11:08:33,886:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:08:34,269:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,283:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,286:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,290:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:34,292:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,293:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,295:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:34,298:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,298:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,299:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,303:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:34,305:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,316:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,324:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,328:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:34,331:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,336:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,354:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,364:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:34,372:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,377:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,379:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,385:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,389:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,390:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:34,392:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:34,393:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,394:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,417:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,423:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,426:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:34,429:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,690:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,696:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,699:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:34,701:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,701:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,707:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,710:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:34,712:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:34,764:INFO:Calculating mean and std
2023-05-24 11:08:34,765:INFO:Creating metrics dataframe
2023-05-24 11:08:34,830:INFO:Uploading results into container
2023-05-24 11:08:34,830:INFO:Uploading model into container now
2023-05-24 11:08:34,830:INFO:_master_model_container: 14
2023-05-24 11:08:34,830:INFO:_display_container: 2
2023-05-24 11:08:34,830:INFO:DummyClassifier(constant=None, random_state=7083, strategy='prior')
2023-05-24 11:08:34,830:INFO:create_model() successfully completed......................................
2023-05-24 11:08:34,889:INFO:SubProcess create_model() end ==================================
2023-05-24 11:08:34,889:INFO:Creating metrics dataframe
2023-05-24 11:08:34,897:INFO:Initializing create_model()
2023-05-24 11:08:34,898:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:08:34,898:INFO:Checking exceptions
2023-05-24 11:08:34,898:INFO:Importing libraries
2023-05-24 11:08:34,898:INFO:Copying training dataset
2023-05-24 11:08:34,900:INFO:Defining folds
2023-05-24 11:08:34,900:INFO:Declaring metric variables
2023-05-24 11:08:34,900:INFO:Importing untrained model
2023-05-24 11:08:34,900:INFO:Declaring custom model
2023-05-24 11:08:34,901:INFO:Naive Bayes Imported successfully
2023-05-24 11:08:34,901:INFO:Cross validation set to False
2023-05-24 11:08:34,901:INFO:Fitting Model
2023-05-24 11:08:35,079:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-24 11:08:35,079:INFO:create_model() successfully completed......................................
2023-05-24 11:08:35,149:INFO:_master_model_container: 14
2023-05-24 11:08:35,149:INFO:_display_container: 2
2023-05-24 11:08:35,149:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-24 11:08:35,149:INFO:compare_models() successfully completed......................................
2023-05-24 11:08:35,151:INFO:Initializing create_model()
2023-05-24 11:08:35,152:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:08:35,152:INFO:Checking exceptions
2023-05-24 11:08:35,158:INFO:Importing libraries
2023-05-24 11:08:35,158:INFO:Copying training dataset
2023-05-24 11:08:35,163:INFO:Defining folds
2023-05-24 11:08:35,163:INFO:Declaring metric variables
2023-05-24 11:08:35,164:INFO:Importing untrained model
2023-05-24 11:08:35,166:INFO:Logistic Regression Imported successfully
2023-05-24 11:08:35,169:INFO:Starting cross validation
2023-05-24 11:08:35,170:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:08:35,564:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,570:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,574:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:35,576:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,586:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,592:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,594:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,595:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:35,597:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,600:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,603:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:35,605:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,606:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,610:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,614:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:35,616:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,637:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,643:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,647:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:35,647:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,649:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,654:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,657:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:35,660:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,662:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,670:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,673:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:35,676:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,680:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,686:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,689:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:35,692:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,981:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,983:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,986:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,989:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,989:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:35,992:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:08:35,992:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:35,994:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:08:36,061:INFO:Calculating mean and std
2023-05-24 11:08:36,061:INFO:Creating metrics dataframe
2023-05-24 11:08:36,064:INFO:Finalizing model
2023-05-24 11:08:37,349:INFO:Uploading results into container
2023-05-24 11:08:37,350:INFO:Uploading model into container now
2023-05-24 11:08:37,354:INFO:_master_model_container: 15
2023-05-24 11:08:37,354:INFO:_display_container: 3
2023-05-24 11:08:37,354:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7083, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-24 11:08:37,354:INFO:create_model() successfully completed......................................
2023-05-24 11:08:37,420:INFO:Initializing evaluate_model()
2023-05-24 11:08:37,421:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7083, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-24 11:08:37,427:INFO:Initializing plot_model()
2023-05-24 11:08:37,427:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7083, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, system=True)
2023-05-24 11:08:37,427:INFO:Checking exceptions
2023-05-24 11:08:37,429:INFO:Preloading libraries
2023-05-24 11:08:37,429:INFO:Copying training dataset
2023-05-24 11:08:37,429:INFO:Plot type: pipeline
2023-05-24 11:08:37,492:INFO:Visual Rendered Successfully
2023-05-24 11:08:37,552:INFO:plot_model() successfully completed......................................
2023-05-24 11:08:37,556:INFO:Initializing predict_model()
2023-05-24 11:08:37,557:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7083, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x288b4ba30>)
2023-05-24 11:08:37,557:INFO:Checking exceptions
2023-05-24 11:08:37,557:INFO:Preloading libraries
2023-05-24 11:08:37,558:INFO:Set up data.
2023-05-24 11:08:37,559:INFO:Set up index.
2023-05-24 11:09:44,242:INFO:Initializing predict_model()
2023-05-24 11:09:44,243:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7083, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x29102dcf0>)
2023-05-24 11:09:44,243:INFO:Checking exceptions
2023-05-24 11:09:44,244:INFO:Preloading libraries
2023-05-24 11:09:44,248:INFO:Set up data.
2023-05-24 11:09:44,251:INFO:Set up index.
2023-05-24 11:10:37,896:INFO:Initializing plot_model()
2023-05-24 11:10:37,897:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7083, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, system=True)
2023-05-24 11:10:37,897:INFO:Checking exceptions
2023-05-24 11:10:37,902:INFO:Preloading libraries
2023-05-24 11:10:37,903:INFO:Copying training dataset
2023-05-24 11:10:37,903:INFO:Plot type: confusion_matrix
2023-05-24 11:10:38,272:INFO:Fitting Model
2023-05-24 11:10:38,273:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning:

X does not have valid feature names, but LogisticRegression was fitted with feature names


2023-05-24 11:10:38,273:INFO:Scoring test/hold-out set
2023-05-24 11:10:38,376:INFO:Visual Rendered Successfully
2023-05-24 11:10:38,469:INFO:plot_model() successfully completed......................................
2023-05-24 11:10:57,225:INFO:Initializing predict_model()
2023-05-24 11:10:57,226:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7083, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28ef10af0>)
2023-05-24 11:10:57,226:INFO:Checking exceptions
2023-05-24 11:10:57,227:INFO:Preloading libraries
2023-05-24 11:10:57,234:INFO:Set up data.
2023-05-24 11:10:57,237:INFO:Set up index.
2023-05-24 11:11:20,593:INFO:Initializing predict_model()
2023-05-24 11:11:20,594:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7083, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28ef10160>)
2023-05-24 11:11:20,594:INFO:Checking exceptions
2023-05-24 11:11:20,594:INFO:Preloading libraries
2023-05-24 11:11:20,599:INFO:Set up data.
2023-05-24 11:11:20,603:INFO:Set up index.
2023-05-24 11:11:51,860:INFO:Initializing predict_model()
2023-05-24 11:11:51,862:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1570603a0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7083, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28ef11000>)
2023-05-24 11:11:51,862:INFO:Checking exceptions
2023-05-24 11:11:51,862:INFO:Preloading libraries
2023-05-24 11:11:51,865:INFO:Set up data.
2023-05-24 11:11:51,867:INFO:Set up index.
2023-05-24 11:13:38,926:INFO:PyCaret ClassificationExperiment
2023-05-24 11:13:38,927:INFO:Logging name: clf-default-name
2023-05-24 11:13:38,927:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-24 11:13:38,927:INFO:version 3.0.2
2023-05-24 11:13:38,927:INFO:Initializing setup()
2023-05-24 11:13:38,927:INFO:self.USI: 69e9
2023-05-24 11:13:38,927:INFO:self._variable_keys: {'logging_param', 'X', 'target_param', 'USI', 'gpu_param', 'fix_imbalance', 'y_test', 'seed', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'n_jobs_param', 'y_train', 'y', 'exp_id', 'idx', 'fold_shuffle_param', 'data', 'X_test', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'X_train', 'html_param', 'log_plots_param', 'memory'}
2023-05-24 11:13:38,927:INFO:Checking environment
2023-05-24 11:13:38,927:INFO:python_version: 3.10.9
2023-05-24 11:13:38,927:INFO:python_build: ('main', 'Mar  1 2023 12:20:14')
2023-05-24 11:13:38,927:INFO:machine: arm64
2023-05-24 11:13:38,927:INFO:platform: macOS-13.3.1-arm64-arm-64bit
2023-05-24 11:13:38,927:INFO:Memory: svmem(total=17179869184, available=6940770304, percent=59.6, used=6198362112, free=1804632064, active=3997679616, inactive=5134139392, wired=2200682496)
2023-05-24 11:13:38,927:INFO:Physical Core: 8
2023-05-24 11:13:38,927:INFO:Logical Core: 8
2023-05-24 11:13:38,927:INFO:Checking libraries
2023-05-24 11:13:38,927:INFO:System:
2023-05-24 11:13:38,927:INFO:    python: 3.10.9 (main, Mar  1 2023, 12:20:14) [Clang 14.0.6 ]
2023-05-24 11:13:38,927:INFO:executable: /Users/corneliusvincent/anaconda3/bin/python
2023-05-24 11:13:38,927:INFO:   machine: macOS-13.3.1-arm64-arm-64bit
2023-05-24 11:13:38,927:INFO:PyCaret required dependencies:
2023-05-24 11:13:38,927:INFO:                 pip: 23.1.2
2023-05-24 11:13:38,927:INFO:          setuptools: 65.6.3
2023-05-24 11:13:38,927:INFO:             pycaret: 3.0.2
2023-05-24 11:13:38,927:INFO:             IPython: 8.10.0
2023-05-24 11:13:38,927:INFO:          ipywidgets: 8.0.6
2023-05-24 11:13:38,927:INFO:                tqdm: 4.64.1
2023-05-24 11:13:38,927:INFO:               numpy: 1.23.5
2023-05-24 11:13:38,927:INFO:              pandas: 1.5.3
2023-05-24 11:13:38,927:INFO:              jinja2: 3.1.2
2023-05-24 11:13:38,927:INFO:               scipy: 1.9.3
2023-05-24 11:13:38,927:INFO:              joblib: 1.2.0
2023-05-24 11:13:38,927:INFO:             sklearn: 1.2.2
2023-05-24 11:13:38,927:INFO:                pyod: 1.0.9
2023-05-24 11:13:38,927:INFO:            imblearn: 0.10.1
2023-05-24 11:13:38,927:INFO:   category_encoders: 2.6.1
2023-05-24 11:13:38,927:INFO:            lightgbm: 3.3.5
2023-05-24 11:13:38,927:INFO:               numba: 0.56.4
2023-05-24 11:13:38,927:INFO:            requests: 2.28.1
2023-05-24 11:13:38,927:INFO:          matplotlib: 3.6.3
2023-05-24 11:13:38,927:INFO:          scikitplot: 0.3.7
2023-05-24 11:13:38,927:INFO:         yellowbrick: 1.5
2023-05-24 11:13:38,927:INFO:              plotly: 5.9.0
2023-05-24 11:13:38,927:INFO:             kaleido: 0.2.1
2023-05-24 11:13:38,927:INFO:         statsmodels: 0.13.5
2023-05-24 11:13:38,927:INFO:              sktime: 0.17.0
2023-05-24 11:13:38,927:INFO:               tbats: 1.1.3
2023-05-24 11:13:38,927:INFO:            pmdarima: 2.0.3
2023-05-24 11:13:38,927:INFO:              psutil: 5.9.0
2023-05-24 11:13:38,927:INFO:PyCaret optional dependencies:
2023-05-24 11:13:38,927:INFO:                shap: Not installed
2023-05-24 11:13:38,927:INFO:           interpret: Not installed
2023-05-24 11:13:38,927:INFO:                umap: Not installed
2023-05-24 11:13:38,927:INFO:    pandas_profiling: 4.1.2
2023-05-24 11:13:38,927:INFO:  explainerdashboard: Not installed
2023-05-24 11:13:38,927:INFO:             autoviz: Not installed
2023-05-24 11:13:38,927:INFO:           fairlearn: Not installed
2023-05-24 11:13:38,927:INFO:             xgboost: Not installed
2023-05-24 11:13:38,927:INFO:            catboost: Not installed
2023-05-24 11:13:38,927:INFO:              kmodes: Not installed
2023-05-24 11:13:38,927:INFO:             mlxtend: Not installed
2023-05-24 11:13:38,927:INFO:       statsforecast: Not installed
2023-05-24 11:13:38,927:INFO:        tune_sklearn: Not installed
2023-05-24 11:13:38,927:INFO:                 ray: Not installed
2023-05-24 11:13:38,927:INFO:            hyperopt: Not installed
2023-05-24 11:13:38,927:INFO:              optuna: Not installed
2023-05-24 11:13:38,927:INFO:               skopt: Not installed
2023-05-24 11:13:38,928:INFO:              mlflow: Not installed
2023-05-24 11:13:38,928:INFO:              gradio: Not installed
2023-05-24 11:13:38,928:INFO:             fastapi: Not installed
2023-05-24 11:13:38,928:INFO:             uvicorn: Not installed
2023-05-24 11:13:38,928:INFO:              m2cgen: Not installed
2023-05-24 11:13:38,928:INFO:           evidently: Not installed
2023-05-24 11:13:38,928:INFO:               fugue: Not installed
2023-05-24 11:13:38,928:INFO:           streamlit: 1.22.0
2023-05-24 11:13:38,928:INFO:             prophet: Not installed
2023-05-24 11:13:38,928:INFO:None
2023-05-24 11:13:38,928:INFO:Set up data.
2023-05-24 11:13:38,952:INFO:Set up train/test split.
2023-05-24 11:13:38,973:INFO:Set up index.
2023-05-24 11:13:38,974:INFO:Set up folding strategy.
2023-05-24 11:13:38,974:INFO:Assigning column types.
2023-05-24 11:13:38,975:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-24 11:13:38,994:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-24 11:13:38,995:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 11:13:39,006:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:13:39,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:13:39,026:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-24 11:13:39,026:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 11:13:39,038:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:13:39,038:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:13:39,038:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-24 11:13:39,058:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 11:13:39,070:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:13:39,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:13:39,089:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 11:13:39,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:13:39,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:13:39,101:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-24 11:13:39,132:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:13:39,133:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:13:39,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:13:39,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:13:39,164:INFO:Preparing preprocessing pipeline...
2023-05-24 11:13:39,164:INFO:Set up label encoding.
2023-05-24 11:13:39,164:INFO:Set up simple imputation.
2023-05-24 11:13:39,166:INFO:Set up encoding of categorical features.
2023-05-24 11:13:39,275:INFO:Finished creating preprocessing pipeline.
2023-05-24 11:13:39,278:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/nz/xhcvl6_17cb_xn608wktx0bc0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Clean_Text'],
                                    transformer=TargetEncoder(cols=['Clean_Text'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-24 11:13:39,278:INFO:Creating final display dataframe.
2023-05-24 11:13:39,622:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                1084  
1                                             Emotion  
2                                          Multiclass  
3   anger: 0, disgust: 1, fear: 2, joy: 3, neutral...  
4                                          (34792, 2)  
5                                          (34792, 2)  
6                                          (24354, 2)  
7                                          (10438, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               69e9  
2023-05-24 11:13:39,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:13:39,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:13:39,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:13:39,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:13:39,689:INFO:setup() successfully completed in 0.82s...............
2023-05-24 11:13:39,689:INFO:Initializing compare_models()
2023-05-24 11:13:39,689:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-24 11:13:39,689:INFO:Checking exceptions
2023-05-24 11:13:39,691:INFO:Preparing display monitor
2023-05-24 11:13:39,700:INFO:Initializing Logistic Regression
2023-05-24 11:13:39,700:INFO:Total runtime is 2.5312105814615887e-06 minutes
2023-05-24 11:13:39,702:INFO:SubProcess create_model() called ==================================
2023-05-24 11:13:39,702:INFO:Initializing create_model()
2023-05-24 11:13:39,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2912878e0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:13:39,702:INFO:Checking exceptions
2023-05-24 11:13:39,702:INFO:Importing libraries
2023-05-24 11:13:39,702:INFO:Copying training dataset
2023-05-24 11:13:39,707:INFO:Defining folds
2023-05-24 11:13:39,707:INFO:Declaring metric variables
2023-05-24 11:13:39,709:INFO:Importing untrained model
2023-05-24 11:13:39,710:INFO:Logistic Regression Imported successfully
2023-05-24 11:13:39,713:INFO:Starting cross validation
2023-05-24 11:13:39,714:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:13:42,903:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:42,909:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:42,912:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:42,915:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,018:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,025:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,029:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:43,034:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,513:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,520:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,524:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:43,527:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,532:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,545:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,548:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:43,554:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,598:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,607:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,616:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:43,622:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,658:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,664:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,666:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,667:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:43,670:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,672:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,680:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:43,684:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,710:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,716:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:43,719:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:43,722:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:44,406:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:44,412:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:44,415:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:44,418:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:44,476:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:44,481:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:44,484:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:44,487:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:44,496:INFO:Calculating mean and std
2023-05-24 11:13:44,497:INFO:Creating metrics dataframe
2023-05-24 11:13:44,579:INFO:Uploading results into container
2023-05-24 11:13:44,579:INFO:Uploading model into container now
2023-05-24 11:13:44,579:INFO:_master_model_container: 1
2023-05-24 11:13:44,579:INFO:_display_container: 2
2023-05-24 11:13:44,580:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1084, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-24 11:13:44,580:INFO:create_model() successfully completed......................................
2023-05-24 11:13:44,674:INFO:SubProcess create_model() end ==================================
2023-05-24 11:13:44,674:INFO:Creating metrics dataframe
2023-05-24 11:13:44,678:INFO:Initializing K Neighbors Classifier
2023-05-24 11:13:44,678:INFO:Total runtime is 0.08297137816747029 minutes
2023-05-24 11:13:44,680:INFO:SubProcess create_model() called ==================================
2023-05-24 11:13:44,680:INFO:Initializing create_model()
2023-05-24 11:13:44,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2912878e0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:13:44,680:INFO:Checking exceptions
2023-05-24 11:13:44,680:INFO:Importing libraries
2023-05-24 11:13:44,680:INFO:Copying training dataset
2023-05-24 11:13:44,684:INFO:Defining folds
2023-05-24 11:13:44,684:INFO:Declaring metric variables
2023-05-24 11:13:44,685:INFO:Importing untrained model
2023-05-24 11:13:44,687:INFO:K Neighbors Classifier Imported successfully
2023-05-24 11:13:44,690:INFO:Starting cross validation
2023-05-24 11:13:44,690:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:13:45,157:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,163:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,166:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,167:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:45,169:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,176:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,180:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,180:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:45,183:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,184:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,186:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,189:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:45,190:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,193:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,193:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,194:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:45,196:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,199:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,203:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,206:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:45,209:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,209:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,213:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:45,214:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,219:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,225:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,230:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:45,232:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,258:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,265:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,269:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:45,272:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,598:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,604:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,607:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:45,610:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,618:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,624:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,627:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:45,629:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:45,675:INFO:Calculating mean and std
2023-05-24 11:13:45,676:INFO:Creating metrics dataframe
2023-05-24 11:13:45,743:INFO:Uploading results into container
2023-05-24 11:13:45,743:INFO:Uploading model into container now
2023-05-24 11:13:45,744:INFO:_master_model_container: 2
2023-05-24 11:13:45,744:INFO:_display_container: 2
2023-05-24 11:13:45,744:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-24 11:13:45,744:INFO:create_model() successfully completed......................................
2023-05-24 11:13:45,831:INFO:SubProcess create_model() end ==================================
2023-05-24 11:13:45,831:INFO:Creating metrics dataframe
2023-05-24 11:13:45,835:INFO:Initializing Naive Bayes
2023-05-24 11:13:45,835:INFO:Total runtime is 0.10224449634552 minutes
2023-05-24 11:13:45,836:INFO:SubProcess create_model() called ==================================
2023-05-24 11:13:45,836:INFO:Initializing create_model()
2023-05-24 11:13:45,836:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2912878e0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:13:45,836:INFO:Checking exceptions
2023-05-24 11:13:45,836:INFO:Importing libraries
2023-05-24 11:13:45,837:INFO:Copying training dataset
2023-05-24 11:13:45,840:INFO:Defining folds
2023-05-24 11:13:45,840:INFO:Declaring metric variables
2023-05-24 11:13:45,842:INFO:Importing untrained model
2023-05-24 11:13:45,844:INFO:Naive Bayes Imported successfully
2023-05-24 11:13:45,847:INFO:Starting cross validation
2023-05-24 11:13:45,847:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:13:46,248:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,254:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,258:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:46,261:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,267:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,274:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,277:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:46,280:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,293:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,299:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,302:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:46,303:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,305:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,309:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,312:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:46,313:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,315:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,319:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,321:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,322:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:46,325:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,327:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,331:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:46,333:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,368:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,376:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,380:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,382:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,385:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:46,386:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:46,388:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,399:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,669:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,675:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,678:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:46,679:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,680:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,685:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,688:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:46,690:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:46,745:INFO:Calculating mean and std
2023-05-24 11:13:46,745:INFO:Creating metrics dataframe
2023-05-24 11:13:46,813:INFO:Uploading results into container
2023-05-24 11:13:46,813:INFO:Uploading model into container now
2023-05-24 11:13:46,813:INFO:_master_model_container: 3
2023-05-24 11:13:46,813:INFO:_display_container: 2
2023-05-24 11:13:46,813:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-24 11:13:46,813:INFO:create_model() successfully completed......................................
2023-05-24 11:13:46,900:INFO:SubProcess create_model() end ==================================
2023-05-24 11:13:46,900:INFO:Creating metrics dataframe
2023-05-24 11:13:46,905:INFO:Initializing Decision Tree Classifier
2023-05-24 11:13:46,905:INFO:Total runtime is 0.12007352908452351 minutes
2023-05-24 11:13:46,906:INFO:SubProcess create_model() called ==================================
2023-05-24 11:13:46,906:INFO:Initializing create_model()
2023-05-24 11:13:46,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2912878e0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:13:46,906:INFO:Checking exceptions
2023-05-24 11:13:46,906:INFO:Importing libraries
2023-05-24 11:13:46,906:INFO:Copying training dataset
2023-05-24 11:13:46,909:INFO:Defining folds
2023-05-24 11:13:46,909:INFO:Declaring metric variables
2023-05-24 11:13:46,911:INFO:Importing untrained model
2023-05-24 11:13:46,912:INFO:Decision Tree Classifier Imported successfully
2023-05-24 11:13:46,915:INFO:Starting cross validation
2023-05-24 11:13:46,916:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:13:47,323:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,331:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,335:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:47,338:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,343:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,345:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,348:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,349:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,351:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,354:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:47,355:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:47,357:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,357:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,357:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,360:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:47,363:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,409:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,417:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,419:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,419:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,421:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,422:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:47,423:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,424:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,426:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:47,429:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,429:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,432:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,435:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:47,436:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:47,439:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,442:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,753:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,759:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,762:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:47,765:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,773:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,779:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,782:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:47,784:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:47,832:INFO:Calculating mean and std
2023-05-24 11:13:47,833:INFO:Creating metrics dataframe
2023-05-24 11:13:47,903:INFO:Uploading results into container
2023-05-24 11:13:47,904:INFO:Uploading model into container now
2023-05-24 11:13:47,904:INFO:_master_model_container: 4
2023-05-24 11:13:47,904:INFO:_display_container: 2
2023-05-24 11:13:47,904:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1084, splitter='best')
2023-05-24 11:13:47,904:INFO:create_model() successfully completed......................................
2023-05-24 11:13:47,990:INFO:SubProcess create_model() end ==================================
2023-05-24 11:13:47,990:INFO:Creating metrics dataframe
2023-05-24 11:13:47,994:INFO:Initializing SVM - Linear Kernel
2023-05-24 11:13:47,994:INFO:Total runtime is 0.138234547773997 minutes
2023-05-24 11:13:47,996:INFO:SubProcess create_model() called ==================================
2023-05-24 11:13:47,996:INFO:Initializing create_model()
2023-05-24 11:13:47,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2912878e0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:13:47,996:INFO:Checking exceptions
2023-05-24 11:13:47,996:INFO:Importing libraries
2023-05-24 11:13:47,996:INFO:Copying training dataset
2023-05-24 11:13:47,999:INFO:Defining folds
2023-05-24 11:13:47,999:INFO:Declaring metric variables
2023-05-24 11:13:48,000:INFO:Importing untrained model
2023-05-24 11:13:48,002:INFO:SVM - Linear Kernel Imported successfully
2023-05-24 11:13:48,005:INFO:Starting cross validation
2023-05-24 11:13:48,005:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:13:48,479:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:13:48,482:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,488:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,488:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:13:48,491:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,497:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,500:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:48,503:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,547:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:13:48,549:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,555:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:48,563:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,574:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,590:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:48,596:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:13:48,599:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,603:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:13:48,604:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,605:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,608:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:48,611:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,620:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,627:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,630:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:48,634:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,645:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:13:48,647:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:13:48,648:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,649:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:13:48,650:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,654:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,655:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,656:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,658:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:48,659:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:48,661:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,661:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,666:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,669:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:48,672:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,946:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:13:48,948:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,954:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,957:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:48,960:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,963:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:13:48,966:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,972:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:48,975:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:48,977:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,041:INFO:Calculating mean and std
2023-05-24 11:13:49,041:INFO:Creating metrics dataframe
2023-05-24 11:13:49,111:INFO:Uploading results into container
2023-05-24 11:13:49,111:INFO:Uploading model into container now
2023-05-24 11:13:49,111:INFO:_master_model_container: 5
2023-05-24 11:13:49,111:INFO:_display_container: 2
2023-05-24 11:13:49,112:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1084, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-24 11:13:49,112:INFO:create_model() successfully completed......................................
2023-05-24 11:13:49,195:INFO:SubProcess create_model() end ==================================
2023-05-24 11:13:49,195:INFO:Creating metrics dataframe
2023-05-24 11:13:49,199:INFO:Initializing Ridge Classifier
2023-05-24 11:13:49,199:INFO:Total runtime is 0.15831781625747682 minutes
2023-05-24 11:13:49,201:INFO:SubProcess create_model() called ==================================
2023-05-24 11:13:49,201:INFO:Initializing create_model()
2023-05-24 11:13:49,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2912878e0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:13:49,201:INFO:Checking exceptions
2023-05-24 11:13:49,201:INFO:Importing libraries
2023-05-24 11:13:49,201:INFO:Copying training dataset
2023-05-24 11:13:49,203:INFO:Defining folds
2023-05-24 11:13:49,203:INFO:Declaring metric variables
2023-05-24 11:13:49,205:INFO:Importing untrained model
2023-05-24 11:13:49,206:INFO:Ridge Classifier Imported successfully
2023-05-24 11:13:49,209:INFO:Starting cross validation
2023-05-24 11:13:49,210:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:13:49,536:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:13:49,539:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,546:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,552:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:49,556:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,559:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:13:49,560:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:13:49,562:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,563:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,568:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,569:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:13:49,570:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:13:49,571:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,571:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:49,572:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,575:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,578:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,579:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,580:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,581:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:49,583:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:49,584:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,585:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:49,585:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,588:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:13:49,590:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:13:49,593:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,593:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,594:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,600:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,604:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,604:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:49,609:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,614:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:13:49,615:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:49,618:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,619:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,630:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,636:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:49,638:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,901:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:13:49,904:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,910:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,913:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:49,916:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,920:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:13:49,923:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,929:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:49,932:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:49,934:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:50,036:INFO:Calculating mean and std
2023-05-24 11:13:50,036:INFO:Creating metrics dataframe
2023-05-24 11:13:50,106:INFO:Uploading results into container
2023-05-24 11:13:50,106:INFO:Uploading model into container now
2023-05-24 11:13:50,106:INFO:_master_model_container: 6
2023-05-24 11:13:50,107:INFO:_display_container: 2
2023-05-24 11:13:50,107:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1084, solver='auto',
                tol=0.0001)
2023-05-24 11:13:50,107:INFO:create_model() successfully completed......................................
2023-05-24 11:13:50,191:INFO:SubProcess create_model() end ==================================
2023-05-24 11:13:50,191:INFO:Creating metrics dataframe
2023-05-24 11:13:50,195:INFO:Initializing Random Forest Classifier
2023-05-24 11:13:50,195:INFO:Total runtime is 0.17491584618886313 minutes
2023-05-24 11:13:50,196:INFO:SubProcess create_model() called ==================================
2023-05-24 11:13:50,196:INFO:Initializing create_model()
2023-05-24 11:13:50,196:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2912878e0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:13:50,197:INFO:Checking exceptions
2023-05-24 11:13:50,197:INFO:Importing libraries
2023-05-24 11:13:50,197:INFO:Copying training dataset
2023-05-24 11:13:50,199:INFO:Defining folds
2023-05-24 11:13:50,199:INFO:Declaring metric variables
2023-05-24 11:13:50,200:INFO:Importing untrained model
2023-05-24 11:13:50,202:INFO:Random Forest Classifier Imported successfully
2023-05-24 11:13:50,204:INFO:Starting cross validation
2023-05-24 11:13:50,205:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:13:51,209:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,217:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,220:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:51,223:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,225:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,231:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,236:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:51,239:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,252:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,262:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,265:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,268:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:51,268:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,268:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,272:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:51,273:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,274:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,275:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,278:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:51,280:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,281:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,281:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,287:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,287:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,290:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:51,291:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:51,292:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,293:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,294:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,300:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,303:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:51,306:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,904:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,909:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,913:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:51,915:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,922:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,928:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,932:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:51,934:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:51,987:INFO:Calculating mean and std
2023-05-24 11:13:51,987:INFO:Creating metrics dataframe
2023-05-24 11:13:52,078:INFO:Uploading results into container
2023-05-24 11:13:52,079:INFO:Uploading model into container now
2023-05-24 11:13:52,079:INFO:_master_model_container: 7
2023-05-24 11:13:52,079:INFO:_display_container: 2
2023-05-24 11:13:52,079:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1084, verbose=0, warm_start=False)
2023-05-24 11:13:52,079:INFO:create_model() successfully completed......................................
2023-05-24 11:13:52,169:INFO:SubProcess create_model() end ==================================
2023-05-24 11:13:52,169:INFO:Creating metrics dataframe
2023-05-24 11:13:52,174:INFO:Initializing Quadratic Discriminant Analysis
2023-05-24 11:13:52,174:INFO:Total runtime is 0.20789139668146772 minutes
2023-05-24 11:13:52,175:INFO:SubProcess create_model() called ==================================
2023-05-24 11:13:52,175:INFO:Initializing create_model()
2023-05-24 11:13:52,175:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2912878e0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:13:52,176:INFO:Checking exceptions
2023-05-24 11:13:52,176:INFO:Importing libraries
2023-05-24 11:13:52,176:INFO:Copying training dataset
2023-05-24 11:13:52,179:INFO:Defining folds
2023-05-24 11:13:52,179:INFO:Declaring metric variables
2023-05-24 11:13:52,181:INFO:Importing untrained model
2023-05-24 11:13:52,183:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-24 11:13:52,186:INFO:Starting cross validation
2023-05-24 11:13:52,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:13:52,426:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:13:52,430:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:13:52,444:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:13:52,489:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:13:52,491:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:13:52,508:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:13:52,516:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:13:52,562:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:13:52,616:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 11:13:52,616:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-24 11:13:52,616:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-05-24 11:13:52,672:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 11:13:52,672:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-24 11:13:52,672:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-05-24 11:13:52,701:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 11:13:52,702:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-24 11:13:52,702:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-05-24 11:13:52,706:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/validation.py", line 921, in check_array
    _assert_all_finite(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-05-24 11:13:52,710:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,723:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-24 11:13:52,723:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-24 11:13:52,723:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2023-05-24 11:13:52,724:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,724:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/validation.py", line 921, in check_array
    _assert_all_finite(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-05-24 11:13:52,727:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,727:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,728:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:52,731:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,732:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,733:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,733:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,735:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,735:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,736:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:52,736:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:52,736:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,738:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,739:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,740:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:52,742:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,743:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,748:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,748:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:52,751:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:52,753:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,754:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,774:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,780:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,793:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:52,799:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,800:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,805:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:52,808:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:52,811:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:53,032:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:13:53,051:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:13:53,199:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:53,205:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:53,208:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:53,211:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:53,217:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:53,223:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:53,227:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:53,230:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:53,284:INFO:Calculating mean and std
2023-05-24 11:13:53,284:INFO:Creating metrics dataframe
2023-05-24 11:13:53,360:INFO:Uploading results into container
2023-05-24 11:13:53,360:INFO:Uploading model into container now
2023-05-24 11:13:53,360:INFO:_master_model_container: 8
2023-05-24 11:13:53,360:INFO:_display_container: 2
2023-05-24 11:13:53,360:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-24 11:13:53,360:INFO:create_model() successfully completed......................................
2023-05-24 11:13:53,449:INFO:SubProcess create_model() end ==================================
2023-05-24 11:13:53,449:INFO:Creating metrics dataframe
2023-05-24 11:13:53,455:INFO:Initializing Ada Boost Classifier
2023-05-24 11:13:53,455:INFO:Total runtime is 0.2292475819587708 minutes
2023-05-24 11:13:53,457:INFO:SubProcess create_model() called ==================================
2023-05-24 11:13:53,457:INFO:Initializing create_model()
2023-05-24 11:13:53,457:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2912878e0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:13:53,457:INFO:Checking exceptions
2023-05-24 11:13:53,457:INFO:Importing libraries
2023-05-24 11:13:53,457:INFO:Copying training dataset
2023-05-24 11:13:53,460:INFO:Defining folds
2023-05-24 11:13:53,460:INFO:Declaring metric variables
2023-05-24 11:13:53,462:INFO:Importing untrained model
2023-05-24 11:13:53,464:INFO:Ada Boost Classifier Imported successfully
2023-05-24 11:13:53,467:INFO:Starting cross validation
2023-05-24 11:13:53,467:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:13:54,367:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,378:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,385:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:54,389:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,423:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,430:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,436:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:54,441:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,460:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,469:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,473:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:54,477:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,485:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,495:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,495:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,499:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,501:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,504:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:54,507:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,509:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:54,514:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,516:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,522:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,523:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:54,526:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,530:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,532:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:54,535:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,593:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,607:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:54,612:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:54,615:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:55,094:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:55,100:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:55,103:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:55,106:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:55,162:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:55,168:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:55,171:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:13:55,174:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:13:55,182:INFO:Calculating mean and std
2023-05-24 11:13:55,182:INFO:Creating metrics dataframe
2023-05-24 11:13:55,265:INFO:Uploading results into container
2023-05-24 11:13:55,266:INFO:Uploading model into container now
2023-05-24 11:13:55,266:INFO:_master_model_container: 9
2023-05-24 11:13:55,266:INFO:_display_container: 2
2023-05-24 11:13:55,266:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1084)
2023-05-24 11:13:55,266:INFO:create_model() successfully completed......................................
2023-05-24 11:13:55,352:INFO:SubProcess create_model() end ==================================
2023-05-24 11:13:55,352:INFO:Creating metrics dataframe
2023-05-24 11:13:55,358:INFO:Initializing Gradient Boosting Classifier
2023-05-24 11:13:55,358:INFO:Total runtime is 0.2609659314155579 minutes
2023-05-24 11:13:55,360:INFO:SubProcess create_model() called ==================================
2023-05-24 11:13:55,360:INFO:Initializing create_model()
2023-05-24 11:13:55,360:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2912878e0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:13:55,360:INFO:Checking exceptions
2023-05-24 11:13:55,360:INFO:Importing libraries
2023-05-24 11:13:55,360:INFO:Copying training dataset
2023-05-24 11:13:55,363:INFO:Defining folds
2023-05-24 11:13:55,363:INFO:Declaring metric variables
2023-05-24 11:13:55,364:INFO:Importing untrained model
2023-05-24 11:13:55,365:INFO:Gradient Boosting Classifier Imported successfully
2023-05-24 11:13:55,368:INFO:Starting cross validation
2023-05-24 11:13:55,369:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:14:00,483:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,493:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,499:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:00,502:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,749:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,758:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,761:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,765:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:00,767:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,768:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,770:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:00,773:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,787:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,793:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,797:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:00,804:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,812:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,817:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,818:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,818:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,821:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:00,823:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,824:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,826:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:00,828:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,828:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,832:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:00,838:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,877:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,885:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:00,889:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:00,893:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:04,513:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:04,520:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:04,523:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:04,525:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:04,723:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:04,728:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:04,731:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:04,734:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:04,742:INFO:Calculating mean and std
2023-05-24 11:14:04,743:INFO:Creating metrics dataframe
2023-05-24 11:14:04,836:INFO:Uploading results into container
2023-05-24 11:14:04,836:INFO:Uploading model into container now
2023-05-24 11:14:04,837:INFO:_master_model_container: 10
2023-05-24 11:14:04,837:INFO:_display_container: 2
2023-05-24 11:14:04,837:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1084, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-24 11:14:04,837:INFO:create_model() successfully completed......................................
2023-05-24 11:14:04,928:INFO:SubProcess create_model() end ==================================
2023-05-24 11:14:04,928:INFO:Creating metrics dataframe
2023-05-24 11:14:04,933:INFO:Initializing Linear Discriminant Analysis
2023-05-24 11:14:04,933:INFO:Total runtime is 0.42055189609527593 minutes
2023-05-24 11:14:04,935:INFO:SubProcess create_model() called ==================================
2023-05-24 11:14:04,935:INFO:Initializing create_model()
2023-05-24 11:14:04,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2912878e0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:14:04,935:INFO:Checking exceptions
2023-05-24 11:14:04,935:INFO:Importing libraries
2023-05-24 11:14:04,935:INFO:Copying training dataset
2023-05-24 11:14:04,939:INFO:Defining folds
2023-05-24 11:14:04,939:INFO:Declaring metric variables
2023-05-24 11:14:04,941:INFO:Importing untrained model
2023-05-24 11:14:04,943:INFO:Linear Discriminant Analysis Imported successfully
2023-05-24 11:14:04,946:INFO:Starting cross validation
2023-05-24 11:14:04,947:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:14:05,451:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,452:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,453:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,457:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,460:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:05,460:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,461:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,463:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,463:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,464:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:05,466:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:05,469:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,469:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,469:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,473:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:05,476:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,483:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,486:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,490:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,493:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,494:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:05,496:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,497:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:05,500:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,503:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,509:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,509:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,513:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:05,515:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,518:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,523:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:05,528:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,876:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,882:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,885:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:05,888:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,890:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,896:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,899:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:05,901:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:05,959:INFO:Calculating mean and std
2023-05-24 11:14:05,960:INFO:Creating metrics dataframe
2023-05-24 11:14:06,033:INFO:Uploading results into container
2023-05-24 11:14:06,033:INFO:Uploading model into container now
2023-05-24 11:14:06,033:INFO:_master_model_container: 11
2023-05-24 11:14:06,033:INFO:_display_container: 2
2023-05-24 11:14:06,033:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-24 11:14:06,033:INFO:create_model() successfully completed......................................
2023-05-24 11:14:06,118:INFO:SubProcess create_model() end ==================================
2023-05-24 11:14:06,118:INFO:Creating metrics dataframe
2023-05-24 11:14:06,123:INFO:Initializing Extra Trees Classifier
2023-05-24 11:14:06,123:INFO:Total runtime is 0.44038324753443403 minutes
2023-05-24 11:14:06,125:INFO:SubProcess create_model() called ==================================
2023-05-24 11:14:06,125:INFO:Initializing create_model()
2023-05-24 11:14:06,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2912878e0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:14:06,125:INFO:Checking exceptions
2023-05-24 11:14:06,125:INFO:Importing libraries
2023-05-24 11:14:06,125:INFO:Copying training dataset
2023-05-24 11:14:06,127:INFO:Defining folds
2023-05-24 11:14:06,127:INFO:Declaring metric variables
2023-05-24 11:14:06,129:INFO:Importing untrained model
2023-05-24 11:14:06,130:INFO:Extra Trees Classifier Imported successfully
2023-05-24 11:14:06,133:INFO:Starting cross validation
2023-05-24 11:14:06,134:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:14:07,059:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,068:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,071:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:07,075:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,117:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,123:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,127:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:07,128:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,129:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,134:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,137:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:07,140:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,174:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,174:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,177:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,179:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,180:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,188:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,189:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:07,190:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,192:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,192:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:07,193:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:07,194:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,195:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,196:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,198:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:07,205:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,242:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,248:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,251:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:07,253:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,774:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,780:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,783:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:07,786:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,808:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,814:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,817:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:07,819:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:07,859:INFO:Calculating mean and std
2023-05-24 11:14:07,860:INFO:Creating metrics dataframe
2023-05-24 11:14:07,938:INFO:Uploading results into container
2023-05-24 11:14:07,938:INFO:Uploading model into container now
2023-05-24 11:14:07,939:INFO:_master_model_container: 12
2023-05-24 11:14:07,939:INFO:_display_container: 2
2023-05-24 11:14:07,939:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1084, verbose=0, warm_start=False)
2023-05-24 11:14:07,939:INFO:create_model() successfully completed......................................
2023-05-24 11:14:08,023:INFO:SubProcess create_model() end ==================================
2023-05-24 11:14:08,023:INFO:Creating metrics dataframe
2023-05-24 11:14:08,028:INFO:Initializing Light Gradient Boosting Machine
2023-05-24 11:14:08,028:INFO:Total runtime is 0.4721351305643718 minutes
2023-05-24 11:14:08,030:INFO:SubProcess create_model() called ==================================
2023-05-24 11:14:08,030:INFO:Initializing create_model()
2023-05-24 11:14:08,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2912878e0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:14:08,030:INFO:Checking exceptions
2023-05-24 11:14:08,030:INFO:Importing libraries
2023-05-24 11:14:08,030:INFO:Copying training dataset
2023-05-24 11:14:08,032:INFO:Defining folds
2023-05-24 11:14:08,032:INFO:Declaring metric variables
2023-05-24 11:14:08,034:INFO:Importing untrained model
2023-05-24 11:14:08,035:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-24 11:14:08,038:INFO:Starting cross validation
2023-05-24 11:14:08,039:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:14:10,333:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,340:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,344:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:10,347:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,357:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,368:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,378:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:10,382:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,384:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,394:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,398:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:10,400:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,400:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,415:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,423:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:10,429:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,435:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,441:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,445:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:10,447:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,449:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,453:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,454:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,457:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:10,457:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,460:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,470:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:10,487:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,508:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,520:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:10,526:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:10,531:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:11,829:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:11,835:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:11,838:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:11,841:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:11,847:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:11,852:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:11,855:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:11,858:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:11,909:INFO:Calculating mean and std
2023-05-24 11:14:11,909:INFO:Creating metrics dataframe
2023-05-24 11:14:11,988:INFO:Uploading results into container
2023-05-24 11:14:11,989:INFO:Uploading model into container now
2023-05-24 11:14:11,989:INFO:_master_model_container: 13
2023-05-24 11:14:11,989:INFO:_display_container: 2
2023-05-24 11:14:11,989:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1084, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-24 11:14:11,989:INFO:create_model() successfully completed......................................
2023-05-24 11:14:12,074:INFO:SubProcess create_model() end ==================================
2023-05-24 11:14:12,074:INFO:Creating metrics dataframe
2023-05-24 11:14:12,079:INFO:Initializing Dummy Classifier
2023-05-24 11:14:12,079:INFO:Total runtime is 0.5396448969841003 minutes
2023-05-24 11:14:12,080:INFO:SubProcess create_model() called ==================================
2023-05-24 11:14:12,080:INFO:Initializing create_model()
2023-05-24 11:14:12,080:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2912878e0>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:14:12,080:INFO:Checking exceptions
2023-05-24 11:14:12,080:INFO:Importing libraries
2023-05-24 11:14:12,080:INFO:Copying training dataset
2023-05-24 11:14:12,083:INFO:Defining folds
2023-05-24 11:14:12,083:INFO:Declaring metric variables
2023-05-24 11:14:12,084:INFO:Importing untrained model
2023-05-24 11:14:12,085:INFO:Dummy Classifier Imported successfully
2023-05-24 11:14:12,088:INFO:Starting cross validation
2023-05-24 11:14:12,089:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:14:12,483:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,489:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,492:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:12,495:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,503:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,509:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,512:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:12,515:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,517:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,517:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,524:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,524:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,527:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:12,530:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,530:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:12,533:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,541:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,547:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,549:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,549:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,550:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:12,553:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,555:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,555:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,558:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:12,558:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:12,560:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,561:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,581:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,586:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,590:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:12,592:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,896:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,902:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,905:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:12,907:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,921:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,927:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:12,930:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:12,932:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,026:INFO:Calculating mean and std
2023-05-24 11:14:13,027:INFO:Creating metrics dataframe
2023-05-24 11:14:13,101:INFO:Uploading results into container
2023-05-24 11:14:13,102:INFO:Uploading model into container now
2023-05-24 11:14:13,102:INFO:_master_model_container: 14
2023-05-24 11:14:13,102:INFO:_display_container: 2
2023-05-24 11:14:13,102:INFO:DummyClassifier(constant=None, random_state=1084, strategy='prior')
2023-05-24 11:14:13,102:INFO:create_model() successfully completed......................................
2023-05-24 11:14:13,188:INFO:SubProcess create_model() end ==================================
2023-05-24 11:14:13,188:INFO:Creating metrics dataframe
2023-05-24 11:14:13,197:INFO:Initializing create_model()
2023-05-24 11:14:13,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1084, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:14:13,197:INFO:Checking exceptions
2023-05-24 11:14:13,198:INFO:Importing libraries
2023-05-24 11:14:13,198:INFO:Copying training dataset
2023-05-24 11:14:13,201:INFO:Defining folds
2023-05-24 11:14:13,201:INFO:Declaring metric variables
2023-05-24 11:14:13,201:INFO:Importing untrained model
2023-05-24 11:14:13,201:INFO:Declaring custom model
2023-05-24 11:14:13,201:INFO:Decision Tree Classifier Imported successfully
2023-05-24 11:14:13,202:INFO:Cross validation set to False
2023-05-24 11:14:13,202:INFO:Fitting Model
2023-05-24 11:14:13,385:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1084, splitter='best')
2023-05-24 11:14:13,385:INFO:create_model() successfully completed......................................
2023-05-24 11:14:13,482:INFO:_master_model_container: 14
2023-05-24 11:14:13,482:INFO:_display_container: 2
2023-05-24 11:14:13,482:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1084, splitter='best')
2023-05-24 11:14:13,482:INFO:compare_models() successfully completed......................................
2023-05-24 11:14:13,483:INFO:Initializing create_model()
2023-05-24 11:14:13,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:14:13,483:INFO:Checking exceptions
2023-05-24 11:14:13,488:INFO:Importing libraries
2023-05-24 11:14:13,488:INFO:Copying training dataset
2023-05-24 11:14:13,493:INFO:Defining folds
2023-05-24 11:14:13,493:INFO:Declaring metric variables
2023-05-24 11:14:13,495:INFO:Importing untrained model
2023-05-24 11:14:13,497:INFO:Logistic Regression Imported successfully
2023-05-24 11:14:13,500:INFO:Starting cross validation
2023-05-24 11:14:13,500:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:14:13,901:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,908:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,911:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,916:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:13,918:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,922:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:13,925:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,926:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,927:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,927:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,937:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,940:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,943:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:13,944:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,944:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:13,947:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,950:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,950:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,953:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:13,954:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,956:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,962:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,967:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,968:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:13,971:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,973:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:13,976:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:13,979:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:14,006:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:14,012:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:14,015:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:14,018:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:14,345:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:14,351:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:14,354:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:14,356:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:14,360:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:14,366:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:14,369:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:14,372:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:14,445:INFO:Calculating mean and std
2023-05-24 11:14:14,446:INFO:Creating metrics dataframe
2023-05-24 11:14:14,448:INFO:Finalizing model
2023-05-24 11:14:15,557:INFO:Uploading results into container
2023-05-24 11:14:15,557:INFO:Uploading model into container now
2023-05-24 11:14:15,561:INFO:_master_model_container: 15
2023-05-24 11:14:15,561:INFO:_display_container: 3
2023-05-24 11:14:15,562:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1084, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-24 11:14:15,562:INFO:create_model() successfully completed......................................
2023-05-24 11:14:15,649:INFO:Initializing predict_model()
2023-05-24 11:14:15,649:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x28fa77700>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1084, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x29102d630>)
2023-05-24 11:14:15,649:INFO:Checking exceptions
2023-05-24 11:14:15,649:INFO:Preloading libraries
2023-05-24 11:14:15,650:INFO:Set up data.
2023-05-24 11:14:15,651:INFO:Set up index.
2023-05-24 11:14:38,743:INFO:PyCaret ClassificationExperiment
2023-05-24 11:14:38,743:INFO:Logging name: clf-default-name
2023-05-24 11:14:38,743:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-24 11:14:38,743:INFO:version 3.0.2
2023-05-24 11:14:38,743:INFO:Initializing setup()
2023-05-24 11:14:38,743:INFO:self.USI: f304
2023-05-24 11:14:38,743:INFO:self._variable_keys: {'logging_param', 'X', 'target_param', 'USI', 'gpu_param', 'fix_imbalance', 'y_test', 'seed', 'is_multiclass', '_ml_usecase', 'gpu_n_jobs_param', 'pipeline', '_available_plots', 'n_jobs_param', 'y_train', 'y', 'exp_id', 'idx', 'fold_shuffle_param', 'data', 'X_test', 'fold_groups_param', 'fold_generator', 'exp_name_log', 'X_train', 'html_param', 'log_plots_param', 'memory'}
2023-05-24 11:14:38,743:INFO:Checking environment
2023-05-24 11:14:38,743:INFO:python_version: 3.10.9
2023-05-24 11:14:38,743:INFO:python_build: ('main', 'Mar  1 2023 12:20:14')
2023-05-24 11:14:38,743:INFO:machine: arm64
2023-05-24 11:14:38,743:INFO:platform: macOS-13.3.1-arm64-arm-64bit
2023-05-24 11:14:38,743:INFO:Memory: svmem(total=17179869184, available=5509595136, percent=67.9, used=7557251072, free=257490944, active=5219057664, inactive=5210226688, wired=2338193408)
2023-05-24 11:14:38,743:INFO:Physical Core: 8
2023-05-24 11:14:38,743:INFO:Logical Core: 8
2023-05-24 11:14:38,743:INFO:Checking libraries
2023-05-24 11:14:38,743:INFO:System:
2023-05-24 11:14:38,743:INFO:    python: 3.10.9 (main, Mar  1 2023, 12:20:14) [Clang 14.0.6 ]
2023-05-24 11:14:38,743:INFO:executable: /Users/corneliusvincent/anaconda3/bin/python
2023-05-24 11:14:38,743:INFO:   machine: macOS-13.3.1-arm64-arm-64bit
2023-05-24 11:14:38,743:INFO:PyCaret required dependencies:
2023-05-24 11:14:38,743:INFO:                 pip: 23.1.2
2023-05-24 11:14:38,743:INFO:          setuptools: 65.6.3
2023-05-24 11:14:38,743:INFO:             pycaret: 3.0.2
2023-05-24 11:14:38,743:INFO:             IPython: 8.10.0
2023-05-24 11:14:38,743:INFO:          ipywidgets: 8.0.6
2023-05-24 11:14:38,743:INFO:                tqdm: 4.64.1
2023-05-24 11:14:38,743:INFO:               numpy: 1.23.5
2023-05-24 11:14:38,743:INFO:              pandas: 1.5.3
2023-05-24 11:14:38,743:INFO:              jinja2: 3.1.2
2023-05-24 11:14:38,743:INFO:               scipy: 1.9.3
2023-05-24 11:14:38,743:INFO:              joblib: 1.2.0
2023-05-24 11:14:38,743:INFO:             sklearn: 1.2.2
2023-05-24 11:14:38,743:INFO:                pyod: 1.0.9
2023-05-24 11:14:38,743:INFO:            imblearn: 0.10.1
2023-05-24 11:14:38,743:INFO:   category_encoders: 2.6.1
2023-05-24 11:14:38,743:INFO:            lightgbm: 3.3.5
2023-05-24 11:14:38,743:INFO:               numba: 0.56.4
2023-05-24 11:14:38,743:INFO:            requests: 2.28.1
2023-05-24 11:14:38,743:INFO:          matplotlib: 3.6.3
2023-05-24 11:14:38,743:INFO:          scikitplot: 0.3.7
2023-05-24 11:14:38,743:INFO:         yellowbrick: 1.5
2023-05-24 11:14:38,743:INFO:              plotly: 5.9.0
2023-05-24 11:14:38,743:INFO:             kaleido: 0.2.1
2023-05-24 11:14:38,743:INFO:         statsmodels: 0.13.5
2023-05-24 11:14:38,743:INFO:              sktime: 0.17.0
2023-05-24 11:14:38,743:INFO:               tbats: 1.1.3
2023-05-24 11:14:38,743:INFO:            pmdarima: 2.0.3
2023-05-24 11:14:38,743:INFO:              psutil: 5.9.0
2023-05-24 11:14:38,743:INFO:PyCaret optional dependencies:
2023-05-24 11:14:38,743:INFO:                shap: Not installed
2023-05-24 11:14:38,743:INFO:           interpret: Not installed
2023-05-24 11:14:38,743:INFO:                umap: Not installed
2023-05-24 11:14:38,743:INFO:    pandas_profiling: 4.1.2
2023-05-24 11:14:38,743:INFO:  explainerdashboard: Not installed
2023-05-24 11:14:38,743:INFO:             autoviz: Not installed
2023-05-24 11:14:38,743:INFO:           fairlearn: Not installed
2023-05-24 11:14:38,743:INFO:             xgboost: Not installed
2023-05-24 11:14:38,743:INFO:            catboost: Not installed
2023-05-24 11:14:38,743:INFO:              kmodes: Not installed
2023-05-24 11:14:38,744:INFO:             mlxtend: Not installed
2023-05-24 11:14:38,744:INFO:       statsforecast: Not installed
2023-05-24 11:14:38,744:INFO:        tune_sklearn: Not installed
2023-05-24 11:14:38,744:INFO:                 ray: Not installed
2023-05-24 11:14:38,744:INFO:            hyperopt: Not installed
2023-05-24 11:14:38,744:INFO:              optuna: Not installed
2023-05-24 11:14:38,744:INFO:               skopt: Not installed
2023-05-24 11:14:38,744:INFO:              mlflow: Not installed
2023-05-24 11:14:38,744:INFO:              gradio: Not installed
2023-05-24 11:14:38,744:INFO:             fastapi: Not installed
2023-05-24 11:14:38,744:INFO:             uvicorn: Not installed
2023-05-24 11:14:38,744:INFO:              m2cgen: Not installed
2023-05-24 11:14:38,744:INFO:           evidently: Not installed
2023-05-24 11:14:38,744:INFO:               fugue: Not installed
2023-05-24 11:14:38,744:INFO:           streamlit: 1.22.0
2023-05-24 11:14:38,744:INFO:             prophet: Not installed
2023-05-24 11:14:38,744:INFO:None
2023-05-24 11:14:38,744:INFO:Set up data.
2023-05-24 11:14:38,765:INFO:Set up train/test split.
2023-05-24 11:14:38,786:INFO:Set up index.
2023-05-24 11:14:38,787:INFO:Set up folding strategy.
2023-05-24 11:14:38,787:INFO:Assigning column types.
2023-05-24 11:14:38,788:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-24 11:14:38,807:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-24 11:14:38,807:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 11:14:38,819:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:14:38,819:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:14:38,838:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-24 11:14:38,839:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 11:14:38,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:14:38,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:14:38,851:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-24 11:14:38,871:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 11:14:38,883:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:14:38,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:14:38,903:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-24 11:14:38,914:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:14:38,914:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:14:38,915:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-24 11:14:38,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:14:38,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:14:38,977:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:14:38,977:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:14:38,977:INFO:Preparing preprocessing pipeline...
2023-05-24 11:14:38,978:INFO:Set up label encoding.
2023-05-24 11:14:38,978:INFO:Set up simple imputation.
2023-05-24 11:14:38,979:INFO:Set up encoding of categorical features.
2023-05-24 11:14:39,088:INFO:Finished creating preprocessing pipeline.
2023-05-24 11:14:39,090:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/nz/xhcvl6_17cb_xn608wktx0bc0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Clean_Text'],
                                    transformer=TargetEncoder(cols=['Clean_Text'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-24 11:14:39,090:INFO:Creating final display dataframe.
2023-05-24 11:14:39,426:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8          Categorical features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13     Maximum one-hot encoding   
14              Encoding method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                2248  
1                                             Emotion  
2                                          Multiclass  
3   anger: 0, disgust: 1, fear: 2, joy: 3, neutral...  
4                                          (34792, 2)  
5                                          (34792, 2)  
6                                          (24354, 2)  
7                                          (10438, 2)  
8                                                   1  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                                 25  
14                                               None  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               f304  
2023-05-24 11:14:39,461:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:14:39,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:14:39,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:14:39,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-24 11:14:39,494:INFO:setup() successfully completed in 0.8s...............
2023-05-24 11:14:39,494:INFO:Initializing compare_models()
2023-05-24 11:14:39,494:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-24 11:14:39,494:INFO:Checking exceptions
2023-05-24 11:14:39,496:INFO:Preparing display monitor
2023-05-24 11:14:39,506:INFO:Initializing Logistic Regression
2023-05-24 11:14:39,506:INFO:Total runtime is 2.5192896525065104e-06 minutes
2023-05-24 11:14:39,507:INFO:SubProcess create_model() called ==================================
2023-05-24 11:14:39,508:INFO:Initializing create_model()
2023-05-24 11:14:39,508:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x288b1cf70>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:14:39,508:INFO:Checking exceptions
2023-05-24 11:14:39,508:INFO:Importing libraries
2023-05-24 11:14:39,508:INFO:Copying training dataset
2023-05-24 11:14:39,512:INFO:Defining folds
2023-05-24 11:14:39,512:INFO:Declaring metric variables
2023-05-24 11:14:39,514:INFO:Importing untrained model
2023-05-24 11:14:39,516:INFO:Logistic Regression Imported successfully
2023-05-24 11:14:39,519:INFO:Starting cross validation
2023-05-24 11:14:39,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:14:41,107:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,113:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,123:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,127:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:41,127:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,131:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:41,135:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,137:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,320:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,326:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,330:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:41,333:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,366:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,385:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,398:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:41,402:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,627:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,633:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,636:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:41,639:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,654:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,660:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,664:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:41,668:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,704:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,713:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,718:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:41,721:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,759:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,765:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:41,768:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:41,771:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:42,511:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:42,516:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:42,519:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:42,522:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:42,819:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:42,825:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:42,828:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:42,830:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:42,839:INFO:Calculating mean and std
2023-05-24 11:14:42,840:INFO:Creating metrics dataframe
2023-05-24 11:14:42,924:INFO:Uploading results into container
2023-05-24 11:14:42,925:INFO:Uploading model into container now
2023-05-24 11:14:42,925:INFO:_master_model_container: 1
2023-05-24 11:14:42,925:INFO:_display_container: 2
2023-05-24 11:14:42,925:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2248, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-24 11:14:42,925:INFO:create_model() successfully completed......................................
2023-05-24 11:14:43,012:INFO:SubProcess create_model() end ==================================
2023-05-24 11:14:43,012:INFO:Creating metrics dataframe
2023-05-24 11:14:43,015:INFO:Initializing K Neighbors Classifier
2023-05-24 11:14:43,015:INFO:Total runtime is 0.05849505265553793 minutes
2023-05-24 11:14:43,017:INFO:SubProcess create_model() called ==================================
2023-05-24 11:14:43,017:INFO:Initializing create_model()
2023-05-24 11:14:43,017:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x288b1cf70>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:14:43,017:INFO:Checking exceptions
2023-05-24 11:14:43,017:INFO:Importing libraries
2023-05-24 11:14:43,017:INFO:Copying training dataset
2023-05-24 11:14:43,019:INFO:Defining folds
2023-05-24 11:14:43,019:INFO:Declaring metric variables
2023-05-24 11:14:43,021:INFO:Importing untrained model
2023-05-24 11:14:43,022:INFO:K Neighbors Classifier Imported successfully
2023-05-24 11:14:43,025:INFO:Starting cross validation
2023-05-24 11:14:43,026:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:14:43,475:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,481:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,484:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:43,487:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,487:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,498:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,505:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,506:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,510:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:43,512:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,512:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,516:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:43,518:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,522:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:43,524:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,525:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,540:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,546:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,551:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:43,554:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,575:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,581:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,584:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:43,585:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,587:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,594:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,598:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,600:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,603:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:43,605:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:43,606:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,608:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,884:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,890:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,893:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:43,895:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,961:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,967:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:43,970:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:43,972:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,012:INFO:Calculating mean and std
2023-05-24 11:14:44,013:INFO:Creating metrics dataframe
2023-05-24 11:14:44,091:INFO:Uploading results into container
2023-05-24 11:14:44,092:INFO:Uploading model into container now
2023-05-24 11:14:44,092:INFO:_master_model_container: 2
2023-05-24 11:14:44,092:INFO:_display_container: 2
2023-05-24 11:14:44,092:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-24 11:14:44,092:INFO:create_model() successfully completed......................................
2023-05-24 11:14:44,175:INFO:SubProcess create_model() end ==================================
2023-05-24 11:14:44,175:INFO:Creating metrics dataframe
2023-05-24 11:14:44,179:INFO:Initializing Naive Bayes
2023-05-24 11:14:44,179:INFO:Total runtime is 0.07788097063700358 minutes
2023-05-24 11:14:44,180:INFO:SubProcess create_model() called ==================================
2023-05-24 11:14:44,180:INFO:Initializing create_model()
2023-05-24 11:14:44,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x288b1cf70>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:14:44,180:INFO:Checking exceptions
2023-05-24 11:14:44,180:INFO:Importing libraries
2023-05-24 11:14:44,180:INFO:Copying training dataset
2023-05-24 11:14:44,182:INFO:Defining folds
2023-05-24 11:14:44,182:INFO:Declaring metric variables
2023-05-24 11:14:44,184:INFO:Importing untrained model
2023-05-24 11:14:44,185:INFO:Naive Bayes Imported successfully
2023-05-24 11:14:44,188:INFO:Starting cross validation
2023-05-24 11:14:44,189:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:14:44,618:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,624:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,627:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,630:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:44,633:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,635:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,638:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:44,641:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,650:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,657:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,658:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,662:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:44,662:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,664:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,666:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,667:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:44,669:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,674:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,679:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:44,682:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,684:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,685:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,689:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,691:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,693:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:44,694:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:44,695:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,697:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,702:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,703:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:44,709:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:44,719:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,028:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,034:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,037:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:45,040:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,072:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,078:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,081:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:45,084:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,184:INFO:Calculating mean and std
2023-05-24 11:14:45,184:INFO:Creating metrics dataframe
2023-05-24 11:14:45,263:INFO:Uploading results into container
2023-05-24 11:14:45,263:INFO:Uploading model into container now
2023-05-24 11:14:45,264:INFO:_master_model_container: 3
2023-05-24 11:14:45,264:INFO:_display_container: 2
2023-05-24 11:14:45,264:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-24 11:14:45,264:INFO:create_model() successfully completed......................................
2023-05-24 11:14:45,348:INFO:SubProcess create_model() end ==================================
2023-05-24 11:14:45,348:INFO:Creating metrics dataframe
2023-05-24 11:14:45,352:INFO:Initializing Decision Tree Classifier
2023-05-24 11:14:45,352:INFO:Total runtime is 0.09743442138036093 minutes
2023-05-24 11:14:45,353:INFO:SubProcess create_model() called ==================================
2023-05-24 11:14:45,353:INFO:Initializing create_model()
2023-05-24 11:14:45,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x288b1cf70>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:14:45,353:INFO:Checking exceptions
2023-05-24 11:14:45,353:INFO:Importing libraries
2023-05-24 11:14:45,353:INFO:Copying training dataset
2023-05-24 11:14:45,357:INFO:Defining folds
2023-05-24 11:14:45,357:INFO:Declaring metric variables
2023-05-24 11:14:45,358:INFO:Importing untrained model
2023-05-24 11:14:45,360:INFO:Decision Tree Classifier Imported successfully
2023-05-24 11:14:45,363:INFO:Starting cross validation
2023-05-24 11:14:45,364:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:14:45,758:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,764:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,767:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:45,770:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,802:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,808:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,813:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,813:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:45,819:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,821:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,822:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:45,823:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,825:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,833:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,837:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,839:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,842:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:45,842:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:45,844:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,845:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,858:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,864:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,868:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:45,869:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,870:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,878:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,881:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:45,884:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,949:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,956:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:45,959:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:45,962:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:46,189:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:46,194:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:46,197:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:46,200:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:46,212:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:46,217:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:46,220:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:46,223:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:46,312:INFO:Calculating mean and std
2023-05-24 11:14:46,313:INFO:Creating metrics dataframe
2023-05-24 11:14:46,390:INFO:Uploading results into container
2023-05-24 11:14:46,390:INFO:Uploading model into container now
2023-05-24 11:14:46,390:INFO:_master_model_container: 4
2023-05-24 11:14:46,390:INFO:_display_container: 2
2023-05-24 11:14:46,391:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2248, splitter='best')
2023-05-24 11:14:46,391:INFO:create_model() successfully completed......................................
2023-05-24 11:14:46,476:INFO:SubProcess create_model() end ==================================
2023-05-24 11:14:46,476:INFO:Creating metrics dataframe
2023-05-24 11:14:46,480:INFO:Initializing SVM - Linear Kernel
2023-05-24 11:14:46,480:INFO:Total runtime is 0.11624025106430055 minutes
2023-05-24 11:14:46,481:INFO:SubProcess create_model() called ==================================
2023-05-24 11:14:46,482:INFO:Initializing create_model()
2023-05-24 11:14:46,482:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x288b1cf70>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:14:46,482:INFO:Checking exceptions
2023-05-24 11:14:46,482:INFO:Importing libraries
2023-05-24 11:14:46,482:INFO:Copying training dataset
2023-05-24 11:14:46,484:INFO:Defining folds
2023-05-24 11:14:46,484:INFO:Declaring metric variables
2023-05-24 11:14:46,485:INFO:Importing untrained model
2023-05-24 11:14:46,487:INFO:SVM - Linear Kernel Imported successfully
2023-05-24 11:14:46,489:INFO:Starting cross validation
2023-05-24 11:14:46,490:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:14:47,033:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:14:47,036:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,042:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,045:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:47,048:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,054:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:14:47,057:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,068:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:14:47,070:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,074:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,076:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:14:47,078:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,080:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:14:47,082:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:47,082:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,083:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,084:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,087:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:47,088:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:47,088:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,090:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,091:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:14:47,091:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,091:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:47,092:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,094:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,096:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,101:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:14:47,106:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,108:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,113:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:47,113:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:14:47,116:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,118:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,119:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,121:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:47,121:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,124:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,125:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:47,127:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,473:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:14:47,475:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,481:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,484:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:47,487:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,496:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-24 11:14:47,499:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,504:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,507:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:47,510:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:47,588:INFO:Calculating mean and std
2023-05-24 11:14:47,589:INFO:Creating metrics dataframe
2023-05-24 11:14:47,664:INFO:Uploading results into container
2023-05-24 11:14:47,665:INFO:Uploading model into container now
2023-05-24 11:14:47,665:INFO:_master_model_container: 5
2023-05-24 11:14:47,665:INFO:_display_container: 2
2023-05-24 11:14:47,666:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2248, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-24 11:14:47,666:INFO:create_model() successfully completed......................................
2023-05-24 11:14:47,752:INFO:SubProcess create_model() end ==================================
2023-05-24 11:14:47,752:INFO:Creating metrics dataframe
2023-05-24 11:14:47,756:INFO:Initializing Ridge Classifier
2023-05-24 11:14:47,756:INFO:Total runtime is 0.13750540415445967 minutes
2023-05-24 11:14:47,757:INFO:SubProcess create_model() called ==================================
2023-05-24 11:14:47,758:INFO:Initializing create_model()
2023-05-24 11:14:47,758:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x288b1cf70>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:14:47,758:INFO:Checking exceptions
2023-05-24 11:14:47,758:INFO:Importing libraries
2023-05-24 11:14:47,758:INFO:Copying training dataset
2023-05-24 11:14:47,761:INFO:Defining folds
2023-05-24 11:14:47,761:INFO:Declaring metric variables
2023-05-24 11:14:47,762:INFO:Importing untrained model
2023-05-24 11:14:47,764:INFO:Ridge Classifier Imported successfully
2023-05-24 11:14:47,767:INFO:Starting cross validation
2023-05-24 11:14:47,767:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:14:48,045:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:14:48,047:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,053:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,057:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:48,059:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,092:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:14:48,095:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,107:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,110:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:48,113:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,118:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:14:48,120:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,124:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:14:48,126:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,126:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,130:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:48,132:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,137:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,138:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:14:48,142:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:14:48,142:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,145:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,146:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:48,147:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:14:48,148:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,150:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,150:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,151:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:48,154:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:48,154:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,156:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,157:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:14:48,158:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,159:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,161:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,168:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:48,171:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,173:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,181:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:48,183:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,393:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:14:48,396:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,401:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,405:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:48,407:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,468:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-24 11:14:48,471:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,476:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,480:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:48,482:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:48,612:INFO:Calculating mean and std
2023-05-24 11:14:48,613:INFO:Creating metrics dataframe
2023-05-24 11:14:48,688:INFO:Uploading results into container
2023-05-24 11:14:48,688:INFO:Uploading model into container now
2023-05-24 11:14:48,688:INFO:_master_model_container: 6
2023-05-24 11:14:48,688:INFO:_display_container: 2
2023-05-24 11:14:48,689:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2248, solver='auto',
                tol=0.0001)
2023-05-24 11:14:48,689:INFO:create_model() successfully completed......................................
2023-05-24 11:14:48,775:INFO:SubProcess create_model() end ==================================
2023-05-24 11:14:48,775:INFO:Creating metrics dataframe
2023-05-24 11:14:48,779:INFO:Initializing Random Forest Classifier
2023-05-24 11:14:48,779:INFO:Total runtime is 0.1545614878336589 minutes
2023-05-24 11:14:48,781:INFO:SubProcess create_model() called ==================================
2023-05-24 11:14:48,781:INFO:Initializing create_model()
2023-05-24 11:14:48,781:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x288b1cf70>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:14:48,781:INFO:Checking exceptions
2023-05-24 11:14:48,781:INFO:Importing libraries
2023-05-24 11:14:48,781:INFO:Copying training dataset
2023-05-24 11:14:48,783:INFO:Defining folds
2023-05-24 11:14:48,783:INFO:Declaring metric variables
2023-05-24 11:14:48,785:INFO:Importing untrained model
2023-05-24 11:14:48,786:INFO:Random Forest Classifier Imported successfully
2023-05-24 11:14:48,790:INFO:Starting cross validation
2023-05-24 11:14:48,790:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:14:49,810:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,812:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,819:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,820:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,822:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,826:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:49,827:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,828:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,830:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:49,832:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:49,833:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,834:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,834:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,835:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,840:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:49,844:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,912:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,920:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,924:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,926:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:49,928:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,928:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,931:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,932:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,937:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,938:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,943:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:49,943:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:49,944:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:49,947:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,948:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:49,953:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:50,555:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:50,558:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:50,560:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:50,563:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:50,563:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:50,566:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:50,566:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:50,569:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:50,644:INFO:Calculating mean and std
2023-05-24 11:14:50,645:INFO:Creating metrics dataframe
2023-05-24 11:14:50,723:INFO:Uploading results into container
2023-05-24 11:14:50,723:INFO:Uploading model into container now
2023-05-24 11:14:50,723:INFO:_master_model_container: 7
2023-05-24 11:14:50,724:INFO:_display_container: 2
2023-05-24 11:14:50,724:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2248, verbose=0, warm_start=False)
2023-05-24 11:14:50,724:INFO:create_model() successfully completed......................................
2023-05-24 11:14:50,807:INFO:SubProcess create_model() end ==================================
2023-05-24 11:14:50,807:INFO:Creating metrics dataframe
2023-05-24 11:14:50,811:INFO:Initializing Quadratic Discriminant Analysis
2023-05-24 11:14:50,811:INFO:Total runtime is 0.18842773437500004 minutes
2023-05-24 11:14:50,813:INFO:SubProcess create_model() called ==================================
2023-05-24 11:14:50,813:INFO:Initializing create_model()
2023-05-24 11:14:50,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x288b1cf70>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:14:50,813:INFO:Checking exceptions
2023-05-24 11:14:50,813:INFO:Importing libraries
2023-05-24 11:14:50,813:INFO:Copying training dataset
2023-05-24 11:14:50,815:INFO:Defining folds
2023-05-24 11:14:50,815:INFO:Declaring metric variables
2023-05-24 11:14:50,817:INFO:Importing untrained model
2023-05-24 11:14:50,818:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-24 11:14:50,821:INFO:Starting cross validation
2023-05-24 11:14:50,821:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:14:51,028:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:14:51,078:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:14:51,134:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:14:51,219:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,228:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,231:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:51,234:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,246:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,252:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,255:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:51,258:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,268:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,273:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,279:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,282:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,283:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:51,286:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,291:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:51,294:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,297:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,299:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,300:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,303:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:51,305:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,306:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,308:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:51,308:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,311:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,320:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,323:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:51,326:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,354:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,362:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,365:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:51,368:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,569:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-24 11:14:51,631:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,637:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,640:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:51,643:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,716:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,722:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,725:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:51,728:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:51,795:INFO:Calculating mean and std
2023-05-24 11:14:51,795:INFO:Creating metrics dataframe
2023-05-24 11:14:51,875:INFO:Uploading results into container
2023-05-24 11:14:51,876:INFO:Uploading model into container now
2023-05-24 11:14:51,876:INFO:_master_model_container: 8
2023-05-24 11:14:51,876:INFO:_display_container: 2
2023-05-24 11:14:51,876:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-24 11:14:51,876:INFO:create_model() successfully completed......................................
2023-05-24 11:14:51,960:INFO:SubProcess create_model() end ==================================
2023-05-24 11:14:51,960:INFO:Creating metrics dataframe
2023-05-24 11:14:51,965:INFO:Initializing Ada Boost Classifier
2023-05-24 11:14:51,965:INFO:Total runtime is 0.20765386819839482 minutes
2023-05-24 11:14:51,966:INFO:SubProcess create_model() called ==================================
2023-05-24 11:14:51,967:INFO:Initializing create_model()
2023-05-24 11:14:51,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x288b1cf70>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:14:51,967:INFO:Checking exceptions
2023-05-24 11:14:51,967:INFO:Importing libraries
2023-05-24 11:14:51,967:INFO:Copying training dataset
2023-05-24 11:14:51,969:INFO:Defining folds
2023-05-24 11:14:51,969:INFO:Declaring metric variables
2023-05-24 11:14:51,971:INFO:Importing untrained model
2023-05-24 11:14:51,972:INFO:Ada Boost Classifier Imported successfully
2023-05-24 11:14:51,975:INFO:Starting cross validation
2023-05-24 11:14:51,976:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:14:52,787:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,793:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,794:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,796:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:52,799:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,800:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,804:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:52,806:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,809:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,817:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,823:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,826:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,827:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:52,829:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,830:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:52,832:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,843:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,853:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,853:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,856:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:52,859:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,859:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,861:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,862:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:52,865:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,867:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,869:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,870:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:52,873:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,875:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:52,878:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:52,881:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:53,514:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:53,515:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:53,520:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:53,520:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:53,523:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:53,524:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:53,525:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:53,526:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:53,602:INFO:Calculating mean and std
2023-05-24 11:14:53,602:INFO:Creating metrics dataframe
2023-05-24 11:14:53,680:INFO:Uploading results into container
2023-05-24 11:14:53,680:INFO:Uploading model into container now
2023-05-24 11:14:53,680:INFO:_master_model_container: 9
2023-05-24 11:14:53,680:INFO:_display_container: 2
2023-05-24 11:14:53,681:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2248)
2023-05-24 11:14:53,681:INFO:create_model() successfully completed......................................
2023-05-24 11:14:53,764:INFO:SubProcess create_model() end ==================================
2023-05-24 11:14:53,764:INFO:Creating metrics dataframe
2023-05-24 11:14:53,769:INFO:Initializing Gradient Boosting Classifier
2023-05-24 11:14:53,769:INFO:Total runtime is 0.23771900335947677 minutes
2023-05-24 11:14:53,770:INFO:SubProcess create_model() called ==================================
2023-05-24 11:14:53,770:INFO:Initializing create_model()
2023-05-24 11:14:53,770:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x288b1cf70>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:14:53,771:INFO:Checking exceptions
2023-05-24 11:14:53,771:INFO:Importing libraries
2023-05-24 11:14:53,771:INFO:Copying training dataset
2023-05-24 11:14:53,774:INFO:Defining folds
2023-05-24 11:14:53,774:INFO:Declaring metric variables
2023-05-24 11:14:53,775:INFO:Importing untrained model
2023-05-24 11:14:53,777:INFO:Gradient Boosting Classifier Imported successfully
2023-05-24 11:14:53,780:INFO:Starting cross validation
2023-05-24 11:14:53,781:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:14:59,323:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,335:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,340:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:59,345:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,381:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,387:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,399:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,401:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,407:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:59,411:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:59,412:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,415:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,509:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,521:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,528:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:59,532:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,542:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,549:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,560:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,563:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,564:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,568:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:59,569:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:59,572:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,574:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,575:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,582:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:59,585:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,625:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,631:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:14:59,634:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:14:59,636:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:03,560:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:03,566:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:03,569:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:03,572:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:03,599:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:03,605:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:03,608:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:03,611:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:03,653:INFO:Calculating mean and std
2023-05-24 11:15:03,654:INFO:Creating metrics dataframe
2023-05-24 11:15:03,738:INFO:Uploading results into container
2023-05-24 11:15:03,738:INFO:Uploading model into container now
2023-05-24 11:15:03,738:INFO:_master_model_container: 10
2023-05-24 11:15:03,738:INFO:_display_container: 2
2023-05-24 11:15:03,738:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2248, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-24 11:15:03,738:INFO:create_model() successfully completed......................................
2023-05-24 11:15:03,823:INFO:SubProcess create_model() end ==================================
2023-05-24 11:15:03,823:INFO:Creating metrics dataframe
2023-05-24 11:15:03,828:INFO:Initializing Linear Discriminant Analysis
2023-05-24 11:15:03,828:INFO:Total runtime is 0.40536870161692307 minutes
2023-05-24 11:15:03,829:INFO:SubProcess create_model() called ==================================
2023-05-24 11:15:03,829:INFO:Initializing create_model()
2023-05-24 11:15:03,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x288b1cf70>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:15:03,829:INFO:Checking exceptions
2023-05-24 11:15:03,829:INFO:Importing libraries
2023-05-24 11:15:03,829:INFO:Copying training dataset
2023-05-24 11:15:03,832:INFO:Defining folds
2023-05-24 11:15:03,832:INFO:Declaring metric variables
2023-05-24 11:15:03,833:INFO:Importing untrained model
2023-05-24 11:15:03,834:INFO:Linear Discriminant Analysis Imported successfully
2023-05-24 11:15:03,837:INFO:Starting cross validation
2023-05-24 11:15:03,838:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:15:04,251:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,257:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,260:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:04,263:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,264:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,278:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,281:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,284:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:04,287:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,291:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:04,292:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,293:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,305:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,306:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,308:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,311:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,314:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:04,314:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,315:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,317:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,317:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:04,318:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:04,320:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,321:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,324:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,330:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,333:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:04,336:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,339:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,345:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,348:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:04,351:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,670:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,675:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,678:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:04,681:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,725:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,731:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,734:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:04,736:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:04,838:INFO:Calculating mean and std
2023-05-24 11:15:04,838:INFO:Creating metrics dataframe
2023-05-24 11:15:04,915:INFO:Uploading results into container
2023-05-24 11:15:04,915:INFO:Uploading model into container now
2023-05-24 11:15:04,915:INFO:_master_model_container: 11
2023-05-24 11:15:04,915:INFO:_display_container: 2
2023-05-24 11:15:04,916:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-24 11:15:04,916:INFO:create_model() successfully completed......................................
2023-05-24 11:15:04,999:INFO:SubProcess create_model() end ==================================
2023-05-24 11:15:04,999:INFO:Creating metrics dataframe
2023-05-24 11:15:05,004:INFO:Initializing Extra Trees Classifier
2023-05-24 11:15:05,004:INFO:Total runtime is 0.42496672074000047 minutes
2023-05-24 11:15:05,005:INFO:SubProcess create_model() called ==================================
2023-05-24 11:15:05,005:INFO:Initializing create_model()
2023-05-24 11:15:05,005:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x288b1cf70>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:15:05,005:INFO:Checking exceptions
2023-05-24 11:15:05,005:INFO:Importing libraries
2023-05-24 11:15:05,005:INFO:Copying training dataset
2023-05-24 11:15:05,007:INFO:Defining folds
2023-05-24 11:15:05,007:INFO:Declaring metric variables
2023-05-24 11:15:05,009:INFO:Importing untrained model
2023-05-24 11:15:05,010:INFO:Extra Trees Classifier Imported successfully
2023-05-24 11:15:05,013:INFO:Starting cross validation
2023-05-24 11:15:05,014:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:15:06,012:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,017:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,018:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,019:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,021:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:06,024:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,024:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,025:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,027:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:06,028:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:06,030:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,031:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,034:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,036:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,039:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,043:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:06,045:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,046:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,050:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,051:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,057:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:06,058:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,059:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,061:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:06,064:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,065:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,069:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:06,071:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,081:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,086:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,090:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:06,092:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,721:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,727:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,731:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:06,733:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,733:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,739:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,742:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:06,745:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:06,813:INFO:Calculating mean and std
2023-05-24 11:15:06,814:INFO:Creating metrics dataframe
2023-05-24 11:15:06,891:INFO:Uploading results into container
2023-05-24 11:15:06,892:INFO:Uploading model into container now
2023-05-24 11:15:06,892:INFO:_master_model_container: 12
2023-05-24 11:15:06,892:INFO:_display_container: 2
2023-05-24 11:15:06,892:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2248, verbose=0, warm_start=False)
2023-05-24 11:15:06,892:INFO:create_model() successfully completed......................................
2023-05-24 11:15:06,975:INFO:SubProcess create_model() end ==================================
2023-05-24 11:15:06,976:INFO:Creating metrics dataframe
2023-05-24 11:15:06,980:INFO:Initializing Light Gradient Boosting Machine
2023-05-24 11:15:06,980:INFO:Total runtime is 0.4579116344451905 minutes
2023-05-24 11:15:06,982:INFO:SubProcess create_model() called ==================================
2023-05-24 11:15:06,982:INFO:Initializing create_model()
2023-05-24 11:15:06,982:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x288b1cf70>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:15:06,982:INFO:Checking exceptions
2023-05-24 11:15:06,982:INFO:Importing libraries
2023-05-24 11:15:06,982:INFO:Copying training dataset
2023-05-24 11:15:06,984:INFO:Defining folds
2023-05-24 11:15:06,985:INFO:Declaring metric variables
2023-05-24 11:15:06,986:INFO:Importing untrained model
2023-05-24 11:15:06,987:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-24 11:15:06,990:INFO:Starting cross validation
2023-05-24 11:15:06,991:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:15:08,623:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,626:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,629:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,632:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,632:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:08,632:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,635:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,635:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:08,638:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,639:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,642:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:08,645:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,648:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,655:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,660:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,661:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,664:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:08,666:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,667:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,670:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:08,672:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,673:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,675:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:08,678:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,686:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,692:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,695:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:08,698:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,774:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,785:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:08,788:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:08,791:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,077:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,083:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,086:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:10,089:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,109:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,115:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,118:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:10,121:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,165:INFO:Calculating mean and std
2023-05-24 11:15:10,165:INFO:Creating metrics dataframe
2023-05-24 11:15:10,255:INFO:Uploading results into container
2023-05-24 11:15:10,256:INFO:Uploading model into container now
2023-05-24 11:15:10,256:INFO:_master_model_container: 13
2023-05-24 11:15:10,256:INFO:_display_container: 2
2023-05-24 11:15:10,256:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2248, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-24 11:15:10,256:INFO:create_model() successfully completed......................................
2023-05-24 11:15:10,339:INFO:SubProcess create_model() end ==================================
2023-05-24 11:15:10,339:INFO:Creating metrics dataframe
2023-05-24 11:15:10,344:INFO:Initializing Dummy Classifier
2023-05-24 11:15:10,344:INFO:Total runtime is 0.5139784534772238 minutes
2023-05-24 11:15:10,346:INFO:SubProcess create_model() called ==================================
2023-05-24 11:15:10,346:INFO:Initializing create_model()
2023-05-24 11:15:10,346:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x288b1cf70>, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:15:10,346:INFO:Checking exceptions
2023-05-24 11:15:10,346:INFO:Importing libraries
2023-05-24 11:15:10,346:INFO:Copying training dataset
2023-05-24 11:15:10,348:INFO:Defining folds
2023-05-24 11:15:10,348:INFO:Declaring metric variables
2023-05-24 11:15:10,349:INFO:Importing untrained model
2023-05-24 11:15:10,351:INFO:Dummy Classifier Imported successfully
2023-05-24 11:15:10,353:INFO:Starting cross validation
2023-05-24 11:15:10,353:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:15:10,789:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,791:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,795:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,796:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,799:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,799:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:10,800:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,802:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:10,803:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,804:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:10,805:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,806:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,812:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,813:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,816:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:10,820:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,824:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,826:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,830:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,833:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:10,836:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,837:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,842:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:10,845:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,847:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,854:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,858:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:10,861:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,913:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,919:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:10,922:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:10,929:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:11,218:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:11,224:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:11,227:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:11,230:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:11,237:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:11,242:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:11,246:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:11,248:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:11,392:INFO:Calculating mean and std
2023-05-24 11:15:11,392:INFO:Creating metrics dataframe
2023-05-24 11:15:11,470:INFO:Uploading results into container
2023-05-24 11:15:11,470:INFO:Uploading model into container now
2023-05-24 11:15:11,470:INFO:_master_model_container: 14
2023-05-24 11:15:11,470:INFO:_display_container: 2
2023-05-24 11:15:11,470:INFO:DummyClassifier(constant=None, random_state=2248, strategy='prior')
2023-05-24 11:15:11,470:INFO:create_model() successfully completed......................................
2023-05-24 11:15:11,555:INFO:SubProcess create_model() end ==================================
2023-05-24 11:15:11,555:INFO:Creating metrics dataframe
2023-05-24 11:15:11,564:INFO:Initializing create_model()
2023-05-24 11:15:11,564:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2248), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:15:11,564:INFO:Checking exceptions
2023-05-24 11:15:11,565:INFO:Importing libraries
2023-05-24 11:15:11,565:INFO:Copying training dataset
2023-05-24 11:15:11,567:INFO:Defining folds
2023-05-24 11:15:11,567:INFO:Declaring metric variables
2023-05-24 11:15:11,567:INFO:Importing untrained model
2023-05-24 11:15:11,567:INFO:Declaring custom model
2023-05-24 11:15:11,567:INFO:Ada Boost Classifier Imported successfully
2023-05-24 11:15:11,568:INFO:Cross validation set to False
2023-05-24 11:15:11,568:INFO:Fitting Model
2023-05-24 11:15:12,014:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2248)
2023-05-24 11:15:12,015:INFO:create_model() successfully completed......................................
2023-05-24 11:15:12,109:INFO:_master_model_container: 14
2023-05-24 11:15:12,109:INFO:_display_container: 2
2023-05-24 11:15:12,110:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2248)
2023-05-24 11:15:12,110:INFO:compare_models() successfully completed......................................
2023-05-24 11:15:12,110:INFO:Initializing create_model()
2023-05-24 11:15:12,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-24 11:15:12,110:INFO:Checking exceptions
2023-05-24 11:15:12,116:INFO:Importing libraries
2023-05-24 11:15:12,116:INFO:Copying training dataset
2023-05-24 11:15:12,120:INFO:Defining folds
2023-05-24 11:15:12,120:INFO:Declaring metric variables
2023-05-24 11:15:12,121:INFO:Importing untrained model
2023-05-24 11:15:12,123:INFO:Logistic Regression Imported successfully
2023-05-24 11:15:12,126:INFO:Starting cross validation
2023-05-24 11:15:12,127:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-24 11:15:12,570:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,571:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,576:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,577:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,578:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,579:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:12,580:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:12,582:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,583:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,584:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,592:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,595:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,598:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:12,601:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,610:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:12,618:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,631:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,637:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,639:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,640:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:12,642:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,651:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,654:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:12,657:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,762:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,768:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,769:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,771:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:12,774:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,775:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:12,779:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:12,781:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:13,024:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:13,030:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:13,033:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:13,036:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:13,050:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:13,055:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:13,058:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-24 11:15:13,061:WARNING:/Users/corneliusvincent/anaconda3/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'surprise') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-24 11:15:13,235:INFO:Calculating mean and std
2023-05-24 11:15:13,235:INFO:Creating metrics dataframe
2023-05-24 11:15:13,238:INFO:Finalizing model
2023-05-24 11:15:14,607:INFO:Uploading results into container
2023-05-24 11:15:14,607:INFO:Uploading model into container now
2023-05-24 11:15:14,611:INFO:_master_model_container: 15
2023-05-24 11:15:14,611:INFO:_display_container: 3
2023-05-24 11:15:14,612:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2248, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-24 11:15:14,612:INFO:create_model() successfully completed......................................
2023-05-24 11:15:14,703:INFO:Initializing predict_model()
2023-05-24 11:15:14,703:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2248, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x289080790>)
2023-05-24 11:15:14,703:INFO:Checking exceptions
2023-05-24 11:15:14,703:INFO:Preloading libraries
2023-05-24 11:15:14,704:INFO:Set up data.
2023-05-24 11:15:14,705:INFO:Set up index.
2023-05-24 11:15:27,146:INFO:Initializing predict_model()
2023-05-24 11:15:27,146:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2917edc60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2248, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x28e84b760>)
2023-05-24 11:15:27,148:INFO:Checking exceptions
2023-05-24 11:15:27,148:INFO:Preloading libraries
2023-05-24 11:15:27,154:INFO:Set up data.
2023-05-24 11:15:27,156:INFO:Set up index.
